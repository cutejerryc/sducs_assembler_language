
option expr32
option casemap:none

; Begin of file winbase.hi
wchar_t		TEXTEQU		<wchar_t_xx>
va_list		TEXTEQU		<void>
; Begin of file windef.h
_WINDEF_		TEXTEQU		<>
BASETYPES		TEXTEQU		<>
ULONG		TYPEDEF		DWORD

PULONG		TYPEDEF		PTR ULONG

USHORT		TYPEDEF		WORD

PUSHORT		TYPEDEF		PTR USHORT

UCHAR		TYPEDEF		BYTE

PUCHAR		TYPEDEF		PTR UCHAR

PSZ		TYPEDEF		PTR SBYTE

MAX_PATH		EQU		260t
NULL		TEXTEQU		<((void *)0)>
FALSE		EQU		0t
TRUE		EQU		1t
_IN		TEXTEQU		<>
_OUT		TEXTEQU		<>
OPTIONAL		TEXTEQU		<>
_far		TEXTEQU		<>
_near		TEXTEQU		<>
_stdcall		TEXTEQU		<>
cdecl		TEXTEQU		<>
CDECL		TEXTEQU		<>
CALLBACK		TEXTEQU		<>
WINAPI		TEXTEQU		<>
APIENTRY		TEXTEQU		<WINAPI>
APIPRIVATE		TEXTEQU		<>
_PASCAL		TEXTEQU		<_stdcall>
_FAR		TEXTEQU		<_far>
_NEAR		TEXTEQU		<_near>
ifndef NO_CONST
CONST		TEXTEQU		<const>
endif
BOOL		TYPEDEF		SDWORD

FLOAT		TYPEDEF		REAL8

PFLOAT		TYPEDEF		PTR FLOAT

PBOOL		TYPEDEF		PTR BOOL

LPBOOL		TYPEDEF		PTR BOOL

PBYTE		TYPEDEF		PTR BYTE

LPBYTE		TYPEDEF		PTR BYTE

PINT		TYPEDEF		PTR SDWORD

LPINT		TYPEDEF		PTR SDWORD

PWORD		TYPEDEF		PTR WORD

LPWORD		TYPEDEF		PTR WORD

LPLONG		TYPEDEF		PTR SDWORD

PDWORD		TYPEDEF		PTR DWORD

LPDWORD		TYPEDEF		PTR DWORD

LPVOID		TYPEDEF		PTR 

_INT		TYPEDEF		SDWORD

UINT		TYPEDEF		DWORD

PUINT		TYPEDEF		PTR DWORD

; Begin of file .\winnt.h
_WINNT_		TEXTEQU		<>
; Begin of file .\ctype.h
_CRTAPI1		TEXTEQU		<>
_CRTAPI2		TEXTEQU		<>
wchar_t_xx		TYPEDEF		WORD

_WCHAR_T_DEFINED		TEXTEQU		<>
wint_t		TYPEDEF		wchar_t_xx

wctype_t		TYPEDEF		wchar_t_xx

_WCTYPE_T_DEFINED		TEXTEQU		<>
WEOF		TEXTEQU		<(wint_t)(0xFFFF)>
EXTERNDEF		STDCALL _ctype:WORD

EXTERNDEF		STDCALL _pctype:PTR WORD

EXTERNDEF		STDCALL _pwctype:PTR wctype_t

_UPPER		EQU		000000001h
_LOWER		EQU		000000002h
_DIGIT		EQU		000000004h
_SPACE		EQU		000000008h
_PUNCT		EQU		000000010h
_CONTROL		EQU		000000020h
_BLANK		EQU		000000040h
_HEX		EQU		000000080h
_ALPHA		EQU		000000003h
@proto_0		TYPEDEF		PROTO STDCALL :SDWORD
isalpha		PROTO		@proto_0

@proto_1		TYPEDEF		PROTO STDCALL :SDWORD
isupper		PROTO		@proto_1

@proto_2		TYPEDEF		PROTO STDCALL :SDWORD
islower		PROTO		@proto_2

@proto_3		TYPEDEF		PROTO STDCALL :SDWORD
isdigit		PROTO		@proto_3

@proto_4		TYPEDEF		PROTO STDCALL :SDWORD
isxdigit		PROTO		@proto_4

@proto_5		TYPEDEF		PROTO STDCALL :SDWORD
isspace		PROTO		@proto_5

@proto_6		TYPEDEF		PROTO STDCALL :SDWORD
ispunct		PROTO		@proto_6

@proto_7		TYPEDEF		PROTO STDCALL :SDWORD
isalnum		PROTO		@proto_7

@proto_8		TYPEDEF		PROTO STDCALL :SDWORD
isprint		PROTO		@proto_8

@proto_9		TYPEDEF		PROTO STDCALL :SDWORD
isgraph		PROTO		@proto_9

@proto_10		TYPEDEF		PROTO STDCALL :SDWORD
iscntrl		PROTO		@proto_10

@proto_11		TYPEDEF		PROTO STDCALL :SDWORD
toupper		PROTO		@proto_11

@proto_12		TYPEDEF		PROTO STDCALL :SDWORD
tolower		PROTO		@proto_12

@proto_13		TYPEDEF		PROTO STDCALL :SDWORD
_tolower		PROTO		@proto_13

@proto_14		TYPEDEF		PROTO STDCALL :SDWORD
_toupper		PROTO		@proto_14

@proto_15		TYPEDEF		PROTO STDCALL :SDWORD
__isascii		PROTO		@proto_15

@proto_16		TYPEDEF		PROTO STDCALL :SDWORD
__toascii		PROTO		@proto_16

@proto_17		TYPEDEF		PROTO STDCALL :SDWORD
__iscsymf		PROTO		@proto_17

@proto_18		TYPEDEF		PROTO STDCALL :SDWORD
__iscsym		PROTO		@proto_18

_CTYPE_DEFINED		TEXTEQU		<>
@proto_19		TYPEDEF		PROTO STDCALL :wint_t
iswalpha		PROTO		@proto_19

@proto_20		TYPEDEF		PROTO STDCALL :wint_t
iswupper		PROTO		@proto_20

@proto_21		TYPEDEF		PROTO STDCALL :wint_t
iswlower		PROTO		@proto_21

@proto_22		TYPEDEF		PROTO STDCALL :wint_t
iswdigit		PROTO		@proto_22

@proto_23		TYPEDEF		PROTO STDCALL :wint_t
iswxdigit		PROTO		@proto_23

@proto_24		TYPEDEF		PROTO STDCALL :wint_t
iswspace		PROTO		@proto_24

@proto_25		TYPEDEF		PROTO STDCALL :wint_t
iswpunct		PROTO		@proto_25

@proto_26		TYPEDEF		PROTO STDCALL :wint_t
iswalnum		PROTO		@proto_26

@proto_27		TYPEDEF		PROTO STDCALL :wint_t
iswprint		PROTO		@proto_27

@proto_28		TYPEDEF		PROTO STDCALL :wint_t
iswgraph		PROTO		@proto_28

@proto_29		TYPEDEF		PROTO STDCALL :wint_t
iswcntrl		PROTO		@proto_29

@proto_30		TYPEDEF		PROTO STDCALL :wint_t
iswascii		PROTO		@proto_30

@proto_31		TYPEDEF		PROTO STDCALL :SDWORD
isleadbyte		PROTO		@proto_31

@proto_32		TYPEDEF		PROTO STDCALL :wchar_t_xx
towupper		PROTO		@proto_32

@proto_33		TYPEDEF		PROTO STDCALL :wchar_t_xx
towlower		PROTO		@proto_33

@proto_34		TYPEDEF		PROTO STDCALL :wint_t, :wctype_t
is_wctype		PROTO		@proto_34

_WCTYPE_DEFINED		TEXTEQU		<>
isascii		TEXTEQU		<__isascii>
toascii		TEXTEQU		<__toascii>
iscsymf		TEXTEQU		<__iscsymf>
iscsym		TEXTEQU		<__iscsym>
_INC_CTYPE		TEXTEQU		<>
; End of file .\ctype.h
ANYSIZE_ARRAY		EQU		1t
UNALIGNED		TEXTEQU		<>
PVOID		TYPEDEF		PTR 

_cdecl		TEXTEQU		<>
NTAPI		TEXTEQU		<>
VOID		TEXTEQU		<void>
CHAR		TYPEDEF		SBYTE

_SHORT		TYPEDEF		SWORD

LONG		TYPEDEF		SDWORD

WCHAR		TYPEDEF		wchar_t_xx

PWCHAR		TYPEDEF		PTR WCHAR

LPWCH		TYPEDEF		PTR WCHAR

PWCH		TYPEDEF		PTR WCHAR

LPCWCH		TYPEDEF		PTR WORD

PCWCH		TYPEDEF		PTR WORD

NWPSTR		TYPEDEF		PTR WCHAR

LPWSTR		TYPEDEF		PTR WCHAR

PWSTR		TYPEDEF		PTR WCHAR

LPCWSTR		TYPEDEF		PTR WORD

PCWSTR		TYPEDEF		PTR WORD

PCHAR		TYPEDEF		PTR CHAR

LPCH		TYPEDEF		PTR CHAR

PCH		TYPEDEF		PTR CHAR

LPCCH		TYPEDEF		PTR SBYTE

PCCH		TYPEDEF		PTR SBYTE

NPSTR		TYPEDEF		PTR CHAR

LPSTR		TYPEDEF		PTR CHAR

PSTR		TYPEDEF		PTR CHAR

LPCSTR		TYPEDEF		PTR SBYTE

PCSTR		TYPEDEF		PTR SBYTE

TCHAR		TYPEDEF		SBYTE

PTCHAR		TYPEDEF		PTR SBYTE

_TBYTE		TYPEDEF		BYTE

PTUCHAR		TYPEDEF		PTR BYTE

_TCHAR_DEFINED		TEXTEQU		<>
LPTCH		TYPEDEF		LPSTR

PTCH		TYPEDEF		LPSTR

PTSTR		TYPEDEF		LPSTR

LPTSTR		TYPEDEF		LPSTR

LPCTSTR		TYPEDEF		LPCSTR

PSHORT		TYPEDEF		PTR _SHORT

PLONG		TYPEDEF		PTR LONG

HANDLE	TYPEDEF	DWORD

PHANDLE		TYPEDEF		PTR HANDLE

CCHAR		TYPEDEF		SBYTE

LCID		TYPEDEF		DWORD

PLCID		TYPEDEF		PDWORD

LANGID		TYPEDEF		WORD

APPLICATION_ERROR_MASK		EQU		020000000h
ERROR_SEVERITY_SUCCESS		EQU		000000000h
ERROR_SEVERITY_INFORMATIONAL		EQU		040000000h
ERROR_SEVERITY_WARNING		EQU		080000000h
ERROR_SEVERITY_ERROR		EQU		0c0000000h
LONGLONG		TYPEDEF		REAL8

DWORDLONG		TYPEDEF		REAL8

@tag_0		STRUCT 4t
LowPart		DWORD		?
HighPart		LONG		?
@tag_0		ENDS

_LARGE_INTEGER		UNION
		STRUCT
LowPart		DWORD		?
HighPart		LONG		?
		ENDS
QuadPart		LONGLONG		?
_LARGE_INTEGER		ENDS

LARGE_INTEGER		TYPEDEF		_LARGE_INTEGER

PLARGE_INTEGER		TYPEDEF		PTR _LARGE_INTEGER

@tag_1		STRUCT 4t
LowPart		DWORD		?
HighPart		DWORD		?
@tag_1		ENDS

_ULARGE_INTEGER		UNION
		STRUCT
LowPart		DWORD		?
HighPart		DWORD		?
		ENDS
QuadPart		DWORDLONG		?
_ULARGE_INTEGER		ENDS

ULARGE_INTEGER		TYPEDEF		_ULARGE_INTEGER

PULARGE_INTEGER		TYPEDEF		PTR _ULARGE_INTEGER

LUID		TYPEDEF		LARGE_INTEGER

PLUID		TYPEDEF		PTR LARGE_INTEGER

UNICODE_NULL		TEXTEQU		<((WCHAR)0)>
BOOLEAN		TYPEDEF		CCHAR

PBOOLEAN		TYPEDEF		PTR BOOLEAN

@t_0		TYPEDEF		PTR _LIST_ENTRY
@t_1		TYPEDEF		PTR _LIST_ENTRY
_LIST_ENTRY		STRUCT 4t
Flink		@t_0		?
Blink		@t_1		?
_LIST_ENTRY		ENDS

LIST_ENTRY		TYPEDEF		_LIST_ENTRY

PLIST_ENTRY		TYPEDEF		PTR LIST_ENTRY

@t_2		TYPEDEF		PTR _SINGLE_LIST_ENTRY
_SINGLE_LIST_ENTRY		STRUCT 4t
Next		@t_2		?
_SINGLE_LIST_ENTRY		ENDS

SINGLE_LIST_ENTRY		TYPEDEF		_SINGLE_LIST_ENTRY

PSINGLE_LIST_ENTRY		TYPEDEF		PTR _SINGLE_LIST_ENTRY

MINCHAR		EQU		000000080h
MAXCHAR		EQU		00000007fh
MINSHORT		EQU		000008000h
MAXSHORT		EQU		000007fffh
MINLONG		EQU		080000000h
MAXLONG		EQU		07fffffffh
MAXBYTE		EQU		0000000ffh
MAXWORD		EQU		00000ffffh
MAXDWORD		EQU		0ffffffffh
LANG_NEUTRAL		EQU		000000000h
LANG_ALBANIAN		EQU		00000001ch
LANG_ARABIC		EQU		000000001h
LANG_BAHASA		EQU		000000021h
LANG_BULGARIAN		EQU		000000002h
LANG_CATALAN		EQU		000000003h
LANG_CHINESE		EQU		000000004h
LANG_CZECH		EQU		000000005h
LANG_DANISH		EQU		000000006h
LANG_DUTCH		EQU		000000013h
LANG_ENGLISH		EQU		000000009h
LANG_FINNISH		EQU		00000000bh
LANG_FRENCH		EQU		00000000ch
LANG_GERMAN		EQU		000000007h
LANG_GREEK		EQU		000000008h
LANG_HEBREW		EQU		00000000dh
LANG_HUNGARIAN		EQU		00000000eh
LANG_ICELANDIC		EQU		00000000fh
LANG_ITALIAN		EQU		000000010h
LANG_JAPANESE		EQU		000000011h
LANG_KOREAN		EQU		000000012h
LANG_NORWEGIAN		EQU		000000014h
LANG_POLISH		EQU		000000015h
LANG_PORTUGUESE		EQU		000000016h
LANG_RHAETO_ROMAN		EQU		000000017h
LANG_ROMANIAN		EQU		000000018h
LANG_RUSSIAN		EQU		000000019h
LANG_SERBO_CROATIAN		EQU		00000001ah
LANG_SLOVAK		EQU		00000001bh
LANG_SPANISH		EQU		00000000ah
LANG_SWEDISH		EQU		00000001dh
LANG_THAI		EQU		00000001eh
LANG_TURKISH		EQU		00000001fh
LANG_URDU		EQU		000000020h
SUBLANG_NEUTRAL		EQU		000000000h
SUBLANG_DEFAULT		EQU		000000001h
SUBLANG_SYS_DEFAULT		EQU		000000002h
SUBLANG_CHINESE_SIMPLIFIED		EQU		000000002h
SUBLANG_CHINESE_TRADITIONAL		EQU		000000001h
SUBLANG_DUTCH		EQU		000000001h
SUBLANG_DUTCH_BELGIAN		EQU		000000002h
SUBLANG_ENGLISH_US		EQU		000000001h
SUBLANG_ENGLISH_UK		EQU		000000002h
SUBLANG_ENGLISH_AUS		EQU		000000003h
SUBLANG_ENGLISH_CAN		EQU		000000004h
SUBLANG_ENGLISH_NZ		EQU		000000005h
SUBLANG_FRENCH		EQU		000000001h
SUBLANG_FRENCH_BELGIAN		EQU		000000002h
SUBLANG_FRENCH_CANADIAN		EQU		000000003h
SUBLANG_FRENCH_SWISS		EQU		000000004h
SUBLANG_GERMAN		EQU		000000001h
SUBLANG_GERMAN_SWISS		EQU		000000002h
SUBLANG_GERMAN_AUSTRIAN		EQU		000000003h
SUBLANG_ITALIAN		EQU		000000001h
SUBLANG_ITALIAN_SWISS		EQU		000000002h
SUBLANG_NORWEGIAN_BOKMAL		EQU		000000001h
SUBLANG_NORWEGIAN_NYNORSK		EQU		000000002h
SUBLANG_PORTUGUESE		EQU		000000002h
SUBLANG_PORTUGUESE_BRAZILIAN		EQU		000000001h
SUBLANG_SERBO_CROATIAN_CYRILLIC		EQU		000000002h
SUBLANG_SERBO_CROATIAN_LATIN		EQU		000000001h
SUBLANG_SPANISH		EQU		000000001h
SUBLANG_SPANISH_MEXICAN		EQU		000000002h
SUBLANG_SPANISH_MODERN		EQU		000000003h
LANG_SYSTEM_DEFAULT		TEXTEQU		<(MAKELANGID(LANG_NEUTRAL, SUBLANG_SYS_DEFAULT))>
LANG_USER_DEFAULT		TEXTEQU		<(MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT))>
LOCALE_SYSTEM_DEFAULT		TEXTEQU		<(MAKELCID(LANG_SYSTEM_DEFAULT))>
LOCALE_USER_DEFAULT		TEXTEQU		<(MAKELCID(LANG_USER_DEFAULT))>
STATUS_WAIT_0		TEXTEQU		<((DWORD )0x00000000L)>
STATUS_ABANDONED_WAIT_0		TEXTEQU		<((DWORD )0x00000080L)>
STATUS_USER_APC		TEXTEQU		<((DWORD )0x000000C0L)>
STATUS_TIMEOUT		TEXTEQU		<((DWORD )0x00000102L)>
STATUS_PENDING		TEXTEQU		<((DWORD )0x00000103L)>
STATUS_DATATYPE_MISALIGNMENT		TEXTEQU		<((DWORD )0x80000002L)>
STATUS_BREAKPOINT		TEXTEQU		<((DWORD )0x80000003L)>
STATUS_SINGLE_STEP		TEXTEQU		<((DWORD )0x80000004L)>
STATUS_ACCESS_VIOLATION		TEXTEQU		<((DWORD )0xC0000005L)>
STATUS_IN_PAGE_ERROR		TEXTEQU		<((DWORD )0xC0000006L)>
STATUS_NO_MEMORY		TEXTEQU		<((DWORD )0xC0000017L)>
STATUS_ILLEGAL_INSTRUCTION		TEXTEQU		<((DWORD )0xC000001DL)>
STATUS_NONCONTINUABLE_EXCEPTION		TEXTEQU		<((DWORD )0xC0000025L)>
STATUS_INVALID_DISPOSITION		TEXTEQU		<((DWORD )0xC0000026L)>
STATUS_ARRAY_BOUNDS_EXCEEDED		TEXTEQU		<((DWORD )0xC000008CL)>
STATUS_FLOAT_DENORMAL_OPERAND		TEXTEQU		<((DWORD )0xC000008DL)>
STATUS_FLOAT_DIVIDE_BY_ZERO		TEXTEQU		<((DWORD )0xC000008EL)>
STATUS_FLOAT_INEXACT_RESULT		TEXTEQU		<((DWORD )0xC000008FL)>
STATUS_FLOAT_INVALID_OPERATION		TEXTEQU		<((DWORD )0xC0000090L)>
STATUS_FLOAT_OVERFLOW		TEXTEQU		<((DWORD )0xC0000091L)>
STATUS_FLOAT_STACK_CHECK		TEXTEQU		<((DWORD )0xC0000092L)>
STATUS_FLOAT_UNDERFLOW		TEXTEQU		<((DWORD )0xC0000093L)>
STATUS_INTEGER_DIVIDE_BY_ZERO		TEXTEQU		<((DWORD )0xC0000094L)>
STATUS_INTEGER_OVERFLOW		TEXTEQU		<((DWORD )0xC0000095L)>
STATUS_PRIVILEGED_INSTRUCTION		TEXTEQU		<((DWORD )0xC0000096L)>
STATUS_STACK_OVERFLOW		TEXTEQU		<((DWORD )0xC00000FDL)>
STATUS_CONTROL_C_EXIT		TEXTEQU		<((DWORD )0xC000013AL)>
MAXIMUM_WAIT_OBJECTS		EQU		64t
MAXIMUM_SUSPEND_COUNT		EQU		00000007fh
KSPIN_LOCK		TYPEDEF		DWORD

_SIZE_OF_80387_REGISTERS		EQU		80t
CONTEXT_i386		EQU		000010000h
CONTEXT_i486		EQU		000010000h
CONTEXT_CONTROL		EQU		000010001h
CONTEXT_INTEGER		EQU		000010002h
CONTEXT_SEGMENTS		EQU		000010004h
CONTEXT_FLOATING_POINT		EQU		000010008h
CONTEXT_DEBUG_REGISTERS		EQU		000010010h
CONTEXT_FULL		EQU		000010007h
_FLOATING_SAVE_AREA		STRUCT 4t
ControlWord		DWORD		?
StatusWord		DWORD		?
TagWord		DWORD		?
ErrorOffset		DWORD		?
ErrorSelector		DWORD		?
DataOffset		DWORD		?
DataSelector		DWORD		?
RegisterArea		BYTE		80t DUP (?)
Cr0NpxState		DWORD		?
_FLOATING_SAVE_AREA		ENDS

FLOATING_SAVE_AREA		TYPEDEF		_FLOATING_SAVE_AREA

PFLOATING_SAVE_AREA		TYPEDEF		PTR FLOATING_SAVE_AREA

_CONTEXT		STRUCT 4t
ContextFlags		DWORD		?
_Dr0		DWORD		?
_Dr1		DWORD		?
_Dr2		DWORD		?
_Dr3		DWORD		?
_Dr6		DWORD		?
_Dr7		DWORD		?
FloatSave		FLOATING_SAVE_AREA		<>
SegGs		DWORD		?
SegFs		DWORD		?
SegEs		DWORD		?
SegDs		DWORD		?
_Edi		DWORD		?
_Esi		DWORD		?
_Ebx		DWORD		?
_Edx		DWORD		?
_Ecx		DWORD		?
_Eax		DWORD		?
_Ebp		DWORD		?
Eip		DWORD		?
SegCs		DWORD		?
EFlags		DWORD		?
_Esp		DWORD		?
SegSs		DWORD		?
_CONTEXT		ENDS

CONTEXT		TYPEDEF		_CONTEXT

PCONTEXT		TYPEDEF		PTR CONTEXT

@tag_3		STRUCT 4t
BaseMid		BYTE		?
Flags1		BYTE		?
Flags2		BYTE		?
BaseHi		BYTE		?
@tag_3		ENDS

@tag_4		RECORD	BaseHi@@tag_4:8,
			Granularity@@tag_4:1,
			Default_Big@@tag_4:1,
			Reserved_0@@tag_4:1,
			Sys@@tag_4:1,
			LimitHi@@tag_4:4,
			Pres@@tag_4:1,
			Dpl@@tag_4:2,
			_Type@@tag_4:5,
			BaseMid@@tag_4:8

@tag_2		UNION
Bytes		@tag_3		<>
Bits		@tag_4		<>
@tag_2		ENDS

_LDT_ENTRY		STRUCT 4t
LimitLow		WORD		?
BaseLow		WORD		?
_HighWord		@tag_2		<>
_LDT_ENTRY		ENDS

LDT_ENTRY		TYPEDEF		_LDT_ENTRY

PLDT_ENTRY		TYPEDEF		PTR _LDT_ENTRY

EXCEPTION_NONCONTINUABLE		EQU		000000001h
EXCEPTION_MAXIMUM_PARAMETERS		EQU		15t
@t_3		TYPEDEF		PTR _EXCEPTION_RECORD
_EXCEPTION_RECORD		STRUCT 4t
ExceptionCode		DWORD		?
ExceptionFlags		DWORD		?
ExceptionRecord		@t_3		?
ExceptionAddress		PVOID		?
NumberParameters		DWORD		?
ExceptionInformation		DWORD		15t DUP (?)
_EXCEPTION_RECORD		ENDS

EXCEPTION_RECORD		TYPEDEF		_EXCEPTION_RECORD

PEXCEPTION_RECORD		TYPEDEF		PTR EXCEPTION_RECORD

_EXCEPTION_POINTERS		STRUCT 4t
ExceptionRecord		PEXCEPTION_RECORD		?
ContextRecord		PCONTEXT		?
_EXCEPTION_POINTERS		ENDS

EXCEPTION_POINTERS		TYPEDEF		_EXCEPTION_POINTERS

PEXCEPTION_POINTERS		TYPEDEF		PTR _EXCEPTION_POINTERS

PROCESS_TERMINATE		EQU		000000001h
PROCESS_CREATE_THREAD		EQU		000000002h
PROCESS_VM_OPERATION		EQU		000000008h
PROCESS_VM_READ		EQU		000000010h
PROCESS_VM_WRITE		EQU		000000020h
PROCESS_DUP_HANDLE		EQU		000000040h
PROCESS_CREATE_PROCESS		EQU		000000080h
PROCESS_SET_INFORMATION		EQU		000000200h
PROCESS_QUERY_INFORMATION		EQU		000000400h
PROCESS_ALL_ACCESS		TEXTEQU		<(STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0xFFF)>
THREAD_TERMINATE		EQU		000000001h
THREAD_SUSPEND_RESUME		EQU		000000002h
THREAD_GET_CONTEXT		EQU		000000008h
THREAD_SET_CONTEXT		EQU		000000010h
THREAD_SET_INFORMATION		EQU		000000020h
THREAD_QUERY_INFORMATION		EQU		000000040h
THREAD_SET_THREAD_TOKEN		EQU		000000080h
THREAD_IMPERSONATE		EQU		000000100h
THREAD_DIRECT_IMPERSONATION		EQU		000000200h
THREAD_ALL_ACCESS		TEXTEQU		<(STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x3FF)>
TLS_MINIMUM_AVAILABLE		EQU		64t
THREAD_BASE_PRIORITY_LOWRT		EQU		15t
THREAD_BASE_PRIORITY_MAX		EQU		2t
THREAD_BASE_PRIORITY_MIN		EQU		-2t
THREAD_BASE_PRIORITY_IDLE		EQU		-15t
EVENT_MODIFY_STATE		EQU		000000002h
EVENT_ALL_ACCESS		TEXTEQU		<(STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3)>
MUTANT_QUERY_STATE		EQU		000000001h
MUTANT_ALL_ACCESS		TEXTEQU		<(STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE| MUTANT_QUERY_STATE)>
SEMAPHORE_MODIFY_STATE		EQU		000000002h
SEMAPHORE_ALL_ACCESS		TEXTEQU		<(STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3)>
TIME_ZONE_ID_UNKNOWN		EQU		0t
TIME_ZONE_ID_STANDARD		EQU		1t
TIME_ZONE_ID_DAYLIGHT		EQU		2t
PROCESSOR_INTEL_386		EQU		386t
PROCESSOR_INTEL_486		EQU		486t
PROCESSOR_INTEL_860		EQU		860t
PROCESSOR_MIPS_R2000		EQU		2000t
PROCESSOR_MIPS_R3000		EQU		3000t
PROCESSOR_MIPS_R4000		EQU		4000t
PROCESSOR_ALPHA_21064		EQU		21064t
_MEMORY_BASIC_INFORMATION		STRUCT 4t
BaseAddress		PVOID		?
AllocationBase		PVOID		?
AllocationProtect		DWORD		?
RegionSize		DWORD		?
State		DWORD		?
Protect		DWORD		?
_Type		DWORD		?
_MEMORY_BASIC_INFORMATION		ENDS

MEMORY_BASIC_INFORMATION		TYPEDEF		_MEMORY_BASIC_INFORMATION

PMEMORY_BASIC_INFORMATION		TYPEDEF		PTR _MEMORY_BASIC_INFORMATION

SECTION_QUERY		EQU		000000001h
SECTION_MAP_WRITE		EQU		000000002h
SECTION_MAP_READ		EQU		000000004h
SECTION_MAP_EXECUTE		EQU		000000008h
SECTION_EXTEND_SIZE		EQU		000000010h
SECTION_ALL_ACCESS		TEXTEQU		<(STANDARD_RIGHTS_REQUIRED|SECTION_QUERY| SECTION_MAP_WRITE | SECTION_MAP_READ | SECTION_MAP_EXECUTE | SECTION_EXTEND_SIZE)>
PAGE_NOACCESS		EQU		000000001h
PAGE_READONLY		EQU		000000002h
PAGE_READWRITE		EQU		000000004h
PAGE_WRITECOPY		EQU		000000008h
PAGE_EXECUTE		EQU		000000010h
PAGE_EXECUTE_READ		EQU		000000020h
PAGE_EXECUTE_READWRITE		EQU		000000040h
PAGE_EXECUTE_WRITECOPY		EQU		000000080h
PAGE_GUARD		EQU		000000100h
PAGE_NOCACHE		EQU		000000200h
MEM_COMMIT		EQU		000001000h
MEM_RESERVE		EQU		000002000h
MEM_DECOMMIT		EQU		000004000h
MEM_RELEASE		EQU		000008000h
MEM_FREE		EQU		000010000h
MEM_PRIVATE		EQU		000020000h
MEM_MAPPED		EQU		000040000h
MEM_MAPPED_COPIED		EQU		000080000h
MEM_TOP_DOWN		EQU		000100000h
MEM_LARGE_PAGES		EQU		020000000h
MEM_DOS_LIM		EQU		040000000h
FILE_READ_DATA		EQU		000000001h
FILE_LIST_DIRECTORY		EQU		000000001h
FILE_WRITE_DATA		EQU		000000002h
FILE_ADD_FILE		EQU		000000002h
FILE_APPEND_DATA		EQU		000000004h
FILE_ADD_SUBDIRECTORY		EQU		000000004h
FILE_CREATE_PIPE_INSTANCE		EQU		000000004h
FILE_READ_EA		EQU		000000008h
FILE_WRITE_EA		EQU		000000010h
FILE_EXECUTE		EQU		000000020h
FILE_TRAVERSE		EQU		000000020h
FILE_DELETE_CHILD		EQU		000000040h
FILE_READ_ATTRIBUTES		EQU		000000080h
FILE_WRITE_ATTRIBUTES		EQU		000000100h
FILE_ALL_ACCESS		TEXTEQU		<(STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x1FF)>
FILE_GENERIC_READ		TEXTEQU		<(STANDARD_RIGHTS_READ | FILE_READ_DATA | FILE_READ_ATTRIBUTES | FILE_READ_EA | SYNCHRONIZE)>
FILE_GENERIC_WRITE		TEXTEQU		<(STANDARD_RIGHTS_WRITE | FILE_WRITE_DATA | FILE_WRITE_ATTRIBUTES | FILE_WRITE_EA | FILE_APPEND_DATA | SYNCHRONIZE)>
FILE_GENERIC_EXECUTE		TEXTEQU		<(STANDARD_RIGHTS_EXECUTE | FILE_READ_ATTRIBUTES | FILE_EXECUTE | SYNCHRONIZE)>
FILE_SHARE_READ		EQU		000000001h
FILE_SHARE_WRITE		EQU		000000002h
FILE_ATTRIBUTE_READONLY		EQU		000000001h
FILE_ATTRIBUTE_HIDDEN		EQU		000000002h
FILE_ATTRIBUTE_SYSTEM		EQU		000000004h
FILE_ATTRIBUTE_DIRECTORY		EQU		000000010h
FILE_ATTRIBUTE_ARCHIVE		EQU		000000020h
FILE_ATTRIBUTE_NORMAL		EQU		000000080h
FILE_ATTRIBUTE_TEMPORARY		EQU		000000100h
FILE_ATTRIBUTE_ATOMIC_WRITE		EQU		000000200h
FILE_ATTRIBUTE_XACTION_WRITE		EQU		000000400h
FILE_NOTIFY_CHANGE_FILE_NAME		EQU		000000001h
FILE_NOTIFY_CHANGE_DIR_NAME		EQU		000000002h
FILE_NOTIFY_CHANGE_ATTRIBUTES		EQU		000000004h
FILE_NOTIFY_CHANGE_SIZE		EQU		000000008h
FILE_NOTIFY_CHANGE_LAST_WRITE		EQU		000000010h
FILE_NOTIFY_CHANGE_SECURITY		EQU		000000100h
MAILSLOT_NO_MESSAGE		TEXTEQU		<((DWORD)-1)>
MAILSLOT_WAIT_FOREVER		TEXTEQU		<((DWORD)-1)>
FILE_CASE_SENSITIVE_SEARCH		EQU		000000001h
FILE_CASE_PRESERVED_NAMES		EQU		000000002h
FILE_UNICODE_ON_DISK		EQU		000000004h
FILE_PERSISTENT_ACLS		EQU		000000008h
DUPLICATE_CLOSE_SOURCE		EQU		000000001h
DUPLICATE_SAME_ACCESS		EQU		000000002h
PACCESS_TOKEN		TYPEDEF		PVOID

PSECURITY_DESCRIPTOR		TYPEDEF		PVOID

PSID		TYPEDEF		PVOID

ACCESS_MASK		TYPEDEF		DWORD

PACCESS_MASK		TYPEDEF		PTR ACCESS_MASK

DELETE		EQU		000010000h
READ_CONTROL		EQU		000020000h
WRITE_DAC		EQU		000040000h
WRITE_OWNER		EQU		000080000h
SYNCHRONIZE		EQU		000100000h
STANDARD_RIGHTS_REQUIRED		EQU		0000f0000h
STANDARD_RIGHTS_READ		EQU		000020000h
STANDARD_RIGHTS_WRITE		EQU		000020000h
STANDARD_RIGHTS_EXECUTE		EQU		000020000h
STANDARD_RIGHTS_ALL		EQU		0001f0000h
SPECIFIC_RIGHTS_ALL		EQU		00000ffffh
ACCESS_SYSTEM_SECURITY		EQU		001000000h
MAXIMUM_ALLOWED		EQU		002000000h
GENERIC_READ		EQU		080000000h
GENERIC_WRITE		EQU		040000000h
GENERIC_EXECUTE		EQU		020000000h
GENERIC_ALL		EQU		010000000h
_GENERIC_MAPPING		STRUCT 4t
GenericRead		ACCESS_MASK		?
GenericWrite		ACCESS_MASK		?
GenericExecute		ACCESS_MASK		?
GenericAll		ACCESS_MASK		?
_GENERIC_MAPPING		ENDS

GENERIC_MAPPING		TYPEDEF		_GENERIC_MAPPING

PGENERIC_MAPPING		TYPEDEF		PTR GENERIC_MAPPING

_LUID_AND_ATTRIBUTES		STRUCT 4t
Luid		LUID		<>
Attributes		DWORD		?
_LUID_AND_ATTRIBUTES		ENDS

LUID_AND_ATTRIBUTES		TYPEDEF		_LUID_AND_ATTRIBUTES

PLUID_AND_ATTRIBUTES		TYPEDEF		PTR _LUID_AND_ATTRIBUTES

LUID_AND_ATTRIBUTES_ARRAY		TYPEDEF		LUID_AND_ATTRIBUTES

PLUID_AND_ATTRIBUTES_ARRAY		TYPEDEF		PTR LUID_AND_ATTRIBUTES_ARRAY

_SID_IDENTIFIER_AUTHORITY		STRUCT 4t
Value		BYTE		6t DUP (?)
_SID_IDENTIFIER_AUTHORITY		ENDS

SID_IDENTIFIER_AUTHORITY		TYPEDEF		_SID_IDENTIFIER_AUTHORITY

PSID_IDENTIFIER_AUTHORITY		TYPEDEF		PTR _SID_IDENTIFIER_AUTHORITY

_SID		STRUCT 4t
Revision		BYTE		?
SubAuthorityCount		BYTE		?
IdentifierAuthority		SID_IDENTIFIER_AUTHORITY		<>
SubAuthority		DWORD		1t DUP (?)
_SID		ENDS

SID		TYPEDEF		_SID

PISID		TYPEDEF		PTR _SID

SID_REVISION		EQU		000000001h
SID_MAX_SUB_AUTHORITIES		EQU		00000000fh
SID_RECOMMENDED_SUB_AUTHORITIES		EQU		000000001h
SidTypeUser		EQU		1t
SidTypeGroup		EQU		2t
SidTypeDomain		EQU		3t
SidTypeAlias		EQU		4t
SidTypeWellKnownGroup		EQU		5t
SidTypeDeletedAccount		EQU		6t
SidTypeInvalid		EQU		7t
SidTypeUnknown		EQU		8t

SID_NAME_USE		TYPEDEF		SWORD

PSID_NAME_USE		TYPEDEF		PTR SWORD

_SID_AND_ATTRIBUTES		STRUCT 4t
Sid		PSID		?
Attributes		DWORD		?
_SID_AND_ATTRIBUTES		ENDS

SID_AND_ATTRIBUTES		TYPEDEF		_SID_AND_ATTRIBUTES

PSID_AND_ATTRIBUTES		TYPEDEF		PTR _SID_AND_ATTRIBUTES

SID_AND_ATTRIBUTES_ARRAY		TYPEDEF		SID_AND_ATTRIBUTES

PSID_AND_ATTRIBUTES_ARRAY		TYPEDEF		PTR SID_AND_ATTRIBUTES_ARRAY

SECURITY_NULL_SID_AUTHORITY		TEXTEQU		<{0,0,0,0,0,0}>
SECURITY_WORLD_SID_AUTHORITY		TEXTEQU		<{0,0,0,0,0,1}>
SECURITY_LOCAL_SID_AUTHORITY		TEXTEQU		<{0,0,0,0,0,2}>
SECURITY_CREATOR_SID_AUTHORITY		TEXTEQU		<{0,0,0,0,0,3}>
SECURITY_NULL_RID		EQU		000000000h
SECURITY_WORLD_RID		EQU		000000000h
SECURITY_LOCAL_RID		EQU		000000000h
SECURITY_CREATOR_OWNER_RID		EQU		000000000h
SECURITY_CREATOR_GROUP_RID		EQU		000000001h
SECURITY_NT_AUTHORITY		TEXTEQU		<{0,0,0,0,0,5}>
SECURITY_DIALUP_RID		EQU		000000001h
SECURITY_NETWORK_RID		EQU		000000002h
SECURITY_BATCH_RID		EQU		000000003h
SECURITY_INTERACTIVE_RID		EQU		000000004h
SECURITY_SERVICE_RID		EQU		000000006h
SECURITY_LOGON_IDS_RID		EQU		000000005h
SECURITY_LOGON_IDS_RID_COUNT		EQU		000000003h
SECURITY_LOCAL_SYSTEM_RID		EQU		000000012h
SECURITY_BUILTIN_DOMAIN_RID		EQU		000000020h
DOMAIN_USER_RID_ADMIN		EQU		0000001f4h
DOMAIN_USER_RID_GUEST		EQU		0000001f5h
DOMAIN_GROUP_RID_ADMINS		EQU		000000200h
DOMAIN_GROUP_RID_USERS		EQU		000000201h
DOMAIN_ALIAS_RID_ADMINS		EQU		000000220h
DOMAIN_ALIAS_RID_USERS		EQU		000000221h
DOMAIN_ALIAS_RID_GUESTS		EQU		000000222h
DOMAIN_ALIAS_RID_POWER_USERS		EQU		000000223h
DOMAIN_ALIAS_RID_ACCOUNT_OPS		EQU		000000224h
DOMAIN_ALIAS_RID_SYSTEM_OPS		EQU		000000225h
DOMAIN_ALIAS_RID_PRINT_OPS		EQU		000000226h
DOMAIN_ALIAS_RID_BACKUP_OPS		EQU		000000227h
DOMAIN_ALIAS_RID_REPLICATOR		EQU		000000228h
SYSTEM_LUID		TEXTEQU		<{ 0x3E7, 0x0 }>
SE_GROUP_MANDATORY		EQU		000000001h
SE_GROUP_ENABLED_BY_DEFAULT		EQU		000000002h
SE_GROUP_ENABLED		EQU		000000004h
SE_GROUP_OWNER		EQU		000000008h
SE_GROUP_LOGON_ID		EQU		0c0000000h
ACL_REVISION		EQU		000000002h
ACL_REVISION1		EQU		000000001h
ACL_REVISION2		EQU		000000002h
_ACL		STRUCT 4t
AclRevision		BYTE		?
Sbz1		BYTE		?
AclSize		WORD		?
AceCount		WORD		?
Sbz2		WORD		?
_ACL		ENDS

ACL		TYPEDEF		_ACL

PACL		TYPEDEF		PTR ACL

_ACE_HEADER		STRUCT 4t
AceType		BYTE		?
AceFlags		BYTE		?
AceSize		WORD		?
_ACE_HEADER		ENDS

ACE_HEADER		TYPEDEF		_ACE_HEADER

PACE_HEADER		TYPEDEF		PTR ACE_HEADER

ACCESS_ALLOWED_ACE_TYPE		EQU		000000000h
ACCESS_DENIED_ACE_TYPE		EQU		000000001h
SYSTEM_AUDIT_ACE_TYPE		EQU		000000002h
SYSTEM_ALARM_ACE_TYPE		EQU		000000003h
OBJECT_INHERIT_ACE		EQU		000000001h
CONTAINER_INHERIT_ACE		EQU		000000002h
NO_PROPAGATE_INHERIT_ACE		EQU		000000004h
INHERIT_ONLY_ACE		EQU		000000008h
VALID_INHERIT_FLAGS		EQU		00000000fh
SUCCESSFUL_ACCESS_ACE_FLAG		EQU		000000040h
FAILED_ACCESS_ACE_FLAG		EQU		000000080h
_ACCESS_ALLOWED_ACE		STRUCT 4t
Header		ACE_HEADER		<>
_Mask		ACCESS_MASK		?
SidStart		DWORD		?
_ACCESS_ALLOWED_ACE		ENDS

ACCESS_ALLOWED_ACE		TYPEDEF		_ACCESS_ALLOWED_ACE

PACCESS_ALLOWED_ACE		TYPEDEF		PTR ACCESS_ALLOWED_ACE

_ACCESS_DENIED_ACE		STRUCT 4t
Header		ACE_HEADER		<>
_Mask		ACCESS_MASK		?
SidStart		DWORD		?
_ACCESS_DENIED_ACE		ENDS

ACCESS_DENIED_ACE		TYPEDEF		_ACCESS_DENIED_ACE

PACCESS_DENIED_ACE		TYPEDEF		PTR ACCESS_DENIED_ACE

_SYSTEM_AUDIT_ACE		STRUCT 4t
Header		ACE_HEADER		<>
_Mask		ACCESS_MASK		?
SidStart		DWORD		?
_SYSTEM_AUDIT_ACE		ENDS

SYSTEM_AUDIT_ACE		TYPEDEF		_SYSTEM_AUDIT_ACE

PSYSTEM_AUDIT_ACE		TYPEDEF		PTR SYSTEM_AUDIT_ACE

_SYSTEM_ALARM_ACE		STRUCT 4t
Header		ACE_HEADER		<>
_Mask		ACCESS_MASK		?
SidStart		DWORD		?
_SYSTEM_ALARM_ACE		ENDS

SYSTEM_ALARM_ACE		TYPEDEF		_SYSTEM_ALARM_ACE

PSYSTEM_ALARM_ACE		TYPEDEF		PTR SYSTEM_ALARM_ACE

AclRevisionInformation		EQU		1t
AclSizeInformation		EQU		2t

ACL_INFORMATION_CLASS		TYPEDEF		SWORD

_ACL_REVISION_INFORMATION		STRUCT 4t
AclRevision		DWORD		?
_ACL_REVISION_INFORMATION		ENDS

ACL_REVISION_INFORMATION		TYPEDEF		_ACL_REVISION_INFORMATION

PACL_REVISION_INFORMATION		TYPEDEF		PTR ACL_REVISION_INFORMATION

_ACL_SIZE_INFORMATION		STRUCT 4t
AceCount		DWORD		?
AclBytesInUse		DWORD		?
AclBytesFree		DWORD		?
_ACL_SIZE_INFORMATION		ENDS

ACL_SIZE_INFORMATION		TYPEDEF		_ACL_SIZE_INFORMATION

PACL_SIZE_INFORMATION		TYPEDEF		PTR ACL_SIZE_INFORMATION

SECURITY_DESCRIPTOR_REVISION		EQU		000000001h
SECURITY_DESCRIPTOR_REVISION1		EQU		000000001h
SECURITY_DESCRIPTOR_MIN_LENGTH		EQU		000000014h
SECURITY_DESCRIPTOR_CONTROL		TYPEDEF		WORD

PSECURITY_DESCRIPTOR_CONTROL		TYPEDEF		PTR WORD

SE_OWNER_DEFAULTED		EQU		000000001h
SE_GROUP_DEFAULTED		EQU		000000002h
SE_DACL_PRESENT		EQU		000000004h
SE_DACL_DEFAULTED		EQU		000000008h
SE_SACL_PRESENT		EQU		000000010h
SE_SACL_DEFAULTED		EQU		000000020h
SE_SELF_RELATIVE		EQU		000008000h
_SECURITY_DESCRIPTOR		STRUCT 4t
Revision		BYTE		?
Sbz1		BYTE		?
Control		SECURITY_DESCRIPTOR_CONTROL		?
Owner		PSID		?
_Group		PSID		?
Sacl		PACL		?
Dacl		PACL		?
_SECURITY_DESCRIPTOR		ENDS

SECURITY_DESCRIPTOR		TYPEDEF		_SECURITY_DESCRIPTOR

PISECURITY_DESCRIPTOR		TYPEDEF		PTR _SECURITY_DESCRIPTOR

SE_PRIVILEGE_ENABLED_BY_DEFAULT		EQU		000000001h
SE_PRIVILEGE_ENABLED		EQU		000000002h
SE_PRIVILEGE_USED_FOR_ACCESS		EQU		080000000h
PRIVILEGE_SET_ALL_NECESSARY		EQU		000000001h
_PRIVILEGE_SET		STRUCT 4t
PrivilegeCount		DWORD		?
Control		DWORD		?
Privilege		LUID_AND_ATTRIBUTES		1t DUP (<>)
_PRIVILEGE_SET		ENDS

PRIVILEGE_SET		TYPEDEF		_PRIVILEGE_SET

PPRIVILEGE_SET		TYPEDEF		PTR _PRIVILEGE_SET

SE_CREATE_TOKEN_NAME		TEXTEQU		<TEXT("SeCreateTokenPrivilege")>
SE_ASSIGNPRIMARYTOKEN_NAME		TEXTEQU		<TEXT("SeAssignPrimaryTokenPrivilege")>
SE_LOCK_MEMORY_NAME		TEXTEQU		<TEXT("SeLockMemoryPrivilege")>
SE_INCREASE_QUOTA_NAME		TEXTEQU		<TEXT("SeIncreaseQuotaPrivilege")>
SE_UNSOLICITED_INPUT_NAME		TEXTEQU		<TEXT("SeUnsolicitedInputPrivilege")>
SE_TCB_NAME		TEXTEQU		<TEXT("SeTcbPrivilege")>
SE_SECURITY_NAME		TEXTEQU		<TEXT("SeSecurityPrivilege")>
SE_TAKE_OWNERSHIP_NAME		TEXTEQU		<TEXT("SeTakeOwnershipPrivilege")>
SE_LOAD_DRIVER_NAME		TEXTEQU		<TEXT("SeLoadDriverPrivilege")>
SE_SYSTEM_PROFILE_NAME		TEXTEQU		<TEXT("SeSystemProfilePrivilege")>
SE_SYSTEMTIME_NAME		TEXTEQU		<TEXT("SeSystemtimePrivilege")>
SE_PROF_SINGLE_PROCESS_NAME		TEXTEQU		<TEXT("SeProfileSingleProcessPrivilege")>
SE_INC_BASE_PRIORITY_NAME		TEXTEQU		<TEXT("SeIncreaseBasePriorityPrivilege")>
SE_CREATE_PAGEFILE_NAME		TEXTEQU		<TEXT("SeCreatePagefilePrivilege")>
SE_CREATE_PERMANENT_NAME		TEXTEQU		<TEXT("SeCreatePermanentPrivilege")>
SE_BACKUP_NAME		TEXTEQU		<TEXT("SeBackupPrivilege")>
SE_RESTORE_NAME		TEXTEQU		<TEXT("SeRestorePrivilege")>
SE_SHUTDOWN_NAME		TEXTEQU		<TEXT("SeShutdownPrivilege")>
SE_DEBUG_NAME		TEXTEQU		<TEXT("SeDebugPrivilege")>
SE_AUDIT_NAME		TEXTEQU		<TEXT("SeAuditPrivilege")>
SE_SYSTEM_ENVIRONMENT_NAME		TEXTEQU		<TEXT("SeSystemEnvironmentPrivilege")>
SE_CHANGE_NOTIFY_NAME		TEXTEQU		<TEXT("SeChangeNotifyPrivilege")>
SE_REMOTE_SHUTDOWN_NAME		TEXTEQU		<TEXT("SeRemoteShutdownPrivilege")>
SecurityAnonymous		EQU		0t
SecurityIdentification		EQU		1t
SecurityImpersonation		EQU		2t
SecurityDelegation		EQU		3t

SECURITY_IMPERSONATION_LEVEL		TYPEDEF		SWORD

PSECURITY_IMPERSONATION_LEVEL		TYPEDEF		PTR SWORD

SECURITY_MAX_IMPERSONATION_LEVE		TEXTEQU		<SecurityDelegation>
DEFAULT_IMPERSONATION_LEVEL		TEXTEQU		<SecurityImpersonation>
SECURITY_DYNAMIC_TRACKING		EQU		000000001h
SECURITY_STATIC_TRACKING		EQU		000000000h
SECURITY_CONTEXT_TRACKING_MODE		TYPEDEF		BOOLEAN

PSECURITY_CONTEXT_TRACKING_MODE		TYPEDEF		PTR BOOLEAN

_SECURITY_QUALITY_OF_SERVICE		STRUCT 4t
_Length		DWORD		?
ImpersonationLevel		SECURITY_IMPERSONATION_LEVEL		?
ContextTrackingMode		SECURITY_CONTEXT_TRACKING_MODE		?
EffectiveOnly		BOOLEAN		?
_SECURITY_QUALITY_OF_SERVICE		ENDS

SECURITY_QUALITY_OF_SERVICE		TYPEDEF		_SECURITY_QUALITY_OF_SERVICE

PSECURITY_QUALITY_OF_SERVICE		TYPEDEF		PTR _SECURITY_QUALITY_OF_SERVICE

_SE_IMPERSONATION_STATE		STRUCT 4t
Token		PACCESS_TOKEN		?
CopyOnOpen		BOOLEAN		?
EffectiveOnly		BOOLEAN		?
Level		SECURITY_IMPERSONATION_LEVEL		?
_SE_IMPERSONATION_STATE		ENDS

SE_IMPERSONATION_STATE		TYPEDEF		_SE_IMPERSONATION_STATE

PSE_IMPERSONATION_STATE		TYPEDEF		PTR _SE_IMPERSONATION_STATE

TOKEN_ASSIGN_PRIMARY		EQU		000000001h
TOKEN_DUPLICATE		EQU		000000002h
TOKEN_IMPERSONATE		EQU		000000004h
TOKEN_QUERY		EQU		000000008h
TOKEN_QUERY_SOURCE		EQU		000000010h
TOKEN_ADJUST_PRIVILEGES		EQU		000000020h
TOKEN_ADJUST_GROUPS		EQU		000000040h
TOKEN_ADJUST_DEFAULT		EQU		000000080h
TOKEN_ALL_ACCESS		EQU		0000f00ffh
TOKEN_READ		EQU		000020008h
TOKEN_WRITE		EQU		0000200e0h
TOKEN_EXECUTE		EQU		000020004h
TokenPrimary		EQU		1t
TokenImpersonation		EQU		2t

TOKEN_TYPE		TYPEDEF		SWORD

PTOKEN_TYPE		TYPEDEF		PTR TOKEN_TYPE

TokenUser		EQU		1t
TokenGroups		EQU		2t
TokenPrivileges		EQU		3t
TokenOwner		EQU		4t
TokenPrimaryGroup		EQU		5t
TokenDefaultDacl		EQU		6t

ifndef NO_TOKEN
TokenSource		EQU		7t
TokenType		EQU		8t
endif

TokenImpersonationLevel		EQU		9t
TokenStatistics		EQU		10t

TOKEN_INFORMATION_CLASS		TYPEDEF		SWORD

PTOKEN_INFORMATION_CLASS		TYPEDEF		PTR SWORD

_TOKEN_USER		STRUCT 4t
User		SID_AND_ATTRIBUTES		<>
_TOKEN_USER		ENDS

TOKEN_USER		TYPEDEF		_TOKEN_USER

PTOKEN_USER		TYPEDEF		PTR _TOKEN_USER

_TOKEN_GROUPS		STRUCT 4t
GroupCount		DWORD		?
Groups		SID_AND_ATTRIBUTES		1t DUP (<>)
_TOKEN_GROUPS		ENDS

TOKEN_GROUPS		TYPEDEF		_TOKEN_GROUPS

PTOKEN_GROUPS		TYPEDEF		PTR _TOKEN_GROUPS

_TOKEN_PRIVILEGES		STRUCT 4t
PrivilegeCount		DWORD		?
Privileges		LUID_AND_ATTRIBUTES		1t DUP (<>)
_TOKEN_PRIVILEGES		ENDS

TOKEN_PRIVILEGES		TYPEDEF		_TOKEN_PRIVILEGES

PTOKEN_PRIVILEGES		TYPEDEF		PTR _TOKEN_PRIVILEGES

_TOKEN_OWNER		STRUCT 4t
Owner		PSID		?
_TOKEN_OWNER		ENDS

TOKEN_OWNER		TYPEDEF		_TOKEN_OWNER

PTOKEN_OWNER		TYPEDEF		PTR _TOKEN_OWNER

_TOKEN_PRIMARY_GROUP		STRUCT 4t
PrimaryGroup		PSID		?
_TOKEN_PRIMARY_GROUP		ENDS

TOKEN_PRIMARY_GROUP		TYPEDEF		_TOKEN_PRIMARY_GROUP

PTOKEN_PRIMARY_GROUP		TYPEDEF		PTR _TOKEN_PRIMARY_GROUP

_TOKEN_DEFAULT_DACL		STRUCT 4t
DefaultDacl		PACL		?
_TOKEN_DEFAULT_DACL		ENDS

TOKEN_DEFAULT_DACL		TYPEDEF		_TOKEN_DEFAULT_DACL

PTOKEN_DEFAULT_DACL		TYPEDEF		PTR _TOKEN_DEFAULT_DACL

TOKEN_SOURCE_LENGTH		EQU		8t
_TOKEN_SOURCE		STRUCT 4t
SourceName		CHAR		8t DUP (?)
SourceIdentifier		LUID		<>
_TOKEN_SOURCE		ENDS

TOKEN_SOURCE		TYPEDEF		_TOKEN_SOURCE

PTOKEN_SOURCE		TYPEDEF		PTR _TOKEN_SOURCE

_TOKEN_STATISTICS		STRUCT 4t
TokenId		LUID		<>
AuthenticationId		LUID		<>
ExpirationTime		LARGE_INTEGER		<>
TokenType		TOKEN_TYPE		?
ImpersonationLevel		SECURITY_IMPERSONATION_LEVEL		?
DynamicCharged		DWORD		?
DynamicAvailable		DWORD		?
GroupCount		DWORD		?
PrivilegeCount		DWORD		?
ModifiedId		LUID		<>
_TOKEN_STATISTICS		ENDS

TOKEN_STATISTICS		TYPEDEF		_TOKEN_STATISTICS

PTOKEN_STATISTICS		TYPEDEF		PTR _TOKEN_STATISTICS

_TOKEN_CONTROL		STRUCT 4t
TokenId		LUID		<>
AuthenticationId		LUID		<>
ModifiedId		LUID		<>
TokenSource		TOKEN_SOURCE		<>
_TOKEN_CONTROL		ENDS

TOKEN_CONTROL		TYPEDEF		_TOKEN_CONTROL

PTOKEN_CONTROL		TYPEDEF		PTR _TOKEN_CONTROL

SECURITY_INFORMATION		TYPEDEF		DWORD

PSECURITY_INFORMATION		TYPEDEF		PTR DWORD

OWNER_SECURITY_INFORMATION		EQU		000000001h
GROUP_SECURITY_INFORMATION		EQU		000000002h
DACL_SECURITY_INFORMATION		EQU		000000004h
SACL_SECURITY_INFORMATION		EQU		000000008h
; Begin of file .\string.h
size_t		TYPEDEF		DWORD

_SIZE_T_DEFINED		TEXTEQU		<>
@proto_35		TYPEDEF		PROTO STDCALL :PTR , :PTR , :SDWORD, :DWORD
_memccpy		PROTO		@proto_35

@proto_36		TYPEDEF		PROTO STDCALL :PTR , :SDWORD, :size_t
memchr		PROTO		@proto_36

@proto_37		TYPEDEF		PROTO STDCALL :PTR , :PTR , :size_t
memcmp		PROTO		@proto_37

@proto_38		TYPEDEF		PROTO STDCALL :PTR , :PTR , :DWORD
_memicmp		PROTO		@proto_38

@proto_39		TYPEDEF		PROTO STDCALL :PTR , :PTR , :size_t
memcpy		PROTO		@proto_39

@proto_40		TYPEDEF		PROTO STDCALL :PTR , :PTR , :size_t
memmove		PROTO		@proto_40

@proto_41		TYPEDEF		PROTO STDCALL :PTR , :SDWORD, :size_t
memset		PROTO		@proto_41

@proto_42		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strcat		PROTO		@proto_42

@proto_43		TYPEDEF		PROTO STDCALL :PTR SBYTE, :SDWORD
strchr		PROTO		@proto_43

@proto_44		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strcmp		PROTO		@proto_44

@proto_45		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
_strcmpi		PROTO		@proto_45

@proto_46		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
_stricmp		PROTO		@proto_46

@proto_47		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strcoll		PROTO		@proto_47

@proto_48		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
_stricoll		PROTO		@proto_48

@proto_49		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strcpy		PROTO		@proto_49

@proto_50		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strcspn		PROTO		@proto_50

@proto_51		TYPEDEF		PROTO STDCALL :PTR SBYTE
_strdup		PROTO		@proto_51

@proto_52		TYPEDEF		PROTO STDCALL :PTR SBYTE
_strerror		PROTO		@proto_52

@proto_53		TYPEDEF		PROTO STDCALL :SDWORD
strerror		PROTO		@proto_53

@proto_54		TYPEDEF		PROTO STDCALL :PTR SBYTE
strlen		PROTO		@proto_54

@proto_55		TYPEDEF		PROTO STDCALL :PTR SBYTE
_strlwr		PROTO		@proto_55

@proto_56		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE, :size_t
strncat		PROTO		@proto_56

@proto_57		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE, :size_t
strncmp		PROTO		@proto_57

@proto_58		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE, :size_t
_strnicmp		PROTO		@proto_58

@proto_59		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE, :size_t
strncpy		PROTO		@proto_59

@proto_60		TYPEDEF		PROTO STDCALL :PTR SBYTE, :SDWORD, :size_t
_strnset		PROTO		@proto_60

@proto_61		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strpbrk		PROTO		@proto_61

@proto_62		TYPEDEF		PROTO STDCALL :PTR SBYTE, :SDWORD
strrchr		PROTO		@proto_62

@proto_63		TYPEDEF		PROTO STDCALL :PTR SBYTE
_strrev		PROTO		@proto_63

@proto_64		TYPEDEF		PROTO STDCALL :PTR SBYTE, :SDWORD
_strset		PROTO		@proto_64

@proto_65		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strspn		PROTO		@proto_65

@proto_66		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strstr		PROTO		@proto_66

@proto_67		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE
strtok		PROTO		@proto_67

@proto_68		TYPEDEF		PROTO STDCALL :PTR SBYTE
_strupr		PROTO		@proto_68

@proto_69		TYPEDEF		PROTO STDCALL :PTR SBYTE, :PTR SBYTE, :size_t
strxfrm		PROTO		@proto_69

@proto_70		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx, :PTR WORD
wcscat		PROTO		@proto_70

@proto_71		TYPEDEF		PROTO STDCALL :PTR WORD, :wchar_t_xx
wcschr		PROTO		@proto_71

@proto_72		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD
wcscmp		PROTO		@proto_72

@proto_73		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx, :PTR WORD
wcscpy		PROTO		@proto_73

@proto_74		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD
wcscspn		PROTO		@proto_74

@proto_75		TYPEDEF		PROTO STDCALL :PTR WORD
wcslen		PROTO		@proto_75

@proto_76		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx, :PTR WORD, :size_t
wcsncat		PROTO		@proto_76

@proto_77		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD, :size_t
wcsncmp		PROTO		@proto_77

@proto_78		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx, :PTR WORD, :size_t
wcsncpy		PROTO		@proto_78

@proto_79		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD
wcspbrk		PROTO		@proto_79

@proto_80		TYPEDEF		PROTO STDCALL :PTR WORD, :wchar_t_xx
wcsrchr		PROTO		@proto_80

@proto_81		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD
wcsspn		PROTO		@proto_81

@proto_82		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD
wcsstr		PROTO		@proto_82

@proto_83		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx, :PTR WORD
wcstok		PROTO		@proto_83

@proto_84		TYPEDEF		PROTO STDCALL :PTR WORD
_wcsdup		PROTO		@proto_84

@proto_85		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD
_wcsicmp		PROTO		@proto_85

@proto_86		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD, :size_t
_wcsnicmp		PROTO		@proto_86

@proto_87		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx, :wchar_t_xx, :size_t
_wcsnset		PROTO		@proto_87

@proto_88		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx
_wcsrev		PROTO		@proto_88

@proto_89		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx, :wchar_t_xx
_wcsset		PROTO		@proto_89

@proto_90		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx
_wcslwr		PROTO		@proto_90

@proto_91		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx
_wcsupr		PROTO		@proto_91

@proto_92		TYPEDEF		PROTO STDCALL :PTR wchar_t_xx, :PTR WORD, :size_t
wcsxfrm		PROTO		@proto_92

@proto_93		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD
wcscoll		PROTO		@proto_93

@proto_94		TYPEDEF		PROTO STDCALL :PTR WORD, :PTR WORD
_wcsicoll		PROTO		@proto_94

wcswcs		TEXTEQU		<wcsstr>
_WSTRING_DEFINED		TEXTEQU		<>
memccpy		TEXTEQU		<_memccpy>
memicmp		TEXTEQU		<_memicmp>
strcmpi		TEXTEQU		<_strcmpi>
stricmp		TEXTEQU		<_stricmp>
strdup		TEXTEQU		<_strdup>
strlwr		TEXTEQU		<_strlwr>
strnicmp		TEXTEQU		<_strnicmp>
strnset		TEXTEQU		<_strnset>
strrev		TEXTEQU		<_strrev>
strset		TEXTEQU		<_strset>
strupr		TEXTEQU		<_strupr>
stricoll		TEXTEQU		<_stricoll>
wcsdup		TEXTEQU		<_wcsdup>
wcsicmp		TEXTEQU		<_wcsicmp>
wcsnicmp		TEXTEQU		<_wcsnicmp>
wcsnset		TEXTEQU		<_wcsnset>
wcsrev		TEXTEQU		<_wcsrev>
wcsset		TEXTEQU		<_wcsset>
wcslwr		TEXTEQU		<_wcslwr>
wcsupr		TEXTEQU		<_wcsupr>
wcsicoll		TEXTEQU		<_wcsicoll>
_INC_STRING		TEXTEQU		<>
; End of file .\string.h
HEAP_NO_SERIALIZE		EQU		000000001h
HEAP_GENERATE_EXCEPTIONS		EQU		000000004h
HEAP_ZERO_MEMORY		EQU		000000008h
HEAP_REALLOC_IN_PLACE_ONLY		EQU		000000010h
@proto_95		TYPEDEF		PROTO STDCALL :PVOID, :PTR , :DWORD
RtlMoveMemory		PROTO		@proto_95

@proto_96		TYPEDEF		PROTO STDCALL :PVOID, :DWORD, :BYTE
RtlFillMemory		PROTO		@proto_96

@proto_97		TYPEDEF		PROTO STDCALL :PVOID, :DWORD
RtlZeroMemory		PROTO		@proto_97

@t_4		TYPEDEF		PTR _RTL_CRITICAL_SECTION
_RTL_CRITICAL_SECTION_DEBUG		STRUCT 4t
_Type		WORD		?
CreatorBackTraceIndex		WORD		?
CriticalSection		@t_4		?
ProcessLocksList		LIST_ENTRY		<>
EntryCount		DWORD		?
ContentionCount		DWORD		?
Depth		DWORD		?
OwnerBackTrace		PVOID		5t DUP (?)
_RTL_CRITICAL_SECTION_DEBUG		ENDS

RTL_CRITICAL_SECTION_DEBUG		TYPEDEF		_RTL_CRITICAL_SECTION_DEBUG

PRTL_CRITICAL_SECTION_DEBUG		TYPEDEF		PTR _RTL_CRITICAL_SECTION_DEBUG

RTL_CRITSECT_TYPE		EQU		0t
RTL_RESOURCE_TYPE		EQU		1t
_RTL_CRITICAL_SECTION		STRUCT 4t
DebugInfo		PRTL_CRITICAL_SECTION_DEBUG		?
LockCount		LONG		?
RecursionCount		LONG		?
OwningThread		HANDLE		?
LockSemaphore		HANDLE		?
Reserved		DWORD		?
_RTL_CRITICAL_SECTION		ENDS

RTL_CRITICAL_SECTION		TYPEDEF		_RTL_CRITICAL_SECTION

PRTL_CRITICAL_SECTION		TYPEDEF		PTR _RTL_CRITICAL_SECTION

DLL_PROCESS_ATTACH		EQU		1t
DLL_THREAD_ATTACH		EQU		2t
DLL_THREAD_DETACH		EQU		3t
DLL_PROCESS_DETACH		EQU		0t
EVENTLOG_SEQUENTIAL_READ		EQU		000000001h
EVENTLOG_SEEK_READ		EQU		000000002h
EVENTLOG_FORWARDS_READ		EQU		000000004h
EVENTLOG_BACKWARDS_READ		EQU		000000008h
EVENTLOG_SUCCESS		EQU		000000000h
EVENTLOG_ERROR_TYPE		EQU		000000001h
EVENTLOG_WARNING_TYPE		EQU		000000002h
EVENTLOG_INFORMATION_TYPE		EQU		000000004h
EVENTLOG_AUDIT_SUCCESS		EQU		000000008h
EVENTLOG_AUDIT_FAILURE		EQU		000000010h
EVENTLOG_START_PAIRED_EVENT		EQU		000000001h
EVENTLOG_END_PAIRED_EVENT		EQU		000000002h
EVENTLOG_END_ALL_PAIRED_EVENTS		EQU		000000004h
EVENTLOG_PAIRED_EVENT_ACTIVE		EQU		000000008h
EVENTLOG_PAIRED_EVENT_INACTIVE		EQU		000000010h
_EVENTLOGRECORD		STRUCT 4t
_Length		DWORD		?
Reserved		DWORD		?
RecordNumber		DWORD		?
TimeGenerated		DWORD		?
TimeWritten		DWORD		?
EventID		DWORD		?
EventType		WORD		?
NumStrings		WORD		?
EventCategory		WORD		?
ReservedFlags		WORD		?
ClosingRecordNumber		DWORD		?
StringOffset		DWORD		?
UserSidLength		DWORD		?
UserSidOffset		DWORD		?
DataLength		DWORD		?
DataOffset		DWORD		?
_EVENTLOGRECORD		ENDS

EVENTLOGRECORD		TYPEDEF		_EVENTLOGRECORD

PEVENTLOGRECORD		TYPEDEF		PTR _EVENTLOGRECORD

DBG_CONTINUE		TEXTEQU		<((DWORD )0x00010002L)>
DBG_TERMINATE_THREAD		TEXTEQU		<((DWORD )0x40010003L)>
DBG_TERMINATE_PROCESS		TEXTEQU		<((DWORD )0x40010004L)>
DBG_CONTROL_C		TEXTEQU		<((DWORD )0x40010005L)>
DBG_CONTROL_BREAK		TEXTEQU		<((DWORD )0x40010008L)>
DBG_EXCEPTION_NOT_HANDLED		TEXTEQU		<((DWORD )0x80010001L)>
KEY_QUERY_VALUE		EQU		000000001h
KEY_SET_VALUE		EQU		000000002h
KEY_CREATE_SUB_KEY		EQU		000000004h
KEY_ENUMERATE_SUB_KEYS		EQU		000000008h
KEY_NOTIFY		EQU		000000010h
KEY_CREATE_LINK		EQU		000000020h
KEY_READ		EQU		000020019h
KEY_WRITE		EQU		000020006h
KEY_EXECUTE		EQU		000020019h
KEY_ALL_ACCESS		EQU		0000f003fh
REG_OPTION_RESERVED		EQU		000000000h
REG_OPTION_NON_VOLATILE		EQU		000000000h
REG_OPTION_VOLATILE		EQU		000000001h
REG_OPTION_CREATE_LINK		EQU		000000002h
REG_CREATED_NEW_KEY		EQU		000000001h
REG_OPENED_EXISTING_KEY		EQU		000000002h
REG_WHOLE_HIVE_VOLATILE		EQU		000000001h
REG_REFRESH_HIVE		EQU		000000002h
REG_NOTIFY_CHANGE_NAME		EQU		000000001h
REG_NOTIFY_CHANGE_ATTRIBUTES		EQU		000000002h
REG_NOTIFY_CHANGE_LAST_SET		EQU		000000004h
REG_NOTIFY_CHANGE_SECURITY		EQU		000000008h
REG_LEGAL_CHANGE_FILTER		EQU		00000000fh
REG_NONE		EQU		000000000h
REG_SZ		EQU		000000001h
REG_EXPAND_SZ		EQU		000000002h
REG_BINARY		EQU		000000003h
REG_DWORD		EQU		000000004h
REG_DWORD_LITTLE_ENDIAN		EQU		000000004h
REG_DWORD_BIG_ENDIAN		EQU		000000005h
REG_LINK		EQU		000000006h
REG_MULTI_SZ		EQU		000000007h
REG_RESOURCE_LIST		EQU		000000008h
REG_FULL_RESOURCE_DESCRIPTOR		EQU		000000009h
SERVICE_KERNEL_DRIVER		EQU		000000001h
SERVICE_FILE_SYSTEM_DRIVER		EQU		000000002h
SERVICE_DRIVER		EQU		000000003h
SERVICE_ADAPTER		EQU		000000004h
SERVICE_WIN32_OWN_PROCESS		EQU		000000010h
SERVICE_WIN32_SHARE_PROCESS		EQU		000000020h
SERVICE_WIN32		EQU		000000030h
SERVICE_TYPE_ALL		EQU		000000037h
SERVICE_BOOT_START		EQU		000000000h
SERVICE_SYSTEM_START		EQU		000000001h
SERVICE_AUTO_START		EQU		000000002h
SERVICE_DEMAND_START		EQU		000000003h
SERVICE_DISABLED		EQU		000000004h
SERVICE_ERROR_IGNORE		EQU		000000000h
SERVICE_ERROR_NORMAL		EQU		000000001h
SERVICE_ERROR_SEVERE		EQU		000000002h
SERVICE_ERROR_CRITICAL		EQU		000000003h
DriverType		EQU		1t
FileSystemType		EQU		2t
Win32ServiceOwnProcess		EQU		16t
Win32ServiceShareProcess		EQU		32t
AdapterType		EQU		4t

SERVICE_NODE_TYPE		TYPEDEF		SWORD

BootLoad		EQU		0t
SystemLoad		EQU		1t
AutoLoad		EQU		2t
DemandLoad		EQU		3t
DisableLoad		EQU		4t

SERVICE_LOAD_TYPE		TYPEDEF		SWORD

IgnoreError		EQU		0t
NormalError		EQU		1t
SevereError		EQU		2t
CriticalError		EQU		3t

SERVICE_ERROR_TYPE		TYPEDEF		SWORD

TAPE_ERASE_SHORT		EQU		000000000h
TAPE_ERASE_LONG		EQU		000000001h
_TAPE_ERASE		STRUCT 4t
_Type		DWORD		?
Immediate		BOOLEAN		?
_TAPE_ERASE		ENDS

TAPE_ERASE		TYPEDEF		_TAPE_ERASE

PTAPE_ERASE		TYPEDEF		PTR _TAPE_ERASE

TAPE_LOAD		EQU		000000000h
TAPE_UNLOAD		EQU		000000001h
TAPE_TENSION		EQU		000000002h
TAPE_LOCK		EQU		000000003h
TAPE_UNLOCK		EQU		000000004h
TAPE_FORMAT		EQU		000000005h
_TAPE_PREPARE		STRUCT 4t
Operation		DWORD		?
Immediate		BOOLEAN		?
_TAPE_PREPARE		ENDS

TAPE_PREPARE		TYPEDEF		_TAPE_PREPARE

PTAPE_PREPARE		TYPEDEF		PTR _TAPE_PREPARE

TAPE_SETMARKS		EQU		000000000h
TAPE_FILEMARKS		EQU		000000001h
TAPE_SHORT_FILEMARKS		EQU		000000002h
TAPE_LONG_FILEMARKS		EQU		000000003h
_TAPE_WRITE_MARKS		STRUCT 4t
_Type		DWORD		?
Count		DWORD		?
Immediate		BOOLEAN		?
_TAPE_WRITE_MARKS		ENDS

TAPE_WRITE_MARKS		TYPEDEF		_TAPE_WRITE_MARKS

PTAPE_WRITE_MARKS		TYPEDEF		PTR _TAPE_WRITE_MARKS

TAPE_ABSOLUTE_POSITION		EQU		000000000h
TAPE_LOGICAL_POSITION		EQU		000000001h
TAPE_PSEUDO_LOGICAL_POSITION		EQU		000000002h
_TAPE_GET_POSITION		STRUCT 4t
_Type		DWORD		?
Partition		DWORD		?
_Offset		LARGE_INTEGER		<>
_TAPE_GET_POSITION		ENDS

TAPE_GET_POSITION		TYPEDEF		_TAPE_GET_POSITION

PTAPE_GET_POSITION		TYPEDEF		PTR _TAPE_GET_POSITION

TAPE_REWIND		EQU		000000000h
TAPE_ABSOLUTE_BLOCK		EQU		000000001h
TAPE_LOGICAL_BLOCK		EQU		000000002h
TAPE_PSEUDO_LOGICAL_BLOCK		EQU		000000003h
TAPE_SPACE_END_OF_DATA		EQU		000000004h
TAPE_SPACE_RELATIVE_BLOCKS		EQU		000000005h
TAPE_SPACE_FILEMARKS		EQU		000000006h
TAPE_SPACE_SEQUENTIAL_FMKS		EQU		000000007h
TAPE_SPACE_SETMARKS		EQU		000000008h
TAPE_SPACE_SEQUENTIAL_SMKS		EQU		000000009h
_TAPE_SET_POSITION		STRUCT 4t
Method		DWORD		?
Partition		DWORD		?
_Offset		LARGE_INTEGER		<>
Immediate		BOOLEAN		?
_TAPE_SET_POSITION		ENDS

TAPE_SET_POSITION		TYPEDEF		_TAPE_SET_POSITION

PTAPE_SET_POSITION		TYPEDEF		PTR _TAPE_SET_POSITION

TAPE_DRIVE_FIXED		EQU		000000001h
TAPE_DRIVE_SELECT		EQU		000000002h
TAPE_DRIVE_INITIATOR		EQU		000000004h
TAPE_DRIVE_ERASE_SHORT		EQU		000000010h
TAPE_DRIVE_ERASE_LONG		EQU		000000020h
TAPE_DRIVE_ERASE_BOP_ONLY		EQU		000000040h
TAPE_DRIVE_ERASE_IMMEDIATE		EQU		000000080h
TAPE_DRIVE_TAPE_CAPACITY		EQU		000000100h
TAPE_DRIVE_TAPE_REMAINING		EQU		000000200h
TAPE_DRIVE_FIXED_BLOCK		EQU		000000400h
TAPE_DRIVE_VARIABLE_BLOCK		EQU		000000800h
TAPE_DRIVE_WRITE_PROTECT		EQU		000001000h
TAPE_DRIVE_EOT_WZ_SIZE		EQU		000002000h
TAPE_DRIVE_ECC		EQU		000010000h
TAPE_DRIVE_COMPRESSION		EQU		000020000h
TAPE_DRIVE_PADDING		EQU		000040000h
TAPE_DRIVE_REPORT_SMKS		EQU		000080000h
TAPE_DRIVE_GET_ABSOLUTE_BLK		EQU		000100000h
TAPE_DRIVE_GET_LOGICAL_BLK		EQU		000200000h
TAPE_DRIVE_SET_EOT_WZ_SIZE		EQU		000400000h
TAPE_DRIVE_RESERVED_BIT		EQU		080000000h
TAPE_DRIVE_LOAD_UNLOAD		EQU		080000001h
TAPE_DRIVE_TENSION		EQU		080000002h
TAPE_DRIVE_LOCK_UNLOCK		EQU		080000004h
TAPE_DRIVE_REWIND_IMMEDIATE		EQU		080000008h
TAPE_DRIVE_SET_BLOCK_SIZE		EQU		080000010h
TAPE_DRIVE_LOAD_UNLD_IMMED		EQU		080000020h
TAPE_DRIVE_TENSION_IMMED		EQU		080000040h
TAPE_DRIVE_LOCK_UNLK_IMMED		EQU		080000080h
TAPE_DRIVE_SET_ECC		EQU		080000100h
TAPE_DRIVE_SET_COMPRESSION		EQU		080000200h
TAPE_DRIVE_SET_PADDING		EQU		080000400h
TAPE_DRIVE_SET_REPORT_SMKS		EQU		080000800h
TAPE_DRIVE_ABSOLUTE_BLK		EQU		080001000h
TAPE_DRIVE_ABS_BLK_IMMED		EQU		080002000h
TAPE_DRIVE_LOGICAL_BLK		EQU		080004000h
TAPE_DRIVE_LOG_BLK_IMMED		EQU		080008000h
TAPE_DRIVE_END_OF_DATA		EQU		080010000h
TAPE_DRIVE_RELATIVE_BLKS		EQU		080020000h
TAPE_DRIVE_FILEMARKS		EQU		080040000h
TAPE_DRIVE_SEQUENTIAL_FMKS		EQU		080080000h
TAPE_DRIVE_SETMARKS		EQU		080100000h
TAPE_DRIVE_SEQUENTIAL_SMKS		EQU		080200000h
TAPE_DRIVE_REVERSE_POSITION		EQU		080400000h
TAPE_DRIVE_SPACE_IMMEDIATE		EQU		080800000h
TAPE_DRIVE_WRITE_SETMARKS		EQU		081000000h
TAPE_DRIVE_WRITE_FILEMARKS		EQU		082000000h
TAPE_DRIVE_WRITE_SHORT_FMKS		EQU		084000000h
TAPE_DRIVE_WRITE_LONG_FMKS		EQU		088000000h
TAPE_DRIVE_WRITE_MARK_IMMED		EQU		090000000h
TAPE_DRIVE_FORMAT		EQU		0a0000000h
TAPE_DRIVE_FORMAT_IMMEDIATE		EQU		0c0000000h
TAPE_DRIVE_HIGH_FEATURES		EQU		080000000h
_TAPE_GET_DRIVE_PARAMETERS		STRUCT 4t
ECC		BOOLEAN		?
Compression		BOOLEAN		?
DataPadding		BOOLEAN		?
ReportSetmarks		BOOLEAN		?
DefaultBlockSize		DWORD		?
MaximumBlockSize		DWORD		?
MinimumBlockSize		DWORD		?
MaximumPartitionCount		DWORD		?
FeaturesLow		DWORD		?
FeaturesHigh		DWORD		?
EOTWarningZoneSize		DWORD		?
_TAPE_GET_DRIVE_PARAMETERS		ENDS

TAPE_GET_DRIVE_PARAMETERS		TYPEDEF		_TAPE_GET_DRIVE_PARAMETERS

PTAPE_GET_DRIVE_PARAMETERS		TYPEDEF		PTR _TAPE_GET_DRIVE_PARAMETERS

_TAPE_SET_DRIVE_PARAMETERS		STRUCT 4t
ECC		BOOLEAN		?
Compression		BOOLEAN		?
DataPadding		BOOLEAN		?
ReportSetmarks		BOOLEAN		?
EOTWarningZoneSize		DWORD		?
_TAPE_SET_DRIVE_PARAMETERS		ENDS

TAPE_SET_DRIVE_PARAMETERS		TYPEDEF		_TAPE_SET_DRIVE_PARAMETERS

PTAPE_SET_DRIVE_PARAMETERS		TYPEDEF		PTR _TAPE_SET_DRIVE_PARAMETERS

_TAPE_GET_MEDIA_PARAMETERS		STRUCT 4t
Capacity		LARGE_INTEGER		<>
Remaining		LARGE_INTEGER		<>
BlockSize		DWORD		?
PartitionCount		DWORD		?
WriteProtected		BOOLEAN		?
_TAPE_GET_MEDIA_PARAMETERS		ENDS

TAPE_GET_MEDIA_PARAMETERS		TYPEDEF		_TAPE_GET_MEDIA_PARAMETERS

PTAPE_GET_MEDIA_PARAMETERS		TYPEDEF		PTR _TAPE_GET_MEDIA_PARAMETERS

_TAPE_SET_MEDIA_PARAMETERS		STRUCT 4t
BlockSize		DWORD		?
_TAPE_SET_MEDIA_PARAMETERS		ENDS

TAPE_SET_MEDIA_PARAMETERS		TYPEDEF		_TAPE_SET_MEDIA_PARAMETERS

PTAPE_SET_MEDIA_PARAMETERS		TYPEDEF		PTR _TAPE_SET_MEDIA_PARAMETERS

TAPE_FIXED_PARTITIONS		EQU		000000000h
TAPE_SELECT_PARTITIONS		EQU		000000001h
TAPE_INITIATOR_PARTITIONS		EQU		000000002h
_TAPE_CREATE_PARTITION		STRUCT 4t
Method		DWORD		?
Count		DWORD		?
_Size		DWORD		?
_TAPE_CREATE_PARTITION		ENDS

TAPE_CREATE_PARTITION		TYPEDEF		_TAPE_CREATE_PARTITION

PTAPE_CREATE_PARTITION		TYPEDEF		PTR _TAPE_CREATE_PARTITION

IMAGE_DOS_SIGNATURE		EQU		000005a4dh
IMAGE_OS2_SIGNATURE		EQU		00000454eh
IMAGE_OS2_SIGNATURE_LE		EQU		00000454ch
IMAGE_NT_SIGNATURE		EQU		000004550h
_IMAGE_DOS_HEADER		STRUCT 1t
e_magic		WORD		?
e_cblp		WORD		?
e_cp		WORD		?
e_crlc		WORD		?
e_cparhdr		WORD		?
e_minalloc		WORD		?
e_maxalloc		WORD		?
e_ss		WORD		?
e_sp		WORD		?
e_csum		WORD		?
e_ip		WORD		?
e_cs		WORD		?
e_lfarlc		WORD		?
e_ovno		WORD		?
e_res		WORD		4t DUP (?)
e_oemid		WORD		?
e_oeminfo		WORD		?
e_res2		WORD		10t DUP (?)
e_lfanew		LONG		?
_IMAGE_DOS_HEADER		ENDS

IMAGE_DOS_HEADER		TYPEDEF		_IMAGE_DOS_HEADER

PIMAGE_DOS_HEADER		TYPEDEF		PTR _IMAGE_DOS_HEADER

_IMAGE_OS2_HEADER		STRUCT 1t
ne_magic		WORD		?
ne_ver		CHAR		?
ne_rev		CHAR		?
ne_enttab		WORD		?
ne_cbenttab		WORD		?
ne_crc		LONG		?
ne_flags		WORD		?
ne_autodata		WORD		?
ne_heap		WORD		?
ne_stack		WORD		?
ne_csip		LONG		?
ne_sssp		LONG		?
ne_cseg		WORD		?
ne_cmod		WORD		?
ne_cbnrestab		WORD		?
ne_segtab		WORD		?
ne_rsrctab		WORD		?
ne_restab		WORD		?
ne_modtab		WORD		?
ne_imptab		WORD		?
ne_nrestab		LONG		?
ne_cmovent		WORD		?
ne_align		WORD		?
ne_cres		WORD		?
ne_exetyp		BYTE		?
ne_flagsothers		BYTE		?
ne_pretthunks		WORD		?
ne_psegrefbytes		WORD		?
ne_swaparea		WORD		?
ne_expver		WORD		?
_IMAGE_OS2_HEADER		ENDS

IMAGE_OS2_HEADER		TYPEDEF		_IMAGE_OS2_HEADER

PIMAGE_OS2_HEADER		TYPEDEF		PTR _IMAGE_OS2_HEADER

_IMAGE_FILE_HEADER		STRUCT 1t
Machine		WORD		?
NumberOfSections		WORD		?
TimeDateStamp		DWORD		?
PointerToSymbolTable		DWORD		?
NumberOfSymbols		DWORD		?
SizeOfOptionalHeader		WORD		?
Characteristics		WORD		?
_IMAGE_FILE_HEADER		ENDS

IMAGE_FILE_HEADER		TYPEDEF		_IMAGE_FILE_HEADER

PIMAGE_FILE_HEADER		TYPEDEF		PTR _IMAGE_FILE_HEADER

IMAGE_SIZEOF_FILE_HEADER		EQU		20t
IMAGE_FILE_RELOCS_STRIPPED		EQU		000000001h
IMAGE_FILE_EXECUTABLE_IMAGE		EQU		000000002h
IMAGE_FILE_LINE_NUMS_STRIPPED		EQU		000000004h
IMAGE_FILE_LOCAL_SYMS_STRIPPED		EQU		000000008h
IMAGE_FILE_MINIMAL_OBJECT		EQU		000000010h
IMAGE_FILE_UPDATE_OBJECT		EQU		000000020h
IMAGE_FILE_16BIT_MACHINE		EQU		000000040h
IMAGE_FILE_BYTES_REVERSED_LO		EQU		000000080h
IMAGE_FILE_32BIT_MACHINE		EQU		000000100h
IMAGE_FILE_PATCH		EQU		000000400h
IMAGE_FILE_SYSTEM		EQU		000001000h
IMAGE_FILE_DLL		EQU		000002000h
IMAGE_FILE_BYTES_REVERSED_HI		EQU		000008000h
IMAGE_FILE_MACHINE_UNKNOWN		EQU		0t
IMAGE_FILE_MACHINE_I860		EQU		00000014dh
IMAGE_FILE_MACHINE_I386		EQU		00000014ch
IMAGE_FILE_MACHINE_R3000		EQU		000000162h
IMAGE_FILE_MACHINE_R4000		EQU		000000166h
IMAGE_FILE_MACHINE_ALPHA		EQU		000000183h
_IMAGE_DATA_DIRECTORY		STRUCT 1t
VirtualAddress		DWORD		?
_Size		DWORD		?
_IMAGE_DATA_DIRECTORY		ENDS

IMAGE_DATA_DIRECTORY		TYPEDEF		_IMAGE_DATA_DIRECTORY

PIMAGE_DATA_DIRECTORY		TYPEDEF		PTR _IMAGE_DATA_DIRECTORY

IMAGE_NUMBEROF_DIRECTORY_ENTRIE		EQU		16t
_IMAGE_OPTIONAL_HEADER		STRUCT 1t
Magic		WORD		?
MajorLinkerVersion		BYTE		?
MinorLinkerVersion		BYTE		?
SizeOfCode		DWORD		?
SizeOfInitializedData		DWORD		?
SizeOfUninitializedData		DWORD		?
AddressOfEntryPoint		DWORD		?
BaseOfCode		DWORD		?
BaseOfData		DWORD		?
ImageBase		DWORD		?
SectionAlignment		DWORD		?
FileAlignment		DWORD		?
MajorOperatingSystemVersion		WORD		?
MinorOperatingSystemVersion		WORD		?
MajorImageVersion		WORD		?
MinorImageVersion		WORD		?
MajorSubsystemVersion		WORD		?
MinorSubsystemVersion		WORD		?
Reserved1		DWORD		?
SizeOfImage		DWORD		?
SizeOfHeaders		DWORD		?
CheckSum		DWORD		?
Subsystem		WORD		?
DllCharacteristics		WORD		?
SizeOfStackReserve		DWORD		?
SizeOfStackCommit		DWORD		?
SizeOfHeapReserve		DWORD		?
SizeOfHeapCommit		DWORD		?
LoaderFlags		DWORD		?
NumberOfRvaAndSizes		DWORD		?
DataDirectory		IMAGE_DATA_DIRECTORY		16t DUP (<>)
_IMAGE_OPTIONAL_HEADER		ENDS

IMAGE_OPTIONAL_HEADER		TYPEDEF		_IMAGE_OPTIONAL_HEADER

PIMAGE_OPTIONAL_HEADER		TYPEDEF		PTR _IMAGE_OPTIONAL_HEADER

IMAGE_SIZEOF_STD_OPTIONAL_HEADE		EQU		28t
IMAGE_SIZEOF_NT_OPTIONAL_HEADER		EQU		224t
_IMAGE_NT_HEADERS		STRUCT 1t
Signature		DWORD		?
FileHeader		IMAGE_FILE_HEADER		<>
OptionalHeader		IMAGE_OPTIONAL_HEADER		<>
_IMAGE_NT_HEADERS		ENDS

IMAGE_NT_HEADERS		TYPEDEF		_IMAGE_NT_HEADERS

PIMAGE_NT_HEADERS		TYPEDEF		PTR _IMAGE_NT_HEADERS

IMAGE_SUBSYSTEM_UNKNOWN		EQU		0t
IMAGE_SUBSYSTEM_NATIVE		EQU		1t
IMAGE_SUBSYSTEM_WINDOWS_GUI		EQU		2t
IMAGE_SUBSYSTEM_WINDOWS_CUI		EQU		3t
IMAGE_SUBSYSTEM_OS2_CUI		EQU		5t
IMAGE_SUBSYSTEM_POSIX_CUI		EQU		7t
IMAGE_LIBRARY_PROCESS_INIT		EQU		1t
IMAGE_LIBRARY_PROCESS_TERM		EQU		2t
IMAGE_LIBRARY_THREAD_INIT		EQU		4t
IMAGE_LIBRARY_THREAD_TERM		EQU		8t
IMAGE_LOADER_FLAGS_BREAK_ON_LOA		EQU		000000001h
IMAGE_LOADER_FLAGS_DEBUG_ON_LOA		EQU		000000002h
IMAGE_DIRECTORY_ENTRY_EXPORT		EQU		0t
IMAGE_DIRECTORY_ENTRY_IMPORT		EQU		1t
IMAGE_DIRECTORY_ENTRY_RESOURCE		EQU		2t
IMAGE_DIRECTORY_ENTRY_EXCEPTION		EQU		3t
IMAGE_DIRECTORY_ENTRY_SECURITY		EQU		4t
IMAGE_DIRECTORY_ENTRY_BASERELOC		EQU		5t
IMAGE_DIRECTORY_ENTRY_DEBUG		EQU		6t
IMAGE_DIRECTORY_ENTRY_COPYRIGHT		EQU		7t
IMAGE_DIRECTORY_ENTRY_GLOBALPTR		EQU		8t
IMAGE_DIRECTORY_ENTRY_TLS		EQU		9t
IMAGE_DIRECTORY_ENTRY_NTDLL_CON		EQU		10t
IMAGE_SIZEOF_SHORT_NAME		EQU		8t
@tag_5		UNION
PhysicalAddress		DWORD		?
VirtualSize		DWORD		?
@tag_5		ENDS

_IMAGE_SECTION_HEADER		STRUCT 1t
_Name		BYTE		8t DUP (?)
Misc		@tag_5		<>
VirtualAddress		DWORD		?
SizeOfRawData		DWORD		?
PointerToRawData		DWORD		?
PointerToRelocations		DWORD		?
PointerToLinenumbers		DWORD		?
NumberOfRelocations		WORD		?
NumberOfLinenumbers		WORD		?
Characteristics		DWORD		?
_IMAGE_SECTION_HEADER		ENDS

IMAGE_SECTION_HEADER		TYPEDEF		_IMAGE_SECTION_HEADER

PIMAGE_SECTION_HEADER		TYPEDEF		PTR _IMAGE_SECTION_HEADER

IMAGE_SIZEOF_SECTION_HEADER		EQU		40t
IMAGE_SCN_TYPE_REGULAR		EQU		000000000h
IMAGE_SCN_TYPE_DUMMY		EQU		000000001h
IMAGE_SCN_TYPE_NO_LOAD		EQU		000000002h
IMAGE_SCN_TYPE_GROUPED		EQU		000000004h
IMAGE_SCN_TYPE_NO_PAD		EQU		000000008h
IMAGE_SCN_TYPE_COPY		EQU		000000010h
IMAGE_SCN_CNT_CODE		EQU		000000020h
IMAGE_SCN_CNT_INITIALIZED_DATA		EQU		000000040h
IMAGE_SCN_CNT_UNINITIALIZED_DAT		EQU		000000080h
IMAGE_SCN_LNK_OTHER		EQU		000000100h
IMAGE_SCN_LNK_INFO		EQU		000000200h
IMAGE_SCN_LNK_OVERLAY		EQU		000000400h
IMAGE_SCN_LNK_REMOVE		EQU		000000800h
IMAGE_SCN_LNK_COMDAT		EQU		000001000h
IMAGE_SCN_ALIGN_1BYTES		EQU		000100000h
IMAGE_SCN_ALIGN_2BYTES		EQU		000200000h
IMAGE_SCN_ALIGN_4BYTES		EQU		000300000h
IMAGE_SCN_ALIGN_8BYTES		EQU		000400000h
IMAGE_SCN_ALIGN_16BYTES		EQU		000500000h
IMAGE_SCN_ALIGN_32BYTES		EQU		000600000h
IMAGE_SCN_ALIGN_64BYTES		EQU		000700000h
IMAGE_SCN_MEM_DISCARDABLE		EQU		002000000h
IMAGE_SCN_MEM_NOT_CACHED		EQU		004000000h
IMAGE_SCN_MEM_NOT_PAGED		EQU		008000000h
IMAGE_SCN_MEM_SHARED		EQU		010000000h
IMAGE_SCN_MEM_EXECUTE		EQU		020000000h
IMAGE_SCN_MEM_READ		EQU		040000000h
IMAGE_SCN_MEM_WRITE		EQU		080000000h
@tag_7		STRUCT 1t
_Short		DWORD		?
Long		DWORD		?
@tag_7		ENDS

@tag_6		UNION
ShortName		BYTE		8t DUP (?)
_Name		@tag_7		<>
LongName		PBYTE		2t DUP (?)
@tag_6		ENDS

_IMAGE_SYMBOL		STRUCT 1t
N		@tag_6		<>
Value		DWORD		?
SectionNumber		_SHORT		?
_Type		WORD		?
StorageClass		BYTE		?
NumberOfAuxSymbols		BYTE		?
_IMAGE_SYMBOL		ENDS

IMAGE_SYMBOL		TYPEDEF		_IMAGE_SYMBOL

PIMAGE_SYMBOL		TYPEDEF		PTR IMAGE_SYMBOL

IMAGE_SIZEOF_SYMBOL		EQU		18t
IMAGE_SYM_UNDEFINED		TEXTEQU		<(_SHORT)0>
IMAGE_SYM_ABSOLUTE		TEXTEQU		<(_SHORT)-1>
IMAGE_SYM_DEBUG		TEXTEQU		<(_SHORT)-2>
IMAGE_SYM_TYPE_NULL		EQU		0t
IMAGE_SYM_TYPE_VOID		EQU		1t
IMAGE_SYM_TYPE_CHAR		EQU		2t
IMAGE_SYM_TYPE_SHORT		EQU		3t
IMAGE_SYM_TYPE_INT		EQU		4t
IMAGE_SYM_TYPE_LONG		EQU		5t
IMAGE_SYM_TYPE_FLOAT		EQU		6t
IMAGE_SYM_TYPE_DOUBLE		EQU		7t
IMAGE_SYM_TYPE_STRUCT		EQU		8t
IMAGE_SYM_TYPE_UNION		EQU		9t
IMAGE_SYM_TYPE_ENUM		EQU		10t
IMAGE_SYM_TYPE_MOE		EQU		11t
IMAGE_SYM_TYPE_BYTE		EQU		12t
IMAGE_SYM_TYPE_WORD		EQU		13t
IMAGE_SYM_TYPE_UINT		EQU		14t
IMAGE_SYM_TYPE_DWORD		EQU		15t
IMAGE_SYM_DTYPE_NULL		EQU		0t
IMAGE_SYM_DTYPE_POINTER		EQU		1t
IMAGE_SYM_DTYPE_FUNCTION		EQU		2t
IMAGE_SYM_DTYPE_ARRAY		EQU		3t
IMAGE_SYM_CLASS_END_OF_FUNCTION		TEXTEQU		<(BYTE )-1>
IMAGE_SYM_CLASS_NULL		EQU		0t
IMAGE_SYM_CLASS_AUTOMATIC		EQU		1t
IMAGE_SYM_CLASS_EXTERNAL		EQU		2t
IMAGE_SYM_CLASS_STATIC		EQU		3t
IMAGE_SYM_CLASS_REGISTER		EQU		4t
IMAGE_SYM_CLASS_EXTERNAL_DEF		EQU		5t
IMAGE_SYM_CLASS_LABEL		EQU		6t
IMAGE_SYM_CLASS_UNDEFINED_LABEL		EQU		7t
IMAGE_SYM_CLASS_MEMBER_OF_STRUC		EQU		8t
IMAGE_SYM_CLASS_ARGUMENT		EQU		9t
IMAGE_SYM_CLASS_STRUCT_TAG		EQU		10t
IMAGE_SYM_CLASS_MEMBER_OF_UNION		EQU		11t
IMAGE_SYM_CLASS_UNION_TAG		EQU		12t
IMAGE_SYM_CLASS_TYPE_DEFINITION		EQU		13t
IMAGE_SYM_CLASS_UNDEFINED_STATI		EQU		14t
IMAGE_SYM_CLASS_ENUM_TAG		EQU		15t
IMAGE_SYM_CLASS_MEMBER_OF_ENUM		EQU		16t
IMAGE_SYM_CLASS_REGISTER_PARAM		EQU		17t
IMAGE_SYM_CLASS_BIT_FIELD		EQU		18t
IMAGE_SYM_CLASS_BLOCK		EQU		100t
IMAGE_SYM_CLASS_FUNCTION		EQU		101t
IMAGE_SYM_CLASS_END_OF_STRUCT		EQU		102t
IMAGE_SYM_CLASS_FILE		EQU		103t
IMAGE_SYM_CLASS_SECTION		EQU		104t
IMAGE_SYM_CLASS_WEAK_EXTERNAL		EQU		105t
N_BTMASK		EQU		         17o
N_TMASK		EQU		         60o
N_TMASK1		EQU		        300o
N_TMASK2		EQU		        360o
N_BTSHFT		EQU		4t
N_TSHIFT		EQU		2t
@tag_10		STRUCT 1t
Linenumber		WORD		?
_Size		WORD		?
@tag_10		ENDS

@tag_9		UNION
LnSz		@tag_10		<>
TotalSize		DWORD		?
@tag_9		ENDS

@tag_12		STRUCT 1t
PointerToLinenumber		DWORD		?
PointerToNextFunction		DWORD		?
@tag_12		ENDS

@tag_13		STRUCT 1t
Dimension		WORD		4t DUP (?)
@tag_13		ENDS

@tag_11		UNION
Function		@tag_12		<>
Array		@tag_13		<>
@tag_11		ENDS

@tag_8		STRUCT 1t
TagIndex		DWORD		?
Misc		@tag_9		<>
FcnAry		@tag_11		<>
TvIndex		WORD		?
@tag_8		ENDS

@tag_14		STRUCT 1t
_Name		BYTE		18t DUP (?)
@tag_14		ENDS

@tag_15		STRUCT 1t
_Length		DWORD		?
NumberOfRelocations		WORD		?
NumberOfLinenumbers		WORD		?
CheckSum		DWORD		?
Number		_SHORT		?
Selection		BYTE		?
@tag_15		ENDS

_IMAGE_AUX_SYMBOL		UNION
Sym		@tag_8		<>
File		@tag_14		<>
Section		@tag_15		<>
_IMAGE_AUX_SYMBOL		ENDS

IMAGE_AUX_SYMBOL		TYPEDEF		_IMAGE_AUX_SYMBOL

PIMAGE_AUX_SYMBOL		TYPEDEF		PTR IMAGE_AUX_SYMBOL

IMAGE_SIZEOF_AUX_SYMBOL		EQU		18t
IMAGE_COMDAT_SELECT_UNKNOWN		EQU		0t
IMAGE_COMDAT_SELECT_NODUPLICATE		EQU		1t
IMAGE_COMDAT_SELECT_ANY		EQU		2t
IMAGE_COMDAT_SELECT_SAME_SIZE		EQU		3t
IMAGE_COMDAT_SELECT_EXACT_MATCH		EQU		4t
IMAGE_COMDAT_SELECT_ASSOCIATIVE		EQU		5t
IMAGE_WEAK_EXTERN_SEARCH_UNKNOW		EQU		0t
IMAGE_WEAK_EXTERN_SEARCH_NOLIBR		EQU		1t
IMAGE_WEAK_EXTERN_SEARCH_LIBRAR		EQU		2t
_IMAGE_RELOCATION		STRUCT 1t
VirtualAddress		DWORD		?
SymbolTableIndex		DWORD		?
_Type		WORD		?
_IMAGE_RELOCATION		ENDS

IMAGE_RELOCATION		TYPEDEF		_IMAGE_RELOCATION

PIMAGE_RELOCATION		TYPEDEF		PTR IMAGE_RELOCATION

IMAGE_SIZEOF_RELOCATION		EQU		10t
IMAGE_REL_I860_ABSOLUTE		EQU		0t
IMAGE_REL_I860_DIR32		EQU		          6o
IMAGE_REL_I860_DIR32NB		EQU		          7o
IMAGE_REL_I860_SECTION		EQU		         12o
IMAGE_REL_I860_SECREL		EQU		         13o
IMAGE_REL_I860_PAIR		EQU		         34o
IMAGE_REL_I860_HIGH		EQU		         36o
IMAGE_REL_I860_LOW0		EQU		         37o
IMAGE_REL_I860_LOW1		EQU		         40o
IMAGE_REL_I860_LOW2		EQU		         41o
IMAGE_REL_I860_LOW3		EQU		         42o
IMAGE_REL_I860_LOW4		EQU		         43o
IMAGE_REL_I860_SPLIT0		EQU		         44o
IMAGE_REL_I860_SPLIT1		EQU		         45o
IMAGE_REL_I860_SPLIT2		EQU		         46o
IMAGE_REL_I860_HIGHADJ		EQU		         47o
IMAGE_REL_I860_BRADDR		EQU		         50o
IMAGE_REL_I386_ABSOLUTE		EQU		0t
IMAGE_REL_I386_DIR16		EQU		          1o
IMAGE_REL_I386_REL16		EQU		          2o
IMAGE_REL_I386_DIR32		EQU		          6o
IMAGE_REL_I386_DIR32NB		EQU		          7o
IMAGE_REL_I386_SEG12		EQU		         11o
IMAGE_REL_I386_SECTION		EQU		         12o
IMAGE_REL_I386_SECREL		EQU		         13o
IMAGE_REL_I386_REL32		EQU		         24o
IMAGE_REL_MIPS_ABSOLUTE		EQU		0t
IMAGE_REL_MIPS_REFHALF		EQU		          1o
IMAGE_REL_MIPS_REFWORD		EQU		          2o
IMAGE_REL_MIPS_JMPADDR		EQU		          3o
IMAGE_REL_MIPS_REFHI		EQU		          4o
IMAGE_REL_MIPS_REFLO		EQU		          5o
IMAGE_REL_MIPS_GPREL		EQU		          6o
IMAGE_REL_MIPS_LITERAL		EQU		          7o
IMAGE_REL_MIPS_SECTION		EQU		         12o
IMAGE_REL_MIPS_SECREL		EQU		         13o
IMAGE_REL_MIPS_REFWORDNB		EQU		         42o
IMAGE_REL_MIPS_PAIR		EQU		         45o
IMAGE_REL_ALPHA_ABSOLUTE		EQU		000000000h
IMAGE_REL_ALPHA_REFLONG		EQU		000000001h
IMAGE_REL_ALPHA_REFQUAD		EQU		000000002h
IMAGE_REL_ALPHA_GPREL32		EQU		000000003h
IMAGE_REL_ALPHA_LITERAL		EQU		000000004h
IMAGE_REL_ALPHA_LITUSE		EQU		000000005h
IMAGE_REL_ALPHA_GPDISP		EQU		000000006h
IMAGE_REL_ALPHA_BRADDR		EQU		000000007h
IMAGE_REL_ALPHA_HINT		EQU		000000008h
IMAGE_REL_ALPHA_INLINE_REFLONG		EQU		000000009h
IMAGE_REL_ALPHA_REFHI		EQU		00000000ah
IMAGE_REL_ALPHA_REFLO		EQU		00000000bh
IMAGE_REL_ALPHA_PAIR		EQU		00000000ch
IMAGE_REL_ALPHA_MATCH		EQU		00000000dh
IMAGE_REL_ALPHA_SECTION		EQU		00000000eh
IMAGE_REL_ALPHA_SECREL		EQU		00000000fh
IMAGE_REL_ALPHA_REFLONGNB		EQU		000000010h
_IMAGE_BASE_RELOCATION		STRUCT 1t
VirtualAddress		DWORD		?
SizeOfBlock		DWORD		?
_IMAGE_BASE_RELOCATION		ENDS

IMAGE_BASE_RELOCATION		TYPEDEF		_IMAGE_BASE_RELOCATION

PIMAGE_BASE_RELOCATION		TYPEDEF		PTR _IMAGE_BASE_RELOCATION

IMAGE_SIZEOF_BASE_RELOCATION		EQU		8t
IMAGE_REL_BASED_ABSOLUTE		EQU		0t
IMAGE_REL_BASED_HIGH		EQU		1t
IMAGE_REL_BASED_LOW		EQU		2t
IMAGE_REL_BASED_HIGHLOW		EQU		3t
IMAGE_REL_BASED_HIGHADJ		EQU		4t
IMAGE_REL_BASED_MIPS_JMPADDR		EQU		5t
IMAGE_REL_BASED_I860_BRADDR		EQU		6t
IMAGE_REL_BASED_I860_SPLIT		EQU		7t
@tag_16		UNION
SymbolTableIndex		DWORD		?
VirtualAddress		DWORD		?
@tag_16		ENDS

_IMAGE_LINENUMBER		STRUCT 1t
_Type		@tag_16		<>
Linenumber		WORD		?
_IMAGE_LINENUMBER		ENDS

IMAGE_LINENUMBER		TYPEDEF		_IMAGE_LINENUMBER

PIMAGE_LINENUMBER		TYPEDEF		PTR IMAGE_LINENUMBER

IMAGE_SIZEOF_LINENUMBER		EQU		6t
IMAGE_ARCHIVE_START_SIZE		EQU		8t
IMAGE_ARCHIVE_START		TEXTEQU		<"!!!<arch!>\n">
IMAGE_ARCHIVE_END		TEXTEQU		<"`\n">
IMAGE_ARCHIVE_PAD		TEXTEQU		<"\n">
IMAGE_ARCHIVE_LINKER_MEMBER		TEXTEQU		<"/               ">
IMAGE_ARCHIVE_LONGNAMES_MEMBER		TEXTEQU		<"//              ">
_IMAGE_ARCHIVE_MEMBER_HEADER		STRUCT 1t
_Name		BYTE		16t DUP (?)
Date		BYTE		12t DUP (?)
UserID		BYTE		6t DUP (?)
GroupID		BYTE		6t DUP (?)
Mode		BYTE		8t DUP (?)
_Size		BYTE		10t DUP (?)
EndHeader		BYTE		2t DUP (?)
_IMAGE_ARCHIVE_MEMBER_HEADER		ENDS

IMAGE_ARCHIVE_MEMBER_HEADER		TYPEDEF		_IMAGE_ARCHIVE_MEMBER_HEADER

PIMAGE_ARCHIVE_MEMBER_HEADER		TYPEDEF		PTR _IMAGE_ARCHIVE_MEMBER_HEADER

IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR		EQU		60t
@t_5		TYPEDEF		PTR PDWORD
@t_6		TYPEDEF		PTR PDWORD
@t_7		TYPEDEF		PTR PWORD
_IMAGE_EXPORT_DIRECTORY		STRUCT 1t
Characteristics		DWORD		?
TimeDateStamp		DWORD		?
MajorVersion		WORD		?
MinorVersion		WORD		?
_Name		DWORD		?
Base		DWORD		?
NumberOfFunctions		DWORD		?
NumberOfNames		DWORD		?
AddressOfFunctions		@t_5		?
AddressOfNames		@t_6		?
AddressOfNameOrdinals		@t_7		?
_IMAGE_EXPORT_DIRECTORY		ENDS

IMAGE_EXPORT_DIRECTORY		TYPEDEF		_IMAGE_EXPORT_DIRECTORY

PIMAGE_EXPORT_DIRECTORY		TYPEDEF		PTR _IMAGE_EXPORT_DIRECTORY

_IMAGE_IMPORT_BY_NAME		STRUCT 1t
Hint		WORD		?
_Name		BYTE		1t DUP (?)
_IMAGE_IMPORT_BY_NAME		ENDS

IMAGE_IMPORT_BY_NAME		TYPEDEF		_IMAGE_IMPORT_BY_NAME

PIMAGE_IMPORT_BY_NAME		TYPEDEF		PTR _IMAGE_IMPORT_BY_NAME

@tag_17		UNION
Function		PDWORD		?
Ordinal		DWORD		?
AddressOfData		PIMAGE_IMPORT_BY_NAME		?
@tag_17		ENDS

_IMAGE_THUNK_DATA		STRUCT 1t
u1		@tag_17		<>
_IMAGE_THUNK_DATA		ENDS

IMAGE_THUNK_DATA		TYPEDEF		_IMAGE_THUNK_DATA

PIMAGE_THUNK_DATA		TYPEDEF		PTR _IMAGE_THUNK_DATA

IMAGE_ORDINAL_FLAG		EQU		080000000h
_IMAGE_IMPORT_DESCRIPTOR		STRUCT 1t
Characteristics		DWORD		?
TimeDateStamp		DWORD		?
ForwarderChain		DWORD		?
_Name		DWORD		?
FirstThunk		PIMAGE_THUNK_DATA		?
_IMAGE_IMPORT_DESCRIPTOR		ENDS

IMAGE_IMPORT_DESCRIPTOR		TYPEDEF		_IMAGE_IMPORT_DESCRIPTOR

PIMAGE_IMPORT_DESCRIPTOR		TYPEDEF		PTR _IMAGE_IMPORT_DESCRIPTOR

@proto_98		TYPEDEF		PROTO STDCALL :PVOID, :BOOLEAN
IMAGE_TLS_CALLBACK		TYPEDEF		@proto_98

PIMAGE_TLS_CALLBACK		TYPEDEF		PTR IMAGE_TLS_CALLBACK

@t_8		TYPEDEF		PTR PIMAGE_TLS_CALLBACK
_IMAGE_TLS_DIRECTORY		STRUCT 1t
StartAddressOfRawData		DWORD		?
EndAddressOfRawData		DWORD		?
AddressOfIndex		PDWORD		?
AddressOfCallBacks		@t_8		?
SizeOfZeroFill		DWORD		?
Characteristics		DWORD		?
_IMAGE_TLS_DIRECTORY		ENDS

IMAGE_TLS_DIRECTORY		TYPEDEF		_IMAGE_TLS_DIRECTORY

PIMAGE_TLS_DIRECTORY		TYPEDEF		PTR _IMAGE_TLS_DIRECTORY

_IMAGE_RESOURCE_DIRECTORY		STRUCT 1t
Characteristics		DWORD		?
TimeDateStamp		DWORD		?
MajorVersion		WORD		?
MinorVersion		WORD		?
NumberOfNamedEntries		WORD		?
NumberOfIdEntries		WORD		?
_IMAGE_RESOURCE_DIRECTORY		ENDS

IMAGE_RESOURCE_DIRECTORY		TYPEDEF		_IMAGE_RESOURCE_DIRECTORY

PIMAGE_RESOURCE_DIRECTORY		TYPEDEF		PTR _IMAGE_RESOURCE_DIRECTORY

IMAGE_RESOURCE_NAME_IS_STRING		EQU		080000000h
IMAGE_RESOURCE_DATA_IS_DIRECTOR		EQU		080000000h
_IMAGE_RESOURCE_DIRECTORY_ENTRY		STRUCT 1t
_Name		DWORD		?
OffsetToData		DWORD		?
_IMAGE_RESOURCE_DIRECTORY_ENTRY		ENDS

IMAGE_RESOURCE_DIRECTORY_ENTRY		TYPEDEF		_IMAGE_RESOURCE_DIRECTORY_ENTRY

PIMAGE_RESOURCE_DIRECTORY_ENTRY		TYPEDEF		PTR _IMAGE_RESOURCE_DIRECTORY_ENTRY

_IMAGE_RESOURCE_DIRECTORY_STRIN		STRUCT 1t
_Length		WORD		?
NameString		CHAR		1t DUP (?)
_IMAGE_RESOURCE_DIRECTORY_STRIN		ENDS

IMAGE_RESOURCE_DIRECTORY_STRING		TYPEDEF		_IMAGE_RESOURCE_DIRECTORY_STRIN

PIMAGE_RESOURCE_DIRECTORY_STRIN		TYPEDEF		PTR _IMAGE_RESOURCE_DIRECTORY_STRIN

_IMAGE_RESOURCE_DIR_STRING_U		STRUCT 1t
_Length		WORD		?
NameString		WCHAR		1t DUP (?)
_IMAGE_RESOURCE_DIR_STRING_U		ENDS

IMAGE_RESOURCE_DIR_STRING_U		TYPEDEF		_IMAGE_RESOURCE_DIR_STRING_U

PIMAGE_RESOURCE_DIR_STRING_U		TYPEDEF		PTR _IMAGE_RESOURCE_DIR_STRING_U

_IMAGE_RESOURCE_DATA_ENTRY		STRUCT 1t
OffsetToData		DWORD		?
_Size		DWORD		?
CodePage		DWORD		?
Reserved		DWORD		?
_IMAGE_RESOURCE_DATA_ENTRY		ENDS

IMAGE_RESOURCE_DATA_ENTRY		TYPEDEF		_IMAGE_RESOURCE_DATA_ENTRY

PIMAGE_RESOURCE_DATA_ENTRY		TYPEDEF		PTR _IMAGE_RESOURCE_DATA_ENTRY

_IMAGE_NTDLL_CONFIG_DIRECTORY		STRUCT 1t
Characteristics		DWORD		?
TimeDateStamp		DWORD		?
MajorVersion		WORD		?
MinorVersion		WORD		?
GlobalFlagsClear		DWORD		?
GlobalFlagsSet		DWORD		?
CriticalSectionDefaultTimeout		DWORD		?
DeCommitFreeBlockThreshold		DWORD		?
DeCommitTotalFreeThreshold		DWORD		?
Reserved		DWORD		8t DUP (?)
_IMAGE_NTDLL_CONFIG_DIRECTORY		ENDS

IMAGE_NTDLL_CONFIG_DIRECTORY		TYPEDEF		_IMAGE_NTDLL_CONFIG_DIRECTORY

PIMAGE_NTDLL_CONFIG_DIRECTORY		TYPEDEF		PTR _IMAGE_NTDLL_CONFIG_DIRECTORY

_IMAGE_DEBUG_DIRECTORY		STRUCT 1t
Characteristics		DWORD		?
TimeDateStamp		DWORD		?
MajorVersion		WORD		?
MinorVersion		WORD		?
_Type		DWORD		?
SizeOfData		DWORD		?
AddressOfRawData		DWORD		?
PointerToRawData		DWORD		?
_IMAGE_DEBUG_DIRECTORY		ENDS

IMAGE_DEBUG_DIRECTORY		TYPEDEF		_IMAGE_DEBUG_DIRECTORY

PIMAGE_DEBUG_DIRECTORY		TYPEDEF		PTR _IMAGE_DEBUG_DIRECTORY

IMAGE_DEBUG_TYPE_UNKNOWN		EQU		0t
IMAGE_DEBUG_TYPE_COFF		EQU		1t
IMAGE_DEBUG_TYPE_CODEVIEW		EQU		2t
IMAGE_DEBUG_TYPE_FPO		EQU		3t
_IMAGE_DEBUG_INFO		STRUCT 1t
NumberOfSymbols		DWORD		?
LvaToFirstSymbol		DWORD		?
NumberOfLinenumbers		DWORD		?
LvaToFirstLinenumber		DWORD		?
RvaToFirstByteOfCode		DWORD		?
RvaToLastByteOfCode		DWORD		?
RvaToFirstByteOfData		DWORD		?
RvaToLastByteOfData		DWORD		?
_IMAGE_DEBUG_INFO		ENDS

IMAGE_DEBUG_INFO		TYPEDEF		_IMAGE_DEBUG_INFO

PIMAGE_DEBUG_INFO		TYPEDEF		PTR _IMAGE_DEBUG_INFO

FRAME_FPO		EQU		0t
FRAME_TRAP		EQU		1t
FRAME_TSS		EQU		2t
_FPO_DATA		STRUCT 1t
ulOffStart		DWORD		?
cbProcSize		DWORD		?
cdwLocals		DWORD		?
cdwParams		WORD		?
rec@_FPO_DATA_0		RECORD	cbFrame@_FPO_DATA:2,
			reserved@_FPO_DATA:1,
			fUseBP@_FPO_DATA:1,
			fHasSEH@_FPO_DATA:1,
			cbRegs@_FPO_DATA:3,
			cbProlog@_FPO_DATA:8
@bit_0		rec@_FPO_DATA_0	<>
_FPO_DATA		ENDS

FPO_DATA		TYPEDEF		_FPO_DATA

PFPO_DATA		TYPEDEF		PTR _FPO_DATA

SIZEOF_RFPO_DATA		EQU		16t
; End of file .\winnt.h
WPARAM		TYPEDEF		UINT

LPARAM		TYPEDEF		LONG

LRESULT		TYPEDEF		LONG

HWND		TYPEDEF		HANDLE

HHOOK		TYPEDEF		HANDLE

ATOM		TYPEDEF		WORD

SPHANDLE		TYPEDEF		PTR HANDLE

LPHANDLE		TYPEDEF		PTR HANDLE

HGLOBAL		TYPEDEF		HANDLE

HLOCAL		TYPEDEF		HANDLE

GLOBALHANDLE		TYPEDEF		HANDLE

LOCALHANDLE		TYPEDEF		HANDLE

FARPROC		TYPEDEF		PTR 

NEARPROC		TYPEDEF		PTR 

_PROC		TYPEDEF		PTR 

HGDIOBJ		TYPEDEF		HANDLE

HACCEL		TYPEDEF		HANDLE

HBITMAP		TYPEDEF		HANDLE

HBRUSH		TYPEDEF		HANDLE

HDC		TYPEDEF		HANDLE

HDESK		TYPEDEF		HANDLE

HENHMETAFILE		TYPEDEF		HANDLE

HFONT		TYPEDEF		HANDLE

HICON		TYPEDEF		HANDLE

HMENU		TYPEDEF		HANDLE

HMETAFILE		TYPEDEF		HANDLE

HINSTANCE		TYPEDEF		HANDLE

HMODULE		TYPEDEF		HINSTANCE

HPALETTE		TYPEDEF		HANDLE

HPEN		TYPEDEF		HANDLE

HRGN		TYPEDEF		HANDLE

HRSRC		TYPEDEF		HANDLE

HSTR		TYPEDEF		HANDLE

HWINSTA		TYPEDEF		HANDLE

HKL		TYPEDEF		HANDLE

HFILE		TYPEDEF		SDWORD

HCURSOR		TYPEDEF		HICON

COLORREF		TYPEDEF		DWORD

LPCOLORREF		TYPEDEF		PTR DWORD

HFILE_ERROR		TEXTEQU		<((HFILE)-1)>
tagRECT		STRUCT 4t
left		LONG		?
top		LONG		?
right		LONG		?
bottom		LONG		?
tagRECT		ENDS

RECT		TYPEDEF		tagRECT

PRECT		TYPEDEF		PTR tagRECT

NPRECT		TYPEDEF		PTR tagRECT

LPRECT		TYPEDEF		PTR tagRECT

_RECTL		STRUCT 4t
left		LONG		?
top		LONG		?
right		LONG		?
bottom		LONG		?
_RECTL		ENDS

RECTL		TYPEDEF		_RECTL

PRECTL		TYPEDEF		PTR _RECTL

tagPOINT		STRUCT 4t
x		LONG		?
y		LONG		?
tagPOINT		ENDS

POINT		TYPEDEF		tagPOINT

PPOINT		TYPEDEF		PTR tagPOINT

NPPOINT		TYPEDEF		PTR tagPOINT

LPPOINT		TYPEDEF		PTR tagPOINT

_POINTL		STRUCT 4t
x		LONG		?
y		LONG		?
_POINTL		ENDS

POINTL		TYPEDEF		_POINTL

PPOINTL		TYPEDEF		PTR _POINTL

tagSIZE		STRUCT 4t
_cx		LONG		?
cy		LONG		?
tagSIZE		ENDS

_SIZE		TYPEDEF		tagSIZE

PSIZE		TYPEDEF		PTR tagSIZE

LPSIZE		TYPEDEF		PTR tagSIZE

SIZEL		TYPEDEF		_SIZE

PSIZEL		TYPEDEF		PTR _SIZE

tagPOINTS		STRUCT 4t
x		_SHORT		?
y		_SHORT		?
tagPOINTS		ENDS

POINTS		TYPEDEF		tagPOINTS

PPOINTS		TYPEDEF		PTR tagPOINTS

LPPOINTS		TYPEDEF		PTR tagPOINTS

DM_UPDATE		EQU		1t
DM_COPY		EQU		2t
DM_PROMPT		EQU		4t
DM_MODIFY		EQU		8t
DM_IN_BUFFER		EQU		000000008h
DM_IN_PROMPT		EQU		000000004h
DM_OUT_BUFFER		EQU		000000002h
DM_OUT_DEFAULT		EQU		000000001h
DC_FIELDS		EQU		1t
DC_PAPERS		EQU		2t
DC_PAPERSIZE		EQU		3t
DC_MINEXTENT		EQU		4t
DC_MAXEXTENT		EQU		5t
DC_BINS		EQU		6t
DC_DUPLEX		EQU		7t
DC_SIZE		EQU		8t
DC_EXTRA		EQU		9t
DC_VERSION		EQU		10t
DC_DRIVER		EQU		11t
DC_BINNAMES		EQU		12t
DC_ENUMRESOLUTIONS		EQU		13t
DC_FILEDEPENDENCIES		EQU		14t
DC_TRUETYPE		EQU		15t
DC_PAPERNAMES		EQU		16t
DC_ORIENTATION		EQU		17t
DC_COPIES		EQU		18t
; End of file windef.h
_PASCAL		TEXTEQU		<_stdcall>
WINAPI		TEXTEQU		<STDCALL>
APIENTRY		TEXTEQU		<STDCALL>
; Begin of file excpt.h
ExceptionContinueExecution		EQU		0t
ExceptionContinueSearch		EQU		1t
ExceptionNestedException		EQU		2t
ExceptionCollidedUnwind		EQU		3t

EXCEPTION_DISPOSITION		TYPEDEF		SWORD

EXCEPTION_EXECUTE_HANDLER		EQU		1t
EXCEPTION_CONTINUE_SEARCH		EQU		0t
EXCEPTION_CONTINUE_EXECUTION		EQU		-1t
_INC_EXCPT		TEXTEQU		<>
; End of file excpt.h
; Begin of file winbase.h
_WINBASE_		TEXTEQU		<>
INVALID_HANDLE_VALUE		TEXTEQU		<(HANDLE)-1>
FILE_BEGIN		EQU		0t
FILE_CURRENT		EQU		1t
FILE_END		EQU		2t
WAIT_OBJECT_0		TEXTEQU		<((STATUS_WAIT_0 ) + 0 )>
WAIT_ABANDONED		TEXTEQU		<((STATUS_ABANDONED_WAIT_0 ) + 0 )>
WAIT_ABANDONED_0		TEXTEQU		<((STATUS_ABANDONED_WAIT_0 ) + 0 )>
WAIT_TIMEOUT		TEXTEQU		<STATUS_TIMEOUT>
WAIT_IO_COMPLETION		TEXTEQU		<STATUS_USER_APC>
STILL_ACTIVE		TEXTEQU		<STATUS_PENDING>
EXCEPTION_ACCESS_VIOLATION		TEXTEQU		<STATUS_ACCESS_VIOLATION>
EXCEPTION_DATATYPE_MISALIGNMENT		TEXTEQU		<STATUS_DATATYPE_MISALIGNMENT>
EXCEPTION_BREAKPOINT		TEXTEQU		<STATUS_BREAKPOINT>
EXCEPTION_SINGLE_STEP		TEXTEQU		<STATUS_SINGLE_STEP>
EXCEPTION_ARRAY_BOUNDS_EXCEEDED		TEXTEQU		<STATUS_ARRAY_BOUNDS_EXCEEDED>
EXCEPTION_FLT_DENORMAL_OPERAND		TEXTEQU		<STATUS_FLOAT_DENORMAL_OPERAND>
EXCEPTION_FLT_DIVIDE_BY_ZERO		TEXTEQU		<STATUS_FLOAT_DIVIDE_BY_ZERO>
EXCEPTION_FLT_INEXACT_RESULT		TEXTEQU		<STATUS_FLOAT_INEXACT_RESULT>
EXCEPTION_FLT_INVALID_OPERATION		TEXTEQU		<STATUS_FLOAT_INVALID_OPERATION>
EXCEPTION_FLT_OVERFLOW		TEXTEQU		<STATUS_FLOAT_OVERFLOW>
EXCEPTION_FLT_STACK_CHECK		TEXTEQU		<STATUS_FLOAT_STACK_CHECK>
EXCEPTION_FLT_UNDERFLOW		TEXTEQU		<STATUS_FLOAT_UNDERFLOW>
EXCEPTION_INT_DIVIDE_BY_ZERO		TEXTEQU		<STATUS_INTEGER_DIVIDE_BY_ZERO>
EXCEPTION_INT_OVERFLOW		TEXTEQU		<STATUS_INTEGER_OVERFLOW>
EXCEPTION_PRIV_INSTRUCTION		TEXTEQU		<STATUS_PRIVILEGED_INSTRUCTION>
EXCEPTION_IN_PAGE_ERROR		TEXTEQU		<STATUS_IN_PAGE_ERROR>
CONTROL_C_EXIT		TEXTEQU		<STATUS_CONTROL_C_EXIT>
;MoveMemory		TEXTEQU		<RtlMoveMemory>
;CopyMemory		TEXTEQU		<RtlCopyMemory>
FillMemory		TEXTEQU		<RtlFillMemory>
ZeroMemory		TEXTEQU		<RtlZeroMemory>
FILE_FLAG_WRITE_THROUGH		EQU		080000000h
FILE_FLAG_OVERLAPPED		EQU		040000000h
FILE_FLAG_NO_BUFFERING		EQU		020000000h
FILE_FLAG_RANDOM_ACCESS		EQU		010000000h
FILE_FLAG_SEQUENTIAL_SCAN		EQU		008000000h
FILE_FLAG_DELETE_ON_CLOSE		EQU		004000000h
FILE_FLAG_BACKUP_SEMANTICS		EQU		002000000h
FILE_FLAG_POSIX_SEMANTICS		EQU		001000000h
CREATE_NEW		EQU		1t
CREATE_ALWAYS		EQU		2t
OPEN_EXISTING		EQU		3t
OPEN_ALWAYS		EQU		4t
TRUNCATE_EXISTING		EQU		5t
PIPE_ACCESS_INBOUND		EQU		000000001h
PIPE_ACCESS_OUTBOUND		EQU		000000002h
PIPE_ACCESS_DUPLEX		EQU		000000003h
PIPE_CLIENT_END		EQU		000000000h
PIPE_SERVER_END		EQU		000000001h
PIPE_WAIT		EQU		000000000h
PIPE_NOWAIT		EQU		000000001h
PIPE_READMODE_BYTE		EQU		000000000h
PIPE_READMODE_MESSAGE		EQU		000000002h
PIPE_TYPE_BYTE		EQU		000000000h
PIPE_TYPE_MESSAGE		EQU		000000004h
PIPE_UNLIMITED_INSTANCES		EQU		255t
SECURITY_ANONYMOUS		TEXTEQU		<( SecurityAnonymous !<!< 16 )>
SECURITY_IDENTIFICATION		TEXTEQU		<( SecurityIdentification !<!< 16 )>
SECURITY_IMPERSONATION		TEXTEQU		<( SecurityImpersonation !<!< 16 )>
SECURITY_DELEGATION		TEXTEQU		<( SecurityDelegation !<!< 16 )>
SECURITY_CONTEXT_TRACKING		EQU		000040000h
SECURITY_EFFECTIVE_ONLY		EQU		000080000h
SECURITY_SQOS_PRESENT		EQU		000100000h
SECURITY_VALID_SQOS_FLAGS		EQU		0001f0000h
_OVERLAPPED		STRUCT 4t
Internal		DWORD		?
InternalHigh		DWORD		?
_Offset		DWORD		?
OffsetHigh		DWORD		?
hEvent		HANDLE		?
_OVERLAPPED		ENDS

OVERLAPPED		TYPEDEF		_OVERLAPPED

LPOVERLAPPED		TYPEDEF		PTR _OVERLAPPED

_SECURITY_ATTRIBUTES		STRUCT 4t
nLength		DWORD		?
lpSecurityDescriptor		LPVOID		?
bInheritHandle		BOOL		?
_SECURITY_ATTRIBUTES		ENDS

SECURITY_ATTRIBUTES		TYPEDEF		_SECURITY_ATTRIBUTES

PSECURITY_ATTRIBUTES		TYPEDEF		PTR _SECURITY_ATTRIBUTES

LPSECURITY_ATTRIBUTES		TYPEDEF		PTR _SECURITY_ATTRIBUTES

_PROCESS_INFORMATION		STRUCT 4t
hProcess		HANDLE		?
hThread		HANDLE		?
dwProcessId		DWORD		?
dwThreadId		DWORD		?
_PROCESS_INFORMATION		ENDS

PROCESS_INFORMATION		TYPEDEF		_PROCESS_INFORMATION

PPROCESS_INFORMATION		TYPEDEF		PTR _PROCESS_INFORMATION

LPPROCESS_INFORMATION		TYPEDEF		PTR _PROCESS_INFORMATION

_FILETIME		STRUCT 4t
dwLowDateTime		DWORD		?
dwHighDateTime		DWORD		?
_FILETIME		ENDS

FILETIME		TYPEDEF		_FILETIME

PFILETIME		TYPEDEF		PTR _FILETIME

LPFILETIME		TYPEDEF		PTR _FILETIME

_SYSTEMTIME		STRUCT 4t
wYear		WORD		?
wMonth		WORD		?
wDayOfWeek		WORD		?
wDay		WORD		?
wHour		WORD		?
wMinute		WORD		?
wSecond		WORD		?
wMilliseconds		WORD		?
_SYSTEMTIME		ENDS

SYSTEMTIME		TYPEDEF		_SYSTEMTIME

PSYSTEMTIME		TYPEDEF		PTR _SYSTEMTIME

LPSYSTEMTIME		TYPEDEF		PTR _SYSTEMTIME

@proto_99		TYPEDEF		PROTO STDCALL :LPVOID
PTHREAD_START_ROUTINE		TYPEDEF		PTR @proto_99

LPTHREAD_START_ROUTINE		TYPEDEF		PTHREAD_START_ROUTINE

CRITICAL_SECTION		TYPEDEF		RTL_CRITICAL_SECTION

PCRITICAL_SECTION		TYPEDEF		PRTL_CRITICAL_SECTION

LPCRITICAL_SECTION		TYPEDEF		PRTL_CRITICAL_SECTION

CRITICAL_SECTION_DEBUG		TYPEDEF		RTL_CRITICAL_SECTION_DEBUG

PCRITICAL_SECTION_DEBUG		TYPEDEF		PRTL_CRITICAL_SECTION_DEBUG

LPCRITICAL_SECTION_DEBUG		TYPEDEF		PRTL_CRITICAL_SECTION_DEBUG

LPLDT_ENTRY		TYPEDEF		PLDT_ENTRY

MUTEX_MODIFY_STATE		EQU		000000001h
MUTEX_ALL_ACCESS		EQU		0001f0001h
SP_SERIALCOMM		TEXTEQU		<((DWORD)0x00000001)>
PST_UNSPECIFIED		TEXTEQU		<((DWORD)0x00000000)>
PST_RS232		TEXTEQU		<((DWORD)0x00000001)>
PST_PARALLELPORT		TEXTEQU		<((DWORD)0x00000002)>
PST_RS422		TEXTEQU		<((DWORD)0x00000003)>
PST_RS423		TEXTEQU		<((DWORD)0x00000004)>
PST_RS449		TEXTEQU		<((DWORD)0x00000005)>
PST_FAX		TEXTEQU		<((DWORD)0x00000021)>
PST_SCANNER		TEXTEQU		<((DWORD)0x00000022)>
PST_NETWORK_BRIDGE		TEXTEQU		<((DWORD)0x00000100)>
PST_LAT		TEXTEQU		<((DWORD)0x00000101)>
PST_TCPIP_TELNET		TEXTEQU		<((DWORD)0x00000102)>
PST_X25		TEXTEQU		<((DWORD)0x00000103)>
PCF_DTRDSR		TEXTEQU		<((DWORD)0x0001)>
PCF_RTSCTS		TEXTEQU		<((DWORD)0x0002)>
PCF_RLSD		TEXTEQU		<((DWORD)0x0004)>
PCF_PARITY_CHECK		TEXTEQU		<((DWORD)0x0008)>
PCF_XONXOFF		TEXTEQU		<((DWORD)0x0010)>
PCF_SETXCHAR		TEXTEQU		<((DWORD)0x0020)>
PCF_TOTALTIMEOUTS		TEXTEQU		<((DWORD)0x0040)>
PCF_INTTIMEOUTS		TEXTEQU		<((DWORD)0x0080)>
PCF_SPECIALCHARS		TEXTEQU		<((DWORD)0x0100)>
PCF_16BITMODE		TEXTEQU		<((DWORD)0x0200)>
SP_PARITY		TEXTEQU		<((DWORD)0x0001)>
SP_BAUD		TEXTEQU		<((DWORD)0x0002)>
SP_DATABITS		TEXTEQU		<((DWORD)0x0004)>
SP_STOPBITS		TEXTEQU		<((DWORD)0x0008)>
SP_HANDSHAKING		TEXTEQU		<((DWORD)0x0010)>
SP_PARITY_CHECK		TEXTEQU		<((DWORD)0x0020)>
SP_RLSD		TEXTEQU		<((DWORD)0x0040)>
BAUD_075		TEXTEQU		<((DWORD)0x00000001)>
BAUD_110		TEXTEQU		<((DWORD)0x00000002)>
BAUD_134_5		TEXTEQU		<((DWORD)0x00000004)>
BAUD_150		TEXTEQU		<((DWORD)0x00000008)>
BAUD_300		TEXTEQU		<((DWORD)0x00000010)>
BAUD_600		TEXTEQU		<((DWORD)0x00000020)>
BAUD_1200		TEXTEQU		<((DWORD)0x00000040)>
BAUD_1800		TEXTEQU		<((DWORD)0x00000080)>
BAUD_2400		TEXTEQU		<((DWORD)0x00000100)>
BAUD_4800		TEXTEQU		<((DWORD)0x00000200)>
BAUD_7200		TEXTEQU		<((DWORD)0x00000400)>
BAUD_9600		TEXTEQU		<((DWORD)0x00000800)>
BAUD_14400		TEXTEQU		<((DWORD)0x00001000)>
BAUD_19200		TEXTEQU		<((DWORD)0x00002000)>
BAUD_38400		TEXTEQU		<((DWORD)0x00004000)>
BAUD_56K		TEXTEQU		<((DWORD)0x00008000)>
BAUD_128K		TEXTEQU		<((DWORD)0x00010000)>
BAUD_USER		TEXTEQU		<((DWORD)0x10000000)>
DATABITS_5		TEXTEQU		<((WORD)0x0001)>
DATABITS_6		TEXTEQU		<((WORD)0x0002)>
DATABITS_7		TEXTEQU		<((WORD)0x0004)>
DATABITS_8		TEXTEQU		<((WORD)0x0008)>
DATABITS_16		TEXTEQU		<((WORD)0x0010)>
DATABITS_16X		TEXTEQU		<((WORD)0x0020)>
STOPBITS_10		TEXTEQU		<((WORD)0x0001)>
STOPBITS_15		TEXTEQU		<((WORD)0x0002)>
STOPBITS_20		TEXTEQU		<((WORD)0x0004)>
PARITY_NONE		TEXTEQU		<((WORD)0x0100)>
PARITY_ODD		TEXTEQU		<((WORD)0x0200)>
PARITY_EVEN		TEXTEQU		<((WORD)0x0400)>
PARITY_MARK		TEXTEQU		<((WORD)0x0800)>
PARITY_SPACE		TEXTEQU		<((WORD)0x1000)>
_COMMPROP		STRUCT 4t
wPacketLength		WORD		?
wPacketVersion		WORD		?
dwServiceMask		DWORD		?
dwReserved1		DWORD		?
dwMaxTxQueue		DWORD		?
dwMaxRxQueue		DWORD		?
dwMaxBaud		DWORD		?
dwProvSubType		DWORD		?
dwProvCapabilities		DWORD		?
dwSettableParams		DWORD		?
dwSettableBaud		DWORD		?
wSettableData		WORD		?
wSettableStopParity		WORD		?
dwCurrentTxQueue		DWORD		?
dwCurrentRxQueue		DWORD		?
dwProvSpec1		DWORD		?
dwProvSpec2		DWORD		?
wcProvChar		WCHAR		1t DUP (?)
_COMMPROP		ENDS

COMMPROP		TYPEDEF		_COMMPROP

LPCOMMPROP		TYPEDEF		PTR _COMMPROP

_COMSTAT		STRUCT 4t
rec@_COMSTAT_0		RECORD	@7@_COMSTAT:8,
			fReserved@_COMSTAT:17,
			fTxim@_COMSTAT:1,
			fEof@_COMSTAT:1,
			fXoffSent@_COMSTAT:1,
			fXoffHold@_COMSTAT:1,
			fRlsdHold@_COMSTAT:1,
			fDsrHold@_COMSTAT:1,
			fCtsHold@_COMSTAT:1
@bit_0		rec@_COMSTAT_0	<>
cbInQue		DWORD		?
cbOutQue		DWORD		?
_COMSTAT		ENDS

COMSTAT		TYPEDEF		_COMSTAT

LPCOMSTAT		TYPEDEF		PTR _COMSTAT

DTR_CONTROL_DISABLE		EQU		000000000h
DTR_CONTROL_ENABLE		EQU		000000001h
DTR_CONTROL_HANDSHAKE		EQU		000000002h
RTS_CONTROL_DISABLE		EQU		000000000h
RTS_CONTROL_ENABLE		EQU		000000001h
RTS_CONTROL_HANDSHAKE		EQU		000000002h
RTS_CONTROL_TOGGLE		EQU		000000003h
_DCB		STRUCT 4t
DCBlength		DWORD		?
BaudRate		DWORD		?
rec@_DCB_0		RECORD	@15@_DCB:16,
			fDummy2@_DCB:1,
			fAbortOnError@_DCB:1,
			fRtsControl@_DCB:2,
			fNull@_DCB:1,
			fErrorChar@_DCB:1,
			fInX@_DCB:1,
			fOutX@_DCB:1,
			fTXContinueOnXoff@_DCB:1,
			fDsrSensitivity@_DCB:1,
			fDtrControl@_DCB:2,
			fOutxDsrFlow@_DCB:1,
			fOutxCtsFlow@_DCB:1,
			fParity@_DCB:1,
			fBinary@_DCB:1
@bit_0		rec@_DCB_0	<>
wReserved		WORD		?
XonLim		WORD		?
XoffLim		WORD		?
ByteSize		BYTE		?
Parity		BYTE		?
StopBits		BYTE		?
XonChar		SBYTE		?
XoffChar		SBYTE		?
ErrorChar		SBYTE		?
EofChar		SBYTE		?
EvtChar		SBYTE		?
_DCB		ENDS

DCB		TYPEDEF		_DCB

LPDCB		TYPEDEF		PTR _DCB

_COMMTIMEOUTS		STRUCT 4t
ReadIntervalTimeout		DWORD		?
ReadTotalTimeoutMultiplier		DWORD		?
ReadTotalTimeoutConstant		DWORD		?
WriteTotalTimeoutMultiplier		DWORD		?
WriteTotalTimeoutConstant		DWORD		?
_COMMTIMEOUTS		ENDS

COMMTIMEOUTS		TYPEDEF		_COMMTIMEOUTS

LPCOMMTIMEOUTS		TYPEDEF		PTR _COMMTIMEOUTS

_SYSTEM_INFO		STRUCT 4t
dwOemId		DWORD		?
dwPageSize		DWORD		?
lpMinimumApplicationAddress		LPVOID		?
lpMaximumApplicationAddress		LPVOID		?
dwActiveProcessorMask		DWORD		?
dwNumberOfProcessors		DWORD		?
dwProcessorType		DWORD		?
dwReserved1		DWORD		?
dwReserved2		DWORD		?
_SYSTEM_INFO		ENDS

SYSTEM_INFO		TYPEDEF		_SYSTEM_INFO

LPSYSTEM_INFO		TYPEDEF		PTR _SYSTEM_INFO

GMEM_FIXED		EQU		000000000h
GMEM_MOVEABLE		EQU		000000002h
GMEM_NOCOMPACT		EQU		000000010h
GMEM_NODISCARD		EQU		000000020h
GMEM_ZEROINIT		EQU		000000040h
GMEM_MODIFY		EQU		000000080h
GMEM_DISCARDABLE		EQU		000000100h
GMEM_NOT_BANKED		EQU		000001000h
GMEM_SHARE		EQU		000002000h
GMEM_DDESHARE		EQU		000002000h
GMEM_NOTIFY		EQU		000004000h
GMEM_LOWER		EQU		000001000h
GMEM_VALID_FLAGS		EQU		000007f72h
GMEM_INVALID_HANDLE		EQU		000008000h
GHND		EQU		000000042h
GPTR		EQU		000000040h
GMEM_DISCARDED		EQU		000004000h
GMEM_LOCKCOUNT		EQU		0000000ffh
_MEMORYSTATUS		STRUCT 4t
dwLength		DWORD		?
dwMemoryLoad		DWORD		?
dwTotalPhys		DWORD		?
dwAvailPhys		DWORD		?
dwTotalPageFile		DWORD		?
dwAvailPageFile		DWORD		?
dwTotalVirtual		DWORD		?
dwAvailVirtual		DWORD		?
_MEMORYSTATUS		ENDS

MEMORYSTATUS		TYPEDEF		_MEMORYSTATUS

LPMEMORYSTATUS		TYPEDEF		PTR _MEMORYSTATUS

LMEM_FIXED		EQU		000000000h
LMEM_MOVEABLE		EQU		000000002h
LMEM_NOCOMPACT		EQU		000000010h
LMEM_NODISCARD		EQU		000000020h
LMEM_ZEROINIT		EQU		000000040h
LMEM_MODIFY		EQU		000000080h
LMEM_DISCARDABLE		EQU		000000f00h
LMEM_VALID_FLAGS		EQU		000000f72h
LMEM_INVALID_HANDLE		EQU		000008000h
LHND		EQU		000000042h
LPTR		EQU		000000040h
NONZEROLHND		EQU		000000002h
NONZEROLPTR		EQU		000000000h
LMEM_DISCARDED		EQU		000004000h
LMEM_LOCKCOUNT		EQU		0000000ffh
DEBUG_PROCESS		EQU		000000001h
DEBUG_ONLY_THIS_PROCESS		EQU		000000002h
CREATE_SUSPENDED		EQU		000000004h
DETACHED_PROCESS		EQU		000000008h
CREATE_NEW_CONSOLE		EQU		000000010h
NORMAL_PRIORITY_CLASS		EQU		000000020h
IDLE_PRIORITY_CLASS		EQU		000000040h
HIGH_PRIORITY_CLASS		EQU		000000080h
REALTIME_PRIORITY_CLASS		EQU		000000100h
CREATE_NEW_PROCESS_GROUP		EQU		000000200h
CREATE_NO_WINDOW		EQU		008000000h
PROFILE_USER		EQU		010000000h
PROFILE_KERNEL		EQU		020000000h
PROFILE_SERVER		EQU		040000000h
THREAD_PRIORITY_LOWEST		EQU		0fffffffeh
THREAD_PRIORITY_BELOW_NORMAL		EQU		0ffffffffh
THREAD_PRIORITY_NORMAL		EQU		0t
THREAD_PRIORITY_HIGHEST		EQU		000000002h
THREAD_PRIORITY_ABOVE_NORMAL		EQU		000000001h
THREAD_PRIORITY_ERROR_RETURN		EQU		07fffffffh
THREAD_PRIORITY_TIME_CRITICAL		EQU		00000000fh
THREAD_PRIORITY_IDLE		EQU		0fffffff1h
EXCEPTION_DEBUG_EVENT		EQU		1t
CREATE_THREAD_DEBUG_EVENT		EQU		2t
CREATE_PROCESS_DEBUG_EVENT		EQU		3t
EXIT_THREAD_DEBUG_EVENT		EQU		4t
EXIT_PROCESS_DEBUG_EVENT		EQU		5t
LOAD_DLL_DEBUG_EVENT		EQU		6t
UNLOAD_DLL_DEBUG_EVENT		EQU		7t
OUTPUT_DEBUG_STRING_EVENT		EQU		8t
RIP_EVENT		EQU		9t
_EXCEPTION_DEBUG_INFO		STRUCT 4t
ExceptionRecord		EXCEPTION_RECORD		<>
dwFirstChance		DWORD		?
_EXCEPTION_DEBUG_INFO		ENDS

EXCEPTION_DEBUG_INFO		TYPEDEF		_EXCEPTION_DEBUG_INFO

LPEXCEPTION_DEBUG_INFO		TYPEDEF		PTR _EXCEPTION_DEBUG_INFO

_CREATE_THREAD_DEBUG_INFO		STRUCT 4t
hThread		HANDLE		?
lpThreadLocalBase		LPVOID		?
lpStartAddress		LPTHREAD_START_ROUTINE		?
_CREATE_THREAD_DEBUG_INFO		ENDS

CREATE_THREAD_DEBUG_INFO		TYPEDEF		_CREATE_THREAD_DEBUG_INFO

LPCREATE_THREAD_DEBUG_INFO		TYPEDEF		PTR _CREATE_THREAD_DEBUG_INFO

_CREATE_PROCESS_DEBUG_INFO		STRUCT 4t
hFile		HANDLE		?
hProcess		HANDLE		?
hThread		HANDLE		?
lpBaseOfImage		LPVOID		?
dwDebugInfoFileOffset		DWORD		?
nDebugInfoSize		DWORD		?
lpThreadLocalBase		LPVOID		?
lpStartAddress		LPTHREAD_START_ROUTINE		?
lpImageName		LPVOID		?
fUnicode		WORD		?
_CREATE_PROCESS_DEBUG_INFO		ENDS

CREATE_PROCESS_DEBUG_INFO		TYPEDEF		_CREATE_PROCESS_DEBUG_INFO

LPCREATE_PROCESS_DEBUG_INFO		TYPEDEF		PTR _CREATE_PROCESS_DEBUG_INFO

_EXIT_THREAD_DEBUG_INFO		STRUCT 4t
dwExitCode		DWORD		?
_EXIT_THREAD_DEBUG_INFO		ENDS

EXIT_THREAD_DEBUG_INFO		TYPEDEF		_EXIT_THREAD_DEBUG_INFO

LPEXIT_THREAD_DEBUG_INFO		TYPEDEF		PTR _EXIT_THREAD_DEBUG_INFO

_EXIT_PROCESS_DEBUG_INFO		STRUCT 4t
dwExitCode		DWORD		?
_EXIT_PROCESS_DEBUG_INFO		ENDS

EXIT_PROCESS_DEBUG_INFO		TYPEDEF		_EXIT_PROCESS_DEBUG_INFO

LPEXIT_PROCESS_DEBUG_INFO		TYPEDEF		PTR _EXIT_PROCESS_DEBUG_INFO

_LOAD_DLL_DEBUG_INFO		STRUCT 4t
hFile		HANDLE		?
lpBaseOfDll		LPVOID		?
dwDebugInfoFileOffset		DWORD		?
nDebugInfoSize		DWORD		?
lpImageName		LPVOID		?
fUnicode		WORD		?
_LOAD_DLL_DEBUG_INFO		ENDS

LOAD_DLL_DEBUG_INFO		TYPEDEF		_LOAD_DLL_DEBUG_INFO

LPLOAD_DLL_DEBUG_INFO		TYPEDEF		PTR _LOAD_DLL_DEBUG_INFO

_UNLOAD_DLL_DEBUG_INFO		STRUCT 4t
lpBaseOfDll		LPVOID		?
_UNLOAD_DLL_DEBUG_INFO		ENDS

UNLOAD_DLL_DEBUG_INFO		TYPEDEF		_UNLOAD_DLL_DEBUG_INFO

LPUNLOAD_DLL_DEBUG_INFO		TYPEDEF		PTR _UNLOAD_DLL_DEBUG_INFO

_OUTPUT_DEBUG_STRING_INFO		STRUCT 4t
lpDebugStringData		LPSTR		?
fUnicode		WORD		?
nDebugStringLength		WORD		?
_OUTPUT_DEBUG_STRING_INFO		ENDS

OUTPUT_DEBUG_STRING_INFO		TYPEDEF		_OUTPUT_DEBUG_STRING_INFO

LPOUTPUT_DEBUG_STRING_INFO		TYPEDEF		PTR _OUTPUT_DEBUG_STRING_INFO

_RIP_INFO		STRUCT 4t
dwError		DWORD		?
dwType		DWORD		?
_RIP_INFO		ENDS

RIP_INFO		TYPEDEF		_RIP_INFO

LPRIP_INFO		TYPEDEF		PTR _RIP_INFO

@tag_18		UNION
Exception		EXCEPTION_DEBUG_INFO		<>
CreateThread		CREATE_THREAD_DEBUG_INFO		<>
CreateProcessInfo		CREATE_PROCESS_DEBUG_INFO		<>
ExitThread		EXIT_THREAD_DEBUG_INFO		<>
ExitProcess		EXIT_THREAD_DEBUG_INFO		<>
LoadDll		LOAD_DLL_DEBUG_INFO		<>
UnloadDll		UNLOAD_DLL_DEBUG_INFO		<>
DebugString		OUTPUT_DEBUG_STRING_INFO		<>
RipInfo		RIP_INFO		<>
@tag_18		ENDS

_DEBUG_EVENT		STRUCT 4t
dwDebugEventCode		DWORD		?
dwProcessId		DWORD		?
dwThreadId		DWORD		?
u		@tag_18		<>
_DEBUG_EVENT		ENDS

DEBUG_EVENT		TYPEDEF		_DEBUG_EVENT

LPDEBUG_EVENT		TYPEDEF		PTR _DEBUG_EVENT

LPCONTEXT		TYPEDEF		PCONTEXT

LPEXCEPTION_RECORD		TYPEDEF		PEXCEPTION_RECORD

LPEXCEPTION_POINTERS		TYPEDEF		PEXCEPTION_POINTERS

DRIVE_REMOVABLE		EQU		2t
DRIVE_FIXED		EQU		3t
DRIVE_REMOTE		EQU		4t
DRIVE_CDROM		EQU		5t
DRIVE_RAMDISK		EQU		6t
FILE_TYPE_UNKNOWN		EQU		000000000h
FILE_TYPE_DISK		EQU		000000001h
FILE_TYPE_CHAR		EQU		000000002h
FILE_TYPE_PIPE		EQU		000000003h
FILE_TYPE_REMOTE		EQU		000008000h
STD_INPUT_HANDLE		TEXTEQU		<-10>
STD_OUTPUT_HANDLE		TEXTEQU		<-11>
STD_ERROR_HANDLE		TEXTEQU		<-12>
NOPARITY		EQU		0t
ODDPARITY		EQU		1t
EVENPARITY		EQU		2t
MARKPARITY		EQU		3t
SPACEPARITY		EQU		4t
ONESTOPBIT		EQU		0t
ONE5STOPBITS		EQU		1t
TWOSTOPBITS		EQU		2t
IGNORE		EQU		0t
INFINITE		EQU		0ffffffffh
CBR_110		EQU		110t
CBR_300		EQU		300t
CBR_600		EQU		600t
CBR_1200		EQU		1200t
CBR_2400		EQU		2400t
CBR_4800		EQU		4800t
CBR_9600		EQU		9600t
CBR_14400		EQU		14400t
CBR_19200		EQU		19200t
CBR_38400		EQU		38400t
CBR_56000		EQU		56000t
CBR_128000		EQU		128000t
CBR_256000		EQU		256000t
CE_RXOVER		EQU		000000001h
CE_OVERRUN		EQU		000000002h
CE_RXPARITY		EQU		000000004h
CE_FRAME		EQU		000000008h
CE_BREAK		EQU		000000010h
CE_TXFULL		EQU		000000100h
CE_PTO		EQU		000000200h
CE_IOE		EQU		000000400h
CE_DNS		EQU		000000800h
CE_OOP		EQU		000001000h
CE_MODE		EQU		000008000h
IE_BADID		EQU		0ffffffffh
IE_OPEN		EQU		0fffffffeh
IE_NOPEN		EQU		0fffffffdh
IE_MEMORY		EQU		0fffffffch
IE_DEFAULT		EQU		0fffffffbh
IE_HARDWARE		EQU		0fffffff6h
IE_BYTESIZE		EQU		0fffffff5h
IE_BAUDRATE		EQU		0fffffff4h
EV_RXCHAR		EQU		000000001h
EV_RXFLAG		EQU		000000002h
EV_TXEMPTY		EQU		000000004h
EV_CTS		EQU		000000008h
EV_DSR		EQU		000000010h
EV_RLSD		EQU		000000020h
EV_BREAK		EQU		000000040h
EV_ERR		EQU		000000080h
EV_RING		EQU		000000100h
EV_PERR		EQU		000000200h
EV_RX80FULL		EQU		000000400h
EV_EVENT1		EQU		000000800h
EV_EVENT2		EQU		000001000h
SETXOFF		EQU		1t
SETXON		EQU		2t
SETRTS		EQU		3t
CLRRTS		EQU		4t
SETDTR		EQU		5t
CLRDTR		EQU		6t
RESETDEV		EQU		7t
SETBREAK		EQU		8t
CLRBREAK		EQU		9t
PURGE_TXABORT		EQU		000000001h
PURGE_RXABORT		EQU		000000002h
PURGE_TXCLEAR		EQU		000000004h
PURGE_RXCLEAR		EQU		000000008h
LPTx		EQU		000000080h
MS_CTS_ON		TEXTEQU		<((DWORD)0x0010)>
MS_DSR_ON		TEXTEQU		<((DWORD)0x0020)>
MS_RING_ON		TEXTEQU		<((DWORD)0x0040)>
MS_RLSD_ON		TEXTEQU		<((DWORD)0x0080)>
S_QUEUEEMPTY		EQU		0t
S_THRESHOLD		EQU		1t
S_ALLTHRESHOLD		EQU		2t
S_NORMAL		EQU		0t
S_LEGATO		EQU		1t
S_STACCATO		EQU		2t
S_PERIOD512		EQU		0t
S_PERIOD1024		EQU		1t
S_PERIOD2048		EQU		2t
S_PERIODVOICE		EQU		3t
S_WHITE512		EQU		4t
S_WHITE1024		EQU		5t
S_WHITE2048		EQU		6t
S_WHITEVOICE		EQU		7t
S_SERDVNA		EQU		0ffffffffh
S_SEROFM		EQU		0fffffffeh
S_SERMACT		EQU		0fffffffdh
S_SERQFUL		EQU		0fffffffch
S_SERBDNT		EQU		0fffffffbh
S_SERDLN		EQU		0fffffffah
S_SERDCC		EQU		0fffffff9h
S_SERDTP		EQU		0fffffff8h
S_SERDVL		EQU		0fffffff7h
S_SERDMD		EQU		0fffffff6h
S_SERDSH		EQU		0fffffff5h
S_SERDPT		EQU		0fffffff4h
S_SERDFQ		EQU		0fffffff3h
S_SERDDR		EQU		0fffffff2h
S_SERDSR		EQU		0fffffff1h
S_SERDST		EQU		0fffffff0h
NMPWAIT_WAIT_FOREVER		EQU		0ffffffffh
NMPWAIT_NOWAIT		EQU		000000001h
NMPWAIT_USE_DEFAULT_WAIT		EQU		000000000h
FS_CASE_IS_PRESERVED		EQU		000000002h
FS_CASE_SENSITIVE		EQU		000000001h
FS_UNICODE_STORED_ON_DISK		EQU		000000004h
FS_PERSISTENT_ACLS		EQU		000000008h
FILE_MAP_COPY		EQU		000000001h
FILE_MAP_WRITE		EQU		000000002h
FILE_MAP_READ		EQU		000000004h
FILE_MAP_ALL_ACCESS		EQU		0000f001fh
OF_READ		EQU		000000000h
OF_WRITE		EQU		000000001h
OF_READWRITE		EQU		000000002h
OF_SHARE_COMPAT		EQU		000000000h
OF_SHARE_EXCLUSIVE		EQU		000000010h
OF_SHARE_DENY_WRITE		EQU		000000020h
OF_SHARE_DENY_READ		EQU		000000030h
OF_SHARE_DENY_NONE		EQU		000000040h
OF_PARSE		EQU		000000100h
OF_DELETE		EQU		000000200h
OF_VERIFY		EQU		000000400h
OF_CANCEL		EQU		000000800h
OF_CREATE		EQU		000001000h
OF_PROMPT		EQU		000002000h
OF_EXIST		EQU		000004000h
OF_REOPEN		EQU		000008000h
OFS_MAXPATHNAME		EQU		128t
_OFSTRUCT		STRUCT 4t
cBytes		BYTE		?
fFixedDisk		BYTE		?
nErrCode		WORD		?
Reserved1		WORD		?
Reserved2		WORD		?
szPathName		CHAR		128t DUP (?)
_OFSTRUCT		ENDS

OFSTRUCT		TYPEDEF		_OFSTRUCT

LPOFSTRUCT		TYPEDEF		PTR _OFSTRUCT

POFSTRUCT		TYPEDEF		PTR _OFSTRUCT

@proto_100		TYPEDEF		PROTO STDCALL :LPLONG
InterlockedIncrement		PROTO		@proto_100

@proto_101		TYPEDEF		PROTO STDCALL :LPLONG
InterlockedDecrement		PROTO		@proto_101

@proto_102		TYPEDEF		PROTO STDCALL :HGLOBAL
FreeResource		PROTO		@proto_102

@proto_103		TYPEDEF		PROTO STDCALL :HGLOBAL
LockResource		PROTO		@proto_103

MAXINTATOM		EQU		00000c000h
INVALID_ATOM		TEXTEQU		<((ATOM)0)>
@proto_104		TYPEDEF		PROTO STDCALL :HINSTANCE, :HINSTANCE, :LPSTR, :SDWORD
WinMain		PROTO		@proto_104

@proto_105		TYPEDEF		PROTO STDCALL :HINSTANCE
FreeLibrary		PROTO		@proto_105

@proto_106		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCSTR
GetProcAddress		PROTO		@proto_106

@proto_107		TYPEDEF		PROTO STDCALL 
GetVersion		PROTO		@proto_107

@proto_108		TYPEDEF		PROTO STDCALL :UINT, :DWORD
GlobalAlloc		PROTO		@proto_108

@proto_109		TYPEDEF		PROTO STDCALL :HGLOBAL, :DWORD, :UINT
GlobalReAlloc		PROTO		@proto_109

@proto_110		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalSize		PROTO		@proto_110

@proto_111		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalFlags		PROTO		@proto_111

@proto_112		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalLock		PROTO		@proto_112

@proto_113		TYPEDEF		PROTO STDCALL :LPVOID
GlobalHandle		PROTO		@proto_113

@proto_114		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalUnlock		PROTO		@proto_114

@proto_115		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalFree		PROTO		@proto_115

@proto_116		TYPEDEF		PROTO STDCALL :DWORD
GlobalCompact		PROTO		@proto_116

@proto_117		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalFix		PROTO		@proto_117

@proto_118		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalUnfix		PROTO		@proto_118

@proto_119		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalWire		PROTO		@proto_119

@proto_120		TYPEDEF		PROTO STDCALL :HGLOBAL
GlobalUnWire		PROTO		@proto_120

@proto_121		TYPEDEF		PROTO STDCALL :LPMEMORYSTATUS
GlobalMemoryStatus		PROTO		@proto_121

@proto_122		TYPEDEF		PROTO STDCALL :UINT, :UINT
LocalAlloc		PROTO		@proto_122

@proto_123		TYPEDEF		PROTO STDCALL :HLOCAL, :UINT, :UINT
LocalReAlloc		PROTO		@proto_123

@proto_124		TYPEDEF		PROTO STDCALL :HLOCAL
LocalLock		PROTO		@proto_124

@proto_125		TYPEDEF		PROTO STDCALL :LPVOID
LocalHandle		PROTO		@proto_125

@proto_126		TYPEDEF		PROTO STDCALL :HLOCAL
LocalUnlock		PROTO		@proto_126

@proto_127		TYPEDEF		PROTO STDCALL :HLOCAL
LocalSize		PROTO		@proto_127

@proto_128		TYPEDEF		PROTO STDCALL :HLOCAL
LocalFlags		PROTO		@proto_128

@proto_129		TYPEDEF		PROTO STDCALL :HLOCAL
LocalFree		PROTO		@proto_129

@proto_130		TYPEDEF		PROTO STDCALL :HLOCAL, :UINT
LocalShrink		PROTO		@proto_130

@proto_131		TYPEDEF		PROTO STDCALL :UINT
LocalCompact		PROTO		@proto_131

@proto_132		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :DWORD
FlushInstructionCache		PROTO		@proto_132

@proto_133		TYPEDEF		PROTO STDCALL :LPVOID, :DWORD, :DWORD, :DWORD
VirtualAlloc		PROTO		@proto_133

@proto_134		TYPEDEF		PROTO STDCALL :LPVOID, :DWORD, :DWORD
VirtualFree		PROTO		@proto_134

@proto_135		TYPEDEF		PROTO STDCALL :LPVOID, :DWORD, :DWORD, :PDWORD
VirtualProtect		PROTO		@proto_135

@proto_136		TYPEDEF		PROTO STDCALL :LPVOID, :PMEMORY_BASIC_INFORMATION, :DWORD
VirtualQuery		PROTO		@proto_136

@proto_137		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :DWORD, :DWORD, :PDWORD
VirtualProtectEx		PROTO		@proto_137

@proto_138		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :PMEMORY_BASIC_INFORMATION, :DWORD
VirtualQueryEx		PROTO		@proto_138

@proto_139		TYPEDEF		PROTO STDCALL :DWORD, :DWORD, :DWORD
HeapCreate		PROTO		@proto_139

@proto_140		TYPEDEF		PROTO STDCALL :HANDLE
HeapDestroy		PROTO		@proto_140

@proto_141		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD
HeapAlloc		PROTO		@proto_141

@proto_142		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :LPSTR, :DWORD
HeapReAlloc		PROTO		@proto_142

@proto_143		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :LPSTR
HeapFree		PROTO		@proto_143

@proto_144		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :LPSTR
HeapSize		PROTO		@proto_144

@proto_145		TYPEDEF		PROTO STDCALL 
GetProcessHeap		PROTO		@proto_145

@proto_146		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :DWORD
OpenProcess		PROTO		@proto_146

@proto_147		TYPEDEF		PROTO STDCALL 
GetCurrentProcess		PROTO		@proto_147

@proto_148		TYPEDEF		PROTO STDCALL 
GetCurrentProcessId		PROTO		@proto_148

@proto_149		TYPEDEF		PROTO STDCALL :UINT
ExitProcess		PROTO		@proto_149

@proto_150		TYPEDEF		PROTO STDCALL :HANDLE, :UINT
TerminateProcess		PROTO		@proto_150

@proto_151		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD
GetExitCodeProcess		PROTO		@proto_151

@proto_152		TYPEDEF		PROTO STDCALL :SDWORD
FatalExit		PROTO		@proto_152

@proto_153		TYPEDEF		PROTO STDCALL 
GetEnvironmentStrings		PROTO		@proto_153

@proto_154		TYPEDEF		PROTO STDCALL :DWORD, :DWORD, :DWORD, :LPDWORD
RaiseException		PROTO		@proto_154

@proto_155		TYPEDEF		PROTO STDCALL :PTR _EXCEPTION_POINTERS
UnhandledExceptionFilter		PROTO		@proto_155

@proto_156		TYPEDEF		PROTO STDCALL :LPSECURITY_ATTRIBUTES, :DWORD, :LPTHREAD_START_ROUTINE, :LPVOID, :DWORD, :LPDWORD
CreateThread		PROTO		@proto_156

@proto_157		TYPEDEF		PROTO STDCALL :HANDLE, :LPSECURITY_ATTRIBUTES, :DWORD, :LPTHREAD_START_ROUTINE, :LPVOID, :DWORD, :LPDWORD
CreateRemoteThread		PROTO		@proto_157

@proto_158		TYPEDEF		PROTO STDCALL 
GetCurrentThread		PROTO		@proto_158

@proto_159		TYPEDEF		PROTO STDCALL 
GetCurrentThreadId		PROTO		@proto_159

@proto_160		TYPEDEF		PROTO STDCALL :HANDLE, :SDWORD
SetThreadPriority		PROTO		@proto_160

@proto_161		TYPEDEF		PROTO STDCALL :HANDLE
GetThreadPriority		PROTO		@proto_161

@proto_162		TYPEDEF		PROTO STDCALL :DWORD
ExitThread		PROTO		@proto_162

@proto_163		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD
TerminateThread		PROTO		@proto_163

@proto_164		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD
GetExitCodeThread		PROTO		@proto_164

@proto_165		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :LPLDT_ENTRY
GetThreadSelectorEntry		PROTO		@proto_165

@proto_166		TYPEDEF		PROTO STDCALL 
GetLastError		PROTO		@proto_166

@proto_167		TYPEDEF		PROTO STDCALL :DWORD
SetLastError		PROTO		@proto_167

@proto_168		TYPEDEF		PROTO STDCALL 
GetThreadLocale		PROTO		@proto_168

@proto_169		TYPEDEF		PROTO STDCALL :LCID
SetThreadLocale		PROTO		@proto_169

SLE_ERROR		EQU		000000001h
SLE_MINORERROR		EQU		000000002h
SLE_WARNING		EQU		000000003h
@proto_170		TYPEDEF		PROTO STDCALL :DWORD, :DWORD
SetLastErrorEx		PROTO		@proto_170

@proto_171		TYPEDEF		PROTO STDCALL :HANDLE, :LPOVERLAPPED, :LPDWORD, :BOOL
GetOverlappedResult		PROTO		@proto_171

SEM_FAILCRITICALERRORS		EQU		000000001h
SEM_NOGPFAULTERRORBOX		EQU		000000002h
SEM_NOOPENFILEERRORBOX		EQU		000008000h
@proto_172		TYPEDEF		PROTO STDCALL :DWORD
SetDebugErrorLevel		PROTO		@proto_172

@proto_173		TYPEDEF		PROTO STDCALL :UINT
SetErrorMode		PROTO		@proto_173

@proto_174		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :LPVOID, :DWORD, :LPDWORD
ReadProcessMemory		PROTO		@proto_174

@proto_175		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :LPVOID, :DWORD, :LPDWORD
WriteProcessMemory		PROTO		@proto_175

@proto_176		TYPEDEF		PROTO STDCALL :HANDLE, :LPCONTEXT
GetThreadContext		PROTO		@proto_176

@proto_177		TYPEDEF		PROTO STDCALL :HANDLE, :LPCONTEXT
SetThreadContext		PROTO		@proto_177

@proto_178		TYPEDEF		PROTO STDCALL :HANDLE
SuspendThread		PROTO		@proto_178

@proto_179		TYPEDEF		PROTO STDCALL :HANDLE
ResumeThread		PROTO		@proto_179

@proto_180		TYPEDEF		PROTO STDCALL 
DebugBreak		PROTO		@proto_180

@proto_181		TYPEDEF		PROTO STDCALL :LPDEBUG_EVENT, :DWORD
WaitForDebugEvent		PROTO		@proto_181

@proto_182		TYPEDEF		PROTO STDCALL :DWORD, :DWORD, :DWORD
ContinueDebugEvent		PROTO		@proto_182

@proto_183		TYPEDEF		PROTO STDCALL :DWORD
DebugActiveProcess		PROTO		@proto_183

@proto_184		TYPEDEF		PROTO STDCALL :DWORD
DebugSnapShotProcessHeaps		PROTO		@proto_184

_DEBUG_HEAP_BACKTRACE		STRUCT 4t
Depth		DWORD		?
ReturnAddresses		DWORD		1t DUP (?)
_DEBUG_HEAP_BACKTRACE		ENDS

DEBUG_HEAP_BACKTRACE		TYPEDEF		_DEBUG_HEAP_BACKTRACE

PDEBUG_HEAP_BACKTRACE		TYPEDEF		PTR _DEBUG_HEAP_BACKTRACE

_DEBUG_HEAP_ALLOCATOR		STRUCT 4t
TotalBytesAllocated		DWORD		?
OffsetToBackTrace		DWORD		?
_DEBUG_HEAP_ALLOCATOR		ENDS

DEBUG_HEAP_ALLOCATOR		TYPEDEF		_DEBUG_HEAP_ALLOCATOR

PDEBUG_HEAP_ALLOCATOR		TYPEDEF		PTR _DEBUG_HEAP_ALLOCATOR

_DEBUG_HEAP_ENTRY		STRUCT 4t
Address		DWORD		?
_Size		USHORT		?
Allocator		USHORT		?
_DEBUG_HEAP_ENTRY		ENDS

DEBUG_HEAP_ENTRY		TYPEDEF		_DEBUG_HEAP_ENTRY

PDEBUG_HEAP_ENTRY		TYPEDEF		PTR _DEBUG_HEAP_ENTRY

DEBUG_HEAP_ENTRY_FREE		TEXTEQU		<(USHORT)-1>

@proto_185		TYPEDEF		PROTO STDCALL :LPCRITICAL_SECTION
InitializeCriticalSection		PROTO		@proto_185

@proto_186		TYPEDEF		PROTO STDCALL :LPCRITICAL_SECTION
EnterCriticalSection		PROTO		@proto_186

@proto_187		TYPEDEF		PROTO STDCALL :LPCRITICAL_SECTION
LeaveCriticalSection		PROTO		@proto_187

@proto_188		TYPEDEF		PROTO STDCALL :LPCRITICAL_SECTION
DeleteCriticalSection		PROTO		@proto_188

@proto_189		TYPEDEF		PROTO STDCALL :HANDLE
SetEvent		PROTO		@proto_189

@proto_190		TYPEDEF		PROTO STDCALL :HANDLE
ResetEvent		PROTO		@proto_190

@proto_191		TYPEDEF		PROTO STDCALL :HANDLE
PulseEvent		PROTO		@proto_191

@proto_192		TYPEDEF		PROTO STDCALL :HANDLE, :LONG, :LPLONG
ReleaseSemaphore		PROTO		@proto_192

@proto_193		TYPEDEF		PROTO STDCALL :HANDLE
ReleaseMutex		PROTO		@proto_193

@proto_194		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD
WaitForSingleObject		PROTO		@proto_194

@proto_195		TYPEDEF		PROTO STDCALL :DWORD, :LPHANDLE, :BOOL, :DWORD
WaitForMultipleObjects		PROTO		@proto_195

@proto_196		TYPEDEF		PROTO STDCALL :DWORD
Sleep		PROTO		@proto_196

@proto_197		TYPEDEF		PROTO STDCALL :HINSTANCE, :HRSRC
LoadResource		PROTO		@proto_197

@proto_198		TYPEDEF		PROTO STDCALL :HINSTANCE, :HRSRC
SizeofResource		PROTO		@proto_198

@proto_199		TYPEDEF		PROTO STDCALL :ATOM
GlobalDeleteAtom		PROTO		@proto_199

@proto_200		TYPEDEF		PROTO STDCALL :DWORD
InitAtomTable		PROTO		@proto_200

@proto_201		TYPEDEF		PROTO STDCALL :ATOM
DeleteAtom		PROTO		@proto_201

@proto_202		TYPEDEF		PROTO STDCALL :UINT
SetHandleCount		PROTO		@proto_202

@proto_203		TYPEDEF		PROTO STDCALL 
GetLogicalDrives		PROTO		@proto_203

@proto_204		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :DWORD, :DWORD
LockFile		PROTO		@proto_204

@proto_205		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :DWORD, :DWORD
UnlockFile		PROTO		@proto_205

@proto_206		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :DWORD, :DWORD, :LPOVERLAPPED
LockFileEx		PROTO		@proto_206

LOCKFILE_FAIL_IMMEDIATELY		EQU		000000001h
LOCKFILE_EXCLUSIVE_LOCK		EQU		000000002h
@proto_207		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :DWORD, :LPOVERLAPPED
UnlockFileEx		PROTO		@proto_207

_BY_HANDLE_FILE_INFORMATION		STRUCT 4t
dwFileAttributes		DWORD		?
ftCreationTime		FILETIME		<>
ftLastAccessTime		FILETIME		<>
ftLastWriteTime		FILETIME		<>
dwVolumeSerialNumber		DWORD		?
nFileSizeHigh		DWORD		?
nFileSizeLow		DWORD		?
nNumberOfLinks		DWORD		?
nFileIndexHigh		DWORD		?
nFileIndexLow		DWORD		?
_BY_HANDLE_FILE_INFORMATION		ENDS

BY_HANDLE_FILE_INFORMATION		TYPEDEF		_BY_HANDLE_FILE_INFORMATION

PBY_HANDLE_FILE_INFORMATION		TYPEDEF		PTR _BY_HANDLE_FILE_INFORMATION

LPBY_HANDLE_FILE_INFORMATION		TYPEDEF		PTR _BY_HANDLE_FILE_INFORMATION

@proto_208		TYPEDEF		PROTO STDCALL :HANDLE, :LPBY_HANDLE_FILE_INFORMATION
GetFileInformationByHandle		PROTO		@proto_208

@proto_209		TYPEDEF		PROTO STDCALL :HANDLE
GetFileType		PROTO		@proto_209

@proto_210		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD
GetFileSize		PROTO		@proto_210

@proto_211		TYPEDEF		PROTO STDCALL :DWORD
GetStdHandle		PROTO		@proto_211

@proto_212		TYPEDEF		PROTO STDCALL :DWORD, :HANDLE
SetStdHandle		PROTO		@proto_212

@proto_213		TYPEDEF		PROTO STDCALL :HANDLE, :PTR , :DWORD, :LPDWORD, :LPOVERLAPPED
WriteFile		PROTO		@proto_213

@proto_214		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :DWORD, :LPDWORD, :LPOVERLAPPED
ReadFile		PROTO		@proto_214

@proto_215		TYPEDEF		PROTO STDCALL :HANDLE
FlushFileBuffers		PROTO		@proto_215

@proto_216		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :LPVOID, :DWORD, :LPVOID, :DWORD, :LPDWORD, :LPOVERLAPPED
DeviceIoControl		PROTO		@proto_216

@proto_217		TYPEDEF		PROTO STDCALL :HANDLE
SetEndOfFile		PROTO		@proto_217

@proto_218		TYPEDEF		PROTO STDCALL :HANDLE, :LONG, :PLONG, :DWORD
SetFilePointer		PROTO		@proto_218

@proto_219		TYPEDEF		PROTO STDCALL :HANDLE
FindClose		PROTO		@proto_219

@proto_220		TYPEDEF		PROTO STDCALL :HANDLE, :LPFILETIME, :LPFILETIME, :LPFILETIME
GetFileTime		PROTO		@proto_220

@proto_221		TYPEDEF		PROTO STDCALL :HANDLE, :LPFILETIME, :LPFILETIME, :LPFILETIME
SetFileTime		PROTO		@proto_221

@proto_222		TYPEDEF		PROTO STDCALL :HANDLE
CloseHandle		PROTO		@proto_222

@proto_223		TYPEDEF		PROTO STDCALL :HANDLE, :HANDLE, :HANDLE, :LPHANDLE, :DWORD, :BOOL, :DWORD
DuplicateHandle		PROTO		@proto_223

@proto_224		TYPEDEF		PROTO STDCALL :LPCSTR, :LPVOID
LoadModule		PROTO		@proto_224

@proto_225		TYPEDEF		PROTO STDCALL :LPCSTR, :UINT
WinExec		PROTO		@proto_225

@proto_226		TYPEDEF		PROTO STDCALL :LPSTR, :LPDCB
BuildCommDCB		PROTO		@proto_226

@proto_227		TYPEDEF		PROTO STDCALL :LPSTR, :LPDCB, :LPCOMMTIMEOUTS
BuildCommDCBAndTimeouts		PROTO		@proto_227

@proto_228		TYPEDEF		PROTO STDCALL :HANDLE
ClearCommBreak		PROTO		@proto_228

@proto_229		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD, :LPCOMSTAT
ClearCommError		PROTO		@proto_229

@proto_230		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD
SetupComm		PROTO		@proto_230

@proto_231		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD
EscapeCommFunction		PROTO		@proto_231

@proto_232		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD
GetCommMask		PROTO		@proto_232

@proto_233		TYPEDEF		PROTO STDCALL :HANDLE, :LPCOMMPROP
GetCommProperties		PROTO		@proto_233

@proto_234		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD
GetCommModemStatus		PROTO		@proto_234

@proto_235		TYPEDEF		PROTO STDCALL :HANDLE, :LPDCB
GetCommState		PROTO		@proto_235

@proto_236		TYPEDEF		PROTO STDCALL :HANDLE, :LPCOMMTIMEOUTS
GetCommTimeouts		PROTO		@proto_236

@proto_237		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD
PurgeComm		PROTO		@proto_237

@proto_238		TYPEDEF		PROTO STDCALL :HANDLE
SetCommBreak		PROTO		@proto_238

@proto_239		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD
SetCommMask		PROTO		@proto_239

@proto_240		TYPEDEF		PROTO STDCALL :HANDLE, :LPDCB
SetCommState		PROTO		@proto_240

@proto_241		TYPEDEF		PROTO STDCALL :HANDLE, :LPCOMMTIMEOUTS
SetCommTimeouts		PROTO		@proto_241

@proto_242		TYPEDEF		PROTO STDCALL :HANDLE, :SBYTE
TransmitCommChar		PROTO		@proto_242

@proto_243		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD, :LPOVERLAPPED
WaitCommEvent		PROTO		@proto_243

@proto_244		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :DWORD, :DWORD, :BOOL
SetTapePosition		PROTO		@proto_244

@proto_245		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :LPDWORD, :LPDWORD, :LPDWORD
GetTapePosition		PROTO		@proto_245

@proto_246		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :BOOL
PrepareTape		PROTO		@proto_246

@proto_247		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :BOOL
EraseTape		PROTO		@proto_247

@proto_248		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :DWORD
CreateTapePartition		PROTO		@proto_248

@proto_249		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :BOOL
WriteTapemark		PROTO		@proto_249

@proto_250		TYPEDEF		PROTO STDCALL :HANDLE
GetTapeStatus		PROTO		@proto_250

@proto_251		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :LPDWORD, :LPVOID
GetTapeParameters		PROTO		@proto_251

GET_TAPE_MEDIA_INFORMATION		EQU		0t
GET_TAPE_DRIVE_INFORMATION		EQU		1t
@proto_252		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :LPVOID
SetTapeParameters		PROTO		@proto_252

SET_TAPE_MEDIA_INFORMATION		EQU		0t
SET_TAPE_DRIVE_INFORMATION		EQU		1t
@proto_253		TYPEDEF		PROTO STDCALL :DWORD, :DWORD
Beep		PROTO		@proto_253

@proto_254		TYPEDEF		PROTO STDCALL 
OpenSound		PROTO		@proto_254

@proto_255		TYPEDEF		PROTO STDCALL 
CloseSound		PROTO		@proto_255

@proto_256		TYPEDEF		PROTO STDCALL 
StartSound		PROTO		@proto_256

@proto_257		TYPEDEF		PROTO STDCALL 
StopSound		PROTO		@proto_257

@proto_258		TYPEDEF		PROTO STDCALL :DWORD
WaitSoundState		PROTO		@proto_258

@proto_259		TYPEDEF		PROTO STDCALL 
SyncAllVoices		PROTO		@proto_259

@proto_260		TYPEDEF		PROTO STDCALL :DWORD
CountVoiceNotes		PROTO		@proto_260

@proto_261		TYPEDEF		PROTO STDCALL 
GetThresholdEvent		PROTO		@proto_261

@proto_262		TYPEDEF		PROTO STDCALL 
GetThresholdStatus		PROTO		@proto_262

@proto_263		TYPEDEF		PROTO STDCALL :DWORD, :DWORD
SetSoundNoise		PROTO		@proto_263

@proto_264		TYPEDEF		PROTO STDCALL :DWORD, :DWORD, :DWORD, :DWORD, :DWORD
SetVoiceAccent		PROTO		@proto_264

@proto_265		TYPEDEF		PROTO STDCALL :DWORD, :DWORD, :DWORD
SetVoiceEnvelope		PROTO		@proto_265

@proto_266		TYPEDEF		PROTO STDCALL :DWORD, :DWORD, :DWORD, :DWORD
SetVoiceNote		PROTO		@proto_266

@proto_267		TYPEDEF		PROTO STDCALL :DWORD, :DWORD
SetVoiceQueueSize		PROTO		@proto_267

@proto_268		TYPEDEF		PROTO STDCALL :DWORD, :DWORD, :DWORD
SetVoiceSound		PROTO		@proto_268

@proto_269		TYPEDEF		PROTO STDCALL :DWORD, :DWORD
SetVoiceThreshold		PROTO		@proto_269

@proto_270		TYPEDEF		PROTO STDCALL :SDWORD, :SDWORD, :SDWORD
MulDiv		PROTO		@proto_270

@proto_271		TYPEDEF		PROTO STDCALL :LPSYSTEMTIME
GetSystemTime		PROTO		@proto_271

@proto_272		TYPEDEF		PROTO STDCALL :LPSYSTEMTIME
SetSystemTime		PROTO		@proto_272

@proto_273		TYPEDEF		PROTO STDCALL :LPSYSTEMTIME
GetLocalTime		PROTO		@proto_273

@proto_274		TYPEDEF		PROTO STDCALL :LPSYSTEMTIME
SetLocalTime		PROTO		@proto_274

@proto_275		TYPEDEF		PROTO STDCALL :LPSYSTEM_INFO
GetSystemInfo		PROTO		@proto_275

_TIME_ZONE_INFORMATION		STRUCT 4t
Bias		LONG		?
StandardName		WCHAR		32t DUP (?)
StandardDate		SYSTEMTIME		<>
StandardBias		LONG		?
DaylightName		WCHAR		32t DUP (?)
DaylightDate		SYSTEMTIME		<>
DaylightBias		LONG		?
_TIME_ZONE_INFORMATION		ENDS

TIME_ZONE_INFORMATION		TYPEDEF		_TIME_ZONE_INFORMATION

PTIME_ZONE_INFORMATION		TYPEDEF		PTR _TIME_ZONE_INFORMATION

LPTIME_ZONE_INFORMATION		TYPEDEF		PTR _TIME_ZONE_INFORMATION

@proto_276		TYPEDEF		PROTO STDCALL :LPTIME_ZONE_INFORMATION
GetTimeZoneInformation		PROTO		@proto_276

@proto_277		TYPEDEF		PROTO STDCALL :LPTIME_ZONE_INFORMATION
SetTimeZoneInformation		PROTO		@proto_277

@proto_278		TYPEDEF		PROTO STDCALL :LPSYSTEMTIME, :LPFILETIME
SystemTimeToFileTime		PROTO		@proto_278

@proto_279		TYPEDEF		PROTO STDCALL :LPFILETIME, :LPFILETIME
FileTimeToLocalFileTime		PROTO		@proto_279

@proto_280		TYPEDEF		PROTO STDCALL :LPFILETIME, :LPFILETIME
LocalFileTimeToFileTime		PROTO		@proto_280

@proto_281		TYPEDEF		PROTO STDCALL :LPFILETIME, :LPSYSTEMTIME
FileTimeToSystemTime		PROTO		@proto_281

@proto_282		TYPEDEF		PROTO STDCALL :LPFILETIME, :LPFILETIME
CompareFileTime		PROTO		@proto_282

@proto_283		TYPEDEF		PROTO STDCALL :LPFILETIME, :LPWORD, :LPWORD
FileTimeToDosDateTime		PROTO		@proto_283

@proto_284		TYPEDEF		PROTO STDCALL :WORD, :WORD, :LPFILETIME
DosDateTimeToFileTime		PROTO		@proto_284

@proto_285		TYPEDEF		PROTO STDCALL 
GetTickCount		PROTO		@proto_285

@proto_286		TYPEDEF		PROTO STDCALL :DWORD, :LPVOID, :DWORD, :DWORD, :LPSTR, :DWORD, :PTR 
FormatMessageA		PROTO		@proto_286

@proto_287		TYPEDEF		PROTO STDCALL :DWORD, :LPVOID, :DWORD, :DWORD, :LPWSTR, :DWORD, :PTR 
FormatMessageW		PROTO		@proto_287

FormatMessage		TEXTEQU		<FormatMessageA>
FORMAT_MESSAGE_ALLOCATE_BUFFER		EQU		000000100h
FORMAT_MESSAGE_IGNORE_INSERTS		EQU		000000200h
FORMAT_MESSAGE_FROM_STRING		EQU		000000400h
FORMAT_MESSAGE_FROM_HMODULE		EQU		000000800h
FORMAT_MESSAGE_FROM_SYSTEM		EQU		000001000h
FORMAT_MESSAGE_ARGUMENT_ARRAY		EQU		000002000h
FORMAT_MESSAGE_MAX_WIDTH_MASK		EQU		0000000ffh
@proto_288		TYPEDEF		PROTO STDCALL :PHANDLE, :PHANDLE, :LPSECURITY_ATTRIBUTES, :DWORD
CreatePipe		PROTO		@proto_288

@proto_289		TYPEDEF		PROTO STDCALL :HANDLE, :LPOVERLAPPED
ConnectNamedPipe		PROTO		@proto_289

@proto_290		TYPEDEF		PROTO STDCALL :HANDLE
DisconnectNamedPipe		PROTO		@proto_290

@proto_291		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD, :LPDWORD, :LPDWORD
SetNamedPipeHandleState		PROTO		@proto_291

@proto_292		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD, :LPDWORD, :LPDWORD, :LPDWORD
GetNamedPipeInfo		PROTO		@proto_292

@proto_293		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :DWORD, :LPDWORD, :LPDWORD, :LPDWORD
PeekNamedPipe		PROTO		@proto_293

@proto_294		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :DWORD, :LPVOID, :DWORD, :LPDWORD, :LPOVERLAPPED
TransactNamedPipe		PROTO		@proto_294

@proto_295		TYPEDEF		PROTO STDCALL :LPSTR, :DWORD, :DWORD, :LPSECURITY_ATTRIBUTES
CreateMailslotA		PROTO		@proto_295

@proto_296		TYPEDEF		PROTO STDCALL :LPWSTR, :DWORD, :DWORD, :LPSECURITY_ATTRIBUTES
CreateMailslotW		PROTO		@proto_296

CreateMailslot		TEXTEQU		<CreateMailslotA>
@proto_297		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD, :LPDWORD, :LPDWORD, :LPDWORD
GetMailslotInfo		PROTO		@proto_297

@proto_298		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD
SetMailslotInfo		PROTO		@proto_298

@proto_299		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :DWORD, :DWORD
MapViewOfFile		PROTO		@proto_299

@proto_300		TYPEDEF		PROTO STDCALL :LPVOID, :DWORD
FlushViewOfFile		PROTO		@proto_300

@proto_301		TYPEDEF		PROTO STDCALL :LPVOID
UnmapViewOfFile		PROTO		@proto_301

@proto_302		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR
lstrcmpA		PROTO		@proto_302

@proto_303		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR
lstrcmpW		PROTO		@proto_303

lstrcmp		TEXTEQU		<lstrcmpA>
@proto_304		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR
lstrcmpiA		PROTO		@proto_304

@proto_305		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR
lstrcmpiW		PROTO		@proto_305

lstrcmpi		TEXTEQU		<lstrcmpiA>
@proto_306		TYPEDEF		PROTO STDCALL :LPSTR, :LPCSTR
lstrcpyA		PROTO		@proto_306

@proto_307		TYPEDEF		PROTO STDCALL :LPWSTR, :LPCWSTR
lstrcpyW		PROTO		@proto_307

lstrcpy		TEXTEQU		<lstrcpyA>
@proto_308		TYPEDEF		PROTO STDCALL :LPSTR, :LPCSTR
lstrcatA		PROTO		@proto_308

@proto_309		TYPEDEF		PROTO STDCALL :LPWSTR, :LPCWSTR
lstrcatW		PROTO		@proto_309

lstrcat		TEXTEQU		<lstrcatA>
@proto_310		TYPEDEF		PROTO STDCALL :LPCSTR
lstrlenA		PROTO		@proto_310

@proto_311		TYPEDEF		PROTO STDCALL :LPCWSTR
lstrlenW		PROTO		@proto_311

lstrlen		TEXTEQU		<lstrlenA>
@proto_312		TYPEDEF		PROTO STDCALL :LPCSTR, :LPOFSTRUCT, :UINT
OpenFile		PROTO		@proto_312

@proto_313		TYPEDEF		PROTO STDCALL :LPCSTR, :SDWORD
_lopen		PROTO		@proto_313

@proto_314		TYPEDEF		PROTO STDCALL :LPCSTR, :SDWORD
_lcreat		PROTO		@proto_314

@proto_315		TYPEDEF		PROTO STDCALL :HFILE, :LPVOID, :UINT
_lread		PROTO		@proto_315

@proto_316		TYPEDEF		PROTO STDCALL :HFILE, :LPCSTR, :UINT
_lwrite		PROTO		@proto_316

@proto_317		TYPEDEF		PROTO STDCALL :HFILE, :LPVOID, :SDWORD
_hread		PROTO		@proto_317

@proto_318		TYPEDEF		PROTO STDCALL :HFILE, :LPCSTR, :SDWORD
_hwrite		PROTO		@proto_318

@proto_319		TYPEDEF		PROTO STDCALL :HFILE
_lclose		PROTO		@proto_319

@proto_320		TYPEDEF		PROTO STDCALL :HFILE, :LONG, :SDWORD
_llseek		PROTO		@proto_320

@proto_321		TYPEDEF		PROTO STDCALL 
TlsAlloc		PROTO		@proto_321

@proto_322		TYPEDEF		PROTO STDCALL :DWORD
TlsGetValue		PROTO		@proto_322

@proto_323		TYPEDEF		PROTO STDCALL :DWORD, :LPVOID
TlsSetValue		PROTO		@proto_323

@proto_324		TYPEDEF		PROTO STDCALL :DWORD
TlsFree		PROTO		@proto_324

@proto_325		TYPEDEF		PROTO STDCALL :DWORD, :DWORD, :LPOVERLAPPED
LPOVERLAPPED_COMPLETION_ROUTINE		TYPEDEF		PTR @proto_325

@proto_326		TYPEDEF		PROTO STDCALL :DWORD, :BOOL
SleepEx		PROTO		@proto_326

@proto_327		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :BOOL
WaitForSingleObjectEx		PROTO		@proto_327

@proto_328		TYPEDEF		PROTO STDCALL :DWORD, :LPHANDLE, :BOOL, :DWORD, :BOOL
WaitForMultipleObjectsEx		PROTO		@proto_328

@proto_329		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :DWORD, :LPOVERLAPPED, :LPOVERLAPPED_COMPLETION_ROUTINE
ReadFileEx		PROTO		@proto_329

@proto_330		TYPEDEF		PROTO STDCALL :HANDLE, :LPVOID, :DWORD, :LPOVERLAPPED, :LPOVERLAPPED_COMPLETION_ROUTINE
WriteFileEx		PROTO		@proto_330

@proto_331		TYPEDEF		PROTO STDCALL :HANDLE, :LPBYTE, :DWORD, :LPDWORD, :BOOL, :BOOL, :PTR LPVOID
BackupRead		PROTO		@proto_331

@proto_332		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :LPDWORD, :LPDWORD, :PTR LPVOID
BackupSeek		PROTO		@proto_332

@proto_333		TYPEDEF		PROTO STDCALL :HANDLE, :LPBYTE, :DWORD, :LPDWORD, :BOOL, :BOOL, :PTR LPVOID
BackupWrite		PROTO		@proto_333

_WIN32_STREAM_ID		STRUCT 4t
dwStreamId		DWORD		?
dwStreamAttributes		DWORD		?
_Size		LARGE_INTEGER		<>
dwStreamNameSize		DWORD		?
cStreamName		WCHAR		1t DUP (?)
_WIN32_STREAM_ID		ENDS

WIN32_STREAM_ID		TYPEDEF		_WIN32_STREAM_ID

LPWIN32_STREAM_ID		TYPEDEF		PTR _WIN32_STREAM_ID

BACKUP_DATA		EQU		000000001h
BACKUP_EA_DATA		EQU		000000002h
BACKUP_SECURITY_DATA		EQU		000000003h
BACKUP_ALTERNATE_DATA		EQU		000000004h
BACKUP_LINK		EQU		000000005h
STREAM_MODIFIED_WHEN_READ		EQU		000000001h
STREAM_CONTAINS_SECURITY		EQU		000000002h
STARTF_USESHOWWINDOW		EQU		000000001h
STARTF_USESIZE		EQU		000000002h
STARTF_USEPOSITION		EQU		000000004h
STARTF_USECOUNTCHARS		EQU		000000008h
STARTF_USEFILLATTRIBUTE		EQU		000000010h
STARTF_RUNFULLSCREEN		EQU		000000020h
STARTF_FORCEONFEEDBACK		EQU		000000040h
STARTF_FORCEOFFFEEDBACK		EQU		000000080h
STARTF_USESTDHANDLES		EQU		000000100h
_STARTUPINFOA		STRUCT 4t
cb		DWORD		?
lpReserved		LPSTR		?
lpDesktop		LPSTR		?
lpTitle		LPSTR		?
dwX		DWORD		?
dwY		DWORD		?
dwXSize		DWORD		?
dwYSize		DWORD		?
dwXCountChars		DWORD		?
dwYCountChars		DWORD		?
dwFillAttribute		DWORD		?
dwFlags		DWORD		?
wShowWindow		WORD		?
cbReserved2		WORD		?
lpReserved2		LPBYTE		?
hStdInput		HANDLE		?
hStdOutput		HANDLE		?
hStdError		HANDLE		?
_STARTUPINFOA		ENDS

STARTUPINFOA		TYPEDEF		_STARTUPINFOA

LPSTARTUPINFOA		TYPEDEF		PTR _STARTUPINFOA

_STARTUPINFOW		STRUCT 4t
cb		DWORD		?
lpReserved		LPWSTR		?
lpDesktop		LPWSTR		?
lpTitle		LPWSTR		?
dwX		DWORD		?
dwY		DWORD		?
dwXSize		DWORD		?
dwYSize		DWORD		?
dwXCountChars		DWORD		?
dwYCountChars		DWORD		?
dwFillAttribute		DWORD		?
dwFlags		DWORD		?
wShowWindow		WORD		?
cbReserved2		WORD		?
lpReserved2		LPBYTE		?
hStdInput		HANDLE		?
hStdOutput		HANDLE		?
hStdError		HANDLE		?
_STARTUPINFOW		ENDS

STARTUPINFOW		TYPEDEF		_STARTUPINFOW

LPSTARTUPINFOW		TYPEDEF		PTR _STARTUPINFOW

STARTUPINFO		TYPEDEF		STARTUPINFOA

LPSTARTUPINFO		TYPEDEF		LPSTARTUPINFOA

SHUTDOWN_NORETRY		EQU		000000001h
_WIN32_FIND_DATAA		STRUCT 4t
dwFileAttributes		DWORD		?
ftCreationTime		FILETIME		<>
ftLastAccessTime		FILETIME		<>
ftLastWriteTime		FILETIME		<>
nFileSizeHigh		DWORD		?
nFileSizeLow		DWORD		?
dwReserved0		DWORD		?
dwReserved1		DWORD		?
cFileName		CHAR		260t DUP (?)
cAlternateFileName		CHAR		14t DUP (?)
_WIN32_FIND_DATAA		ENDS

WIN32_FIND_DATAA		TYPEDEF		_WIN32_FIND_DATAA

PWIN32_FIND_DATAA		TYPEDEF		PTR _WIN32_FIND_DATAA

LPWIN32_FIND_DATAA		TYPEDEF		PTR _WIN32_FIND_DATAA

_WIN32_FIND_DATAW		STRUCT 4t
dwFileAttributes		DWORD		?
ftCreationTime		FILETIME		<>
ftLastAccessTime		FILETIME		<>
ftLastWriteTime		FILETIME		<>
nFileSizeHigh		DWORD		?
nFileSizeLow		DWORD		?
dwReserved0		DWORD		?
dwReserved1		DWORD		?
cFileName		WCHAR		260t DUP (?)
cAlternateFileName		WCHAR		14t DUP (?)
_WIN32_FIND_DATAW		ENDS

WIN32_FIND_DATAW		TYPEDEF		_WIN32_FIND_DATAW

PWIN32_FIND_DATAW		TYPEDEF		PTR _WIN32_FIND_DATAW

LPWIN32_FIND_DATAW		TYPEDEF		PTR _WIN32_FIND_DATAW

WIN32_FIND_DATA		TYPEDEF		WIN32_FIND_DATAA

PWIN32_FIND_DATA		TYPEDEF		PWIN32_FIND_DATAA

LPWIN32_FIND_DATA		TYPEDEF		LPWIN32_FIND_DATAA

@proto_334		TYPEDEF		PROTO STDCALL :LPSECURITY_ATTRIBUTES, :BOOL, :LPSTR
CreateMutexA		PROTO		@proto_334

@proto_335		TYPEDEF		PROTO STDCALL :LPSECURITY_ATTRIBUTES, :BOOL, :LPWSTR
CreateMutexW		PROTO		@proto_335

CreateMutex		TEXTEQU		<CreateMutexA>
@proto_336		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :LPSTR
OpenMutexA		PROTO		@proto_336

@proto_337		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :LPWSTR
OpenMutexW		PROTO		@proto_337

OpenMutex		TEXTEQU		<OpenMutexA>
@proto_338		TYPEDEF		PROTO STDCALL :LPSECURITY_ATTRIBUTES, :BOOL, :BOOL, :LPSTR
CreateEventA		PROTO		@proto_338

@proto_339		TYPEDEF		PROTO STDCALL :LPSECURITY_ATTRIBUTES, :BOOL, :BOOL, :LPWSTR
CreateEventW		PROTO		@proto_339

CreateEvent		TEXTEQU		<CreateEventA>
@proto_340		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :LPSTR
OpenEventA		PROTO		@proto_340

@proto_341		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :LPWSTR
OpenEventW		PROTO		@proto_341

OpenEvent		TEXTEQU		<OpenEventA>
@proto_342		TYPEDEF		PROTO STDCALL :LPSECURITY_ATTRIBUTES, :LONG, :LONG, :LPSTR
CreateSemaphoreA		PROTO		@proto_342

@proto_343		TYPEDEF		PROTO STDCALL :LPSECURITY_ATTRIBUTES, :LONG, :LONG, :LPWSTR
CreateSemaphoreW		PROTO		@proto_343

CreateSemaphore		TEXTEQU		<CreateSemaphoreA>
@proto_344		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :LPSTR
OpenSemaphoreA		PROTO		@proto_344

@proto_345		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :LPWSTR
OpenSemaphoreW		PROTO		@proto_345

OpenSemaphore		TEXTEQU		<OpenSemaphoreA>
@proto_346		TYPEDEF		PROTO STDCALL :HANDLE, :LPSECURITY_ATTRIBUTES, :DWORD, :DWORD, :DWORD, :LPSTR
CreateFileMappingA		PROTO		@proto_346

@proto_347		TYPEDEF		PROTO STDCALL :HANDLE, :LPSECURITY_ATTRIBUTES, :DWORD, :DWORD, :DWORD, :LPWSTR
CreateFileMappingW		PROTO		@proto_347

CreateFileMapping		TEXTEQU		<CreateFileMappingA>
@proto_348		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :LPSTR
OpenFileMappingA		PROTO		@proto_348

@proto_349		TYPEDEF		PROTO STDCALL :DWORD, :BOOL, :LPWSTR
OpenFileMappingW		PROTO		@proto_349

OpenFileMapping		TEXTEQU		<OpenFileMappingA>
@proto_350		TYPEDEF		PROTO STDCALL :DWORD, :LPSTR
GetLogicalDriveStringsA		PROTO		@proto_350

@proto_351		TYPEDEF		PROTO STDCALL :DWORD, :LPWSTR
GetLogicalDriveStringsW		PROTO		@proto_351

GetLogicalDriveStrings		TEXTEQU		<GetLogicalDriveStringsA>
@proto_352		TYPEDEF		PROTO STDCALL :LPCSTR
LoadLibraryA		PROTO		@proto_352

@proto_353		TYPEDEF		PROTO STDCALL :LPCWSTR
LoadLibraryW		PROTO		@proto_353

LoadLibrary		TEXTEQU		<LoadLibraryA>
@proto_354		TYPEDEF		PROTO STDCALL :LPCSTR, :HANDLE, :DWORD
LoadLibraryExA		PROTO		@proto_354

@proto_355		TYPEDEF		PROTO STDCALL :LPCWSTR, :HANDLE, :DWORD
LoadLibraryExW		PROTO		@proto_355

LoadLibraryEx		TEXTEQU		<LoadLibraryExA>
DONT_RESOLVE_DLL_REFERENCES		EQU		000000001h
@proto_356		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPSTR, :DWORD
GetModuleFileNameA		PROTO		@proto_356

@proto_357		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPWSTR, :DWORD
GetModuleFileNameW		PROTO		@proto_357

GetModuleFileName		TEXTEQU		<GetModuleFileNameA>
@proto_358		TYPEDEF		PROTO STDCALL :LPCSTR
GetModuleHandleA		PROTO		@proto_358

@proto_359		TYPEDEF		PROTO STDCALL :LPCWSTR
GetModuleHandleW		PROTO		@proto_359

GetModuleHandle		TEXTEQU		<GetModuleHandleA>
@proto_360		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :LPSECURITY_ATTRIBUTES, :LPSECURITY_ATTRIBUTES, :BOOL, :DWORD, :LPVOID, :LPSTR, :LPSTARTUPINFOA, :LPPROCESS_INFORMATION
CreateProcessA		PROTO		@proto_360

@proto_361		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :LPSECURITY_ATTRIBUTES, :LPSECURITY_ATTRIBUTES, :BOOL, :DWORD, :LPVOID, :LPWSTR, :LPSTARTUPINFOW, :LPPROCESS_INFORMATION
CreateProcessW		PROTO		@proto_361

CreateProcess		TEXTEQU		<CreateProcessA>
@proto_362		TYPEDEF		PROTO STDCALL :DWORD, :DWORD
SetProcessShutdownParameters		PROTO		@proto_362

@proto_363		TYPEDEF		PROTO STDCALL :LPDWORD, :LPDWORD
GetProcessShutdownParameters		PROTO		@proto_363

@proto_364		TYPEDEF		PROTO STDCALL :UINT, :LPCSTR
FatalAppExitA		PROTO		@proto_364

@proto_365		TYPEDEF		PROTO STDCALL :UINT, :LPCWSTR
FatalAppExitW		PROTO		@proto_365

FatalAppExit		TEXTEQU		<FatalAppExitA>
@proto_366		TYPEDEF		PROTO STDCALL :LPSTARTUPINFOA
GetStartupInfoA		PROTO		@proto_366

@proto_367		TYPEDEF		PROTO STDCALL :LPSTARTUPINFOW
GetStartupInfoW		PROTO		@proto_367

GetStartupInfo		TEXTEQU		<GetStartupInfoA>
@proto_368		TYPEDEF		PROTO STDCALL 
GetCommandLineA		PROTO		@proto_368

@proto_369		TYPEDEF		PROTO STDCALL 
GetCommandLineW		PROTO		@proto_369

GetCommandLine		TEXTEQU		<GetCommandLineA>
@proto_370		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR, :DWORD
GetEnvironmentVariableA		PROTO		@proto_370

@proto_371		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR, :DWORD
GetEnvironmentVariableW		PROTO		@proto_371

GetEnvironmentVariable		TEXTEQU		<GetEnvironmentVariableA>
@proto_372		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR
SetEnvironmentVariableA		PROTO		@proto_372

@proto_373		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR
SetEnvironmentVariableW		PROTO		@proto_373

SetEnvironmentVariable		TEXTEQU		<SetEnvironmentVariableA>
@proto_374		TYPEDEF		PROTO STDCALL :LPCSTR, :LPSTR, :DWORD
ExpandEnvironmentStringsA		PROTO		@proto_374

@proto_375		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPWSTR, :DWORD
ExpandEnvironmentStringsW		PROTO		@proto_375

ExpandEnvironmentStrings		TEXTEQU		<ExpandEnvironmentStringsA>
@proto_376		TYPEDEF		PROTO STDCALL :LPCSTR
OutputDebugStringA		PROTO		@proto_376

@proto_377		TYPEDEF		PROTO STDCALL :LPCWSTR
OutputDebugStringW		PROTO		@proto_377

OutputDebugString		TEXTEQU		<OutputDebugStringA>
@proto_378		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCSTR, :LPCSTR
FindResourceA		PROTO		@proto_378

@proto_379		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCWSTR, :LPCWSTR
FindResourceW		PROTO		@proto_379

FindResource		TEXTEQU		<FindResourceA>
@proto_380		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCSTR, :LPCSTR, :WORD
FindResourceExA		PROTO		@proto_380

@proto_381		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCWSTR, :LPCWSTR, :WORD
FindResourceExW		PROTO		@proto_381

FindResourceEx		TEXTEQU		<FindResourceExA>
ENUMRESTYPEPROC		TYPEDEF		FARPROC

ENUMRESNAMEPROC		TYPEDEF		FARPROC

ENUMRESLANGPROC		TYPEDEF		FARPROC

@proto_382		TYPEDEF		PROTO STDCALL :HINSTANCE, :ENUMRESTYPEPROC, :LONG
EnumResourceTypesA		PROTO		@proto_382

@proto_383		TYPEDEF		PROTO STDCALL :HINSTANCE, :ENUMRESTYPEPROC, :LONG
EnumResourceTypesW		PROTO		@proto_383

EnumResourceTypes		TEXTEQU		<EnumResourceTypesA>
@proto_384		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCSTR, :ENUMRESNAMEPROC, :LONG
EnumResourceNamesA		PROTO		@proto_384

@proto_385		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCWSTR, :ENUMRESNAMEPROC, :LONG
EnumResourceNamesW		PROTO		@proto_385

EnumResourceNames		TEXTEQU		<EnumResourceNamesA>
@proto_386		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCSTR, :LPCSTR, :ENUMRESLANGPROC, :LONG
EnumResourceLanguagesA		PROTO		@proto_386

@proto_387		TYPEDEF		PROTO STDCALL :HINSTANCE, :LPCWSTR, :LPCWSTR, :ENUMRESLANGPROC, :LONG
EnumResourceLanguagesW		PROTO		@proto_387

EnumResourceLanguages		TEXTEQU		<EnumResourceLanguagesA>
@proto_388		TYPEDEF		PROTO STDCALL :LPSTR, :BOOL
BeginUpdateResourceA		PROTO		@proto_388

@proto_389		TYPEDEF		PROTO STDCALL :LPWSTR, :BOOL
BeginUpdateResourceW		PROTO		@proto_389

BeginUpdateResource		TEXTEQU		<BeginUpdateResourceA>
@proto_390		TYPEDEF		PROTO STDCALL :HANDLE, :LPSTR, :LPSTR, :WORD, :LPVOID, :DWORD
UpdateResourceA		PROTO		@proto_390

@proto_391		TYPEDEF		PROTO STDCALL :HANDLE, :LPWSTR, :LPWSTR, :WORD, :LPVOID, :DWORD
UpdateResourceW		PROTO		@proto_391

UpdateResource		TEXTEQU		<UpdateResourceA>
@proto_392		TYPEDEF		PROTO STDCALL :HANDLE, :BOOL
EndUpdateResourceA		PROTO		@proto_392

@proto_393		TYPEDEF		PROTO STDCALL :HANDLE, :BOOL
EndUpdateResourceW		PROTO		@proto_393

EndUpdateResource		TEXTEQU		<EndUpdateResourceA>
@proto_394		TYPEDEF		PROTO STDCALL :LPCSTR
GlobalAddAtomA		PROTO		@proto_394

@proto_395		TYPEDEF		PROTO STDCALL :LPCWSTR
GlobalAddAtomW		PROTO		@proto_395

GlobalAddAtom		TEXTEQU		<GlobalAddAtomA>
@proto_396		TYPEDEF		PROTO STDCALL :LPCSTR
GlobalFindAtomA		PROTO		@proto_396

@proto_397		TYPEDEF		PROTO STDCALL :LPCWSTR
GlobalFindAtomW		PROTO		@proto_397

GlobalFindAtom		TEXTEQU		<GlobalFindAtomA>
@proto_398		TYPEDEF		PROTO STDCALL :ATOM, :LPSTR, :SDWORD
GlobalGetAtomNameA		PROTO		@proto_398

@proto_399		TYPEDEF		PROTO STDCALL :ATOM, :LPWSTR, :SDWORD
GlobalGetAtomNameW		PROTO		@proto_399

GlobalGetAtomName		TEXTEQU		<GlobalGetAtomNameA>
@proto_400		TYPEDEF		PROTO STDCALL :LPCSTR
AddAtomA		PROTO		@proto_400

@proto_401		TYPEDEF		PROTO STDCALL :LPCWSTR
AddAtomW		PROTO		@proto_401

AddAtom		TEXTEQU		<AddAtomA>
@proto_402		TYPEDEF		PROTO STDCALL :LPCSTR
FindAtomA		PROTO		@proto_402

@proto_403		TYPEDEF		PROTO STDCALL :LPCWSTR
FindAtomW		PROTO		@proto_403

FindAtom		TEXTEQU		<FindAtomA>
@proto_404		TYPEDEF		PROTO STDCALL :ATOM, :LPSTR, :SDWORD
GetAtomNameA		PROTO		@proto_404

@proto_405		TYPEDEF		PROTO STDCALL :ATOM, :LPWSTR, :SDWORD
GetAtomNameW		PROTO		@proto_405

GetAtomName		TEXTEQU		<GetAtomNameA>
@proto_406		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :_INT
GetProfileIntA		PROTO		@proto_406

@proto_407		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :_INT
GetProfileIntW		PROTO		@proto_407

GetProfileInt		TEXTEQU		<GetProfileIntA>
@proto_408		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :LPCSTR, :LPSTR, :DWORD
GetProfileStringA		PROTO		@proto_408

@proto_409		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :LPCWSTR, :LPWSTR, :DWORD
GetProfileStringW		PROTO		@proto_409

GetProfileString		TEXTEQU		<GetProfileStringA>
@proto_410		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :LPCSTR
WriteProfileStringA		PROTO		@proto_410

@proto_411		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :LPCWSTR
WriteProfileStringW		PROTO		@proto_411

WriteProfileString		TEXTEQU		<WriteProfileStringA>
@proto_412		TYPEDEF		PROTO STDCALL :LPCSTR, :LPSTR, :DWORD
GetProfileSectionA		PROTO		@proto_412

@proto_413		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPWSTR, :DWORD
GetProfileSectionW		PROTO		@proto_413

GetProfileSection		TEXTEQU		<GetProfileSectionA>
@proto_414		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR
WriteProfileSectionA		PROTO		@proto_414

@proto_415		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR
WriteProfileSectionW		PROTO		@proto_415

WriteProfileSection		TEXTEQU		<WriteProfileSectionA>
@proto_416		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :_INT, :LPCSTR
GetPrivateProfileIntA		PROTO		@proto_416

@proto_417		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :_INT, :LPCWSTR
GetPrivateProfileIntW		PROTO		@proto_417

GetPrivateProfileInt		TEXTEQU		<GetPrivateProfileIntA>
@proto_418		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :LPCSTR, :LPSTR, :DWORD, :LPCSTR
GetPrivateProfileStringA		PROTO		@proto_418

@proto_419		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :LPCWSTR, :LPWSTR, :DWORD, :LPCWSTR
GetPrivateProfileStringW		PROTO		@proto_419

GetPrivateProfileString		TEXTEQU		<GetPrivateProfileStringA>
@proto_420		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :LPCSTR, :LPCSTR
WritePrivateProfileStringA		PROTO		@proto_420

@proto_421		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :LPCWSTR, :LPCWSTR
WritePrivateProfileStringW		PROTO		@proto_421

WritePrivateProfileString		TEXTEQU		<WritePrivateProfileStringA>
@proto_422		TYPEDEF		PROTO STDCALL :LPCSTR, :LPSTR, :DWORD, :LPCSTR
GetPrivateProfileSectionA		PROTO		@proto_422

@proto_423		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPWSTR, :DWORD, :LPCWSTR
GetPrivateProfileSectionW		PROTO		@proto_423

GetPrivateProfileSection		TEXTEQU		<GetPrivateProfileSectionA>
@proto_424		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :LPCSTR
WritePrivateProfileSectionA		PROTO		@proto_424

@proto_425		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :LPCWSTR
WritePrivateProfileSectionW		PROTO		@proto_425

WritePrivateProfileSection		TEXTEQU		<WritePrivateProfileSectionA>
@proto_426		TYPEDEF		PROTO STDCALL :LPSTR
GetDriveTypeA		PROTO		@proto_426

@proto_427		TYPEDEF		PROTO STDCALL :LPWSTR
GetDriveTypeW		PROTO		@proto_427

GetDriveType		TEXTEQU		<GetDriveTypeA>
@proto_428		TYPEDEF		PROTO STDCALL :LPSTR, :UINT
GetSystemDirectoryA		PROTO		@proto_428

@proto_429		TYPEDEF		PROTO STDCALL :LPWSTR, :UINT
GetSystemDirectoryW		PROTO		@proto_429

GetSystemDirectory		TEXTEQU		<GetSystemDirectoryA>
@proto_430		TYPEDEF		PROTO STDCALL :DWORD, :LPSTR
GetTempPathA		PROTO		@proto_430

@proto_431		TYPEDEF		PROTO STDCALL :DWORD, :LPWSTR
GetTempPathW		PROTO		@proto_431

GetTempPath		TEXTEQU		<GetTempPathA>
@proto_432		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :UINT, :LPSTR
GetTempFileNameA		PROTO		@proto_432

@proto_433		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :UINT, :LPWSTR
GetTempFileNameW		PROTO		@proto_433

GetTempFileName		TEXTEQU		<GetTempFileNameA>
@proto_434		TYPEDEF		PROTO STDCALL :LPSTR, :UINT
GetWindowsDirectoryA		PROTO		@proto_434

@proto_435		TYPEDEF		PROTO STDCALL :LPWSTR, :UINT
GetWindowsDirectoryW		PROTO		@proto_435

GetWindowsDirectory		TEXTEQU		<GetWindowsDirectoryA>
@proto_436		TYPEDEF		PROTO STDCALL :LPSTR
SetCurrentDirectoryA		PROTO		@proto_436

@proto_437		TYPEDEF		PROTO STDCALL :LPWSTR
SetCurrentDirectoryW		PROTO		@proto_437

SetCurrentDirectory		TEXTEQU		<SetCurrentDirectoryA>
@proto_438		TYPEDEF		PROTO STDCALL :DWORD, :LPSTR
GetCurrentDirectoryA		PROTO		@proto_438

@proto_439		TYPEDEF		PROTO STDCALL :DWORD, :LPWSTR
GetCurrentDirectoryW		PROTO		@proto_439

GetCurrentDirectory		TEXTEQU		<GetCurrentDirectoryA>
@proto_440		TYPEDEF		PROTO STDCALL :LPSTR, :LPDWORD, :LPDWORD, :LPDWORD, :LPDWORD
GetDiskFreeSpaceA		PROTO		@proto_440

@proto_441		TYPEDEF		PROTO STDCALL :LPWSTR, :LPDWORD, :LPDWORD, :LPDWORD, :LPDWORD
GetDiskFreeSpaceW		PROTO		@proto_441

GetDiskFreeSpace		TEXTEQU		<GetDiskFreeSpaceA>
@proto_442		TYPEDEF		PROTO STDCALL :LPSTR, :LPSECURITY_ATTRIBUTES
CreateDirectoryA		PROTO		@proto_442

@proto_443		TYPEDEF		PROTO STDCALL :LPWSTR, :LPSECURITY_ATTRIBUTES
CreateDirectoryW		PROTO		@proto_443

CreateDirectory		TEXTEQU		<CreateDirectoryA>
@proto_444		TYPEDEF		PROTO STDCALL :LPSTR
RemoveDirectoryA		PROTO		@proto_444

@proto_445		TYPEDEF		PROTO STDCALL :LPWSTR
RemoveDirectoryW		PROTO		@proto_445

RemoveDirectory		TEXTEQU		<RemoveDirectoryA>
@proto_446		TYPEDEF		PROTO STDCALL :LPCSTR, :DWORD, :LPSTR, :PTR LPSTR
GetFullPathNameA		PROTO		@proto_446

@proto_447		TYPEDEF		PROTO STDCALL :LPCWSTR, :DWORD, :LPWSTR, :PTR LPWSTR
GetFullPathNameW		PROTO		@proto_447

GetFullPathName		TEXTEQU		<GetFullPathNameA>
DDD_RAW_TARGET_PATH		EQU		000000001h
DDD_REMOVE_DEFINITION		EQU		000000002h
DDD_EXACT_MATCH_ON_REMOVE		EQU		000000004h
@proto_448		TYPEDEF		PROTO STDCALL :DWORD, :LPCSTR, :LPCSTR
DefineDosDeviceA		PROTO		@proto_448

@proto_449		TYPEDEF		PROTO STDCALL :DWORD, :LPCWSTR, :LPCWSTR
DefineDosDeviceW		PROTO		@proto_449

DefineDosDevice		TEXTEQU		<DefineDosDeviceA>
@proto_450		TYPEDEF		PROTO STDCALL :LPCSTR, :LPSTR, :DWORD
QueryDosDeviceA		PROTO		@proto_450

@proto_451		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPWSTR, :DWORD
QueryDosDeviceW		PROTO		@proto_451

QueryDosDevice		TEXTEQU		<QueryDosDeviceA>
EXPAND_LOCAL_DRIVES		TEXTEQU		<>
@proto_452		TYPEDEF		PROTO STDCALL :LPCSTR, :DWORD, :DWORD, :LPSECURITY_ATTRIBUTES, :DWORD, :DWORD, :HANDLE
CreateFileA		PROTO		@proto_452

@proto_453		TYPEDEF		PROTO STDCALL :LPCWSTR, :DWORD, :DWORD, :LPSECURITY_ATTRIBUTES, :DWORD, :DWORD, :HANDLE
CreateFileW		PROTO		@proto_453

CreateFile		TEXTEQU		<CreateFileA>
@proto_454		TYPEDEF		PROTO STDCALL :LPSTR, :DWORD
SetFileAttributesA		PROTO		@proto_454

@proto_455		TYPEDEF		PROTO STDCALL :LPWSTR, :DWORD
SetFileAttributesW		PROTO		@proto_455

SetFileAttributes		TEXTEQU		<SetFileAttributesA>
@proto_456		TYPEDEF		PROTO STDCALL :LPSTR
GetFileAttributesA		PROTO		@proto_456

@proto_457		TYPEDEF		PROTO STDCALL :LPWSTR
GetFileAttributesW		PROTO		@proto_457

GetFileAttributes		TEXTEQU		<GetFileAttributesA>
@proto_458		TYPEDEF		PROTO STDCALL :LPSTR
DeleteFileA		PROTO		@proto_458

@proto_459		TYPEDEF		PROTO STDCALL :LPWSTR
DeleteFileW		PROTO		@proto_459

DeleteFile		TEXTEQU		<DeleteFileA>
@proto_460		TYPEDEF		PROTO STDCALL :LPSTR, :LPWIN32_FIND_DATAA
FindFirstFileA		PROTO		@proto_460

@proto_461		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWIN32_FIND_DATAW
FindFirstFileW		PROTO		@proto_461

FindFirstFile		TEXTEQU		<FindFirstFileA>
@proto_462		TYPEDEF		PROTO STDCALL :HANDLE, :LPWIN32_FIND_DATAA
FindNextFileA		PROTO		@proto_462

@proto_463		TYPEDEF		PROTO STDCALL :HANDLE, :LPWIN32_FIND_DATAW
FindNextFileW		PROTO		@proto_463

FindNextFile		TEXTEQU		<FindNextFileA>
@proto_464		TYPEDEF		PROTO STDCALL :LPCSTR, :LPCSTR, :LPCSTR, :DWORD, :LPSTR, :PTR LPSTR
SearchPathA		PROTO		@proto_464

@proto_465		TYPEDEF		PROTO STDCALL :LPCWSTR, :LPCWSTR, :LPCWSTR, :DWORD, :LPWSTR, :PTR LPWSTR
SearchPathW		PROTO		@proto_465

SearchPath		TEXTEQU		<SearchPathA>
@proto_466		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR, :BOOL
CopyFileA		PROTO		@proto_466

@proto_467		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR, :BOOL
CopyFileW		PROTO		@proto_467

CopyFile		TEXTEQU		<CopyFileA>
@proto_468		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR
MoveFileA		PROTO		@proto_468

@proto_469		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR
MoveFileW		PROTO		@proto_469

MoveFile		TEXTEQU		<MoveFileA>
@proto_470		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR, :DWORD
MoveFileExA		PROTO		@proto_470

@proto_471		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR, :DWORD
MoveFileExW		PROTO		@proto_471

MoveFileEx		TEXTEQU		<MoveFileExA>
MOVEFILE_REPLACE_EXISTING		EQU		000000001h
MOVEFILE_COPY_ALLOWED		EQU		000000002h
MOVEFILE_DELAY_UNTIL_REBOOT		EQU		000000004h
@proto_472		TYPEDEF		PROTO STDCALL :LPSTR, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :LPSECURITY_ATTRIBUTES
CreateNamedPipeA		PROTO		@proto_472

@proto_473		TYPEDEF		PROTO STDCALL :LPWSTR, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :LPSECURITY_ATTRIBUTES
CreateNamedPipeW		PROTO		@proto_473

CreateNamedPipe		TEXTEQU		<CreateNamedPipeA>
@proto_474		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD, :LPDWORD, :LPDWORD, :LPDWORD, :LPSTR, :DWORD
GetNamedPipeHandleStateA		PROTO		@proto_474

@proto_475		TYPEDEF		PROTO STDCALL :HANDLE, :LPDWORD, :LPDWORD, :LPDWORD, :LPDWORD, :LPWSTR, :DWORD
GetNamedPipeHandleStateW		PROTO		@proto_475

GetNamedPipeHandleState		TEXTEQU		<GetNamedPipeHandleStateA>
@proto_476		TYPEDEF		PROTO STDCALL :LPSTR, :LPVOID, :DWORD, :LPVOID, :DWORD, :LPDWORD, :DWORD
CallNamedPipeA		PROTO		@proto_476

@proto_477		TYPEDEF		PROTO STDCALL :LPWSTR, :LPVOID, :DWORD, :LPVOID, :DWORD, :LPDWORD, :DWORD
CallNamedPipeW		PROTO		@proto_477

CallNamedPipe		TEXTEQU		<CallNamedPipeA>
@proto_478		TYPEDEF		PROTO STDCALL :LPSTR, :DWORD
WaitNamedPipeA		PROTO		@proto_478

@proto_479		TYPEDEF		PROTO STDCALL :LPWSTR, :DWORD
WaitNamedPipeW		PROTO		@proto_479

WaitNamedPipe		TEXTEQU		<WaitNamedPipeA>
@proto_480		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR
SetVolumeLabelA		PROTO		@proto_480

@proto_481		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR
SetVolumeLabelW		PROTO		@proto_481

SetVolumeLabel		TEXTEQU		<SetVolumeLabelA>
@proto_482		TYPEDEF		PROTO STDCALL 
SetFileApisToOEM		PROTO		@proto_482

@proto_483		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR, :DWORD, :LPDWORD, :LPDWORD, :LPDWORD, :LPSTR, :DWORD
GetVolumeInformationA		PROTO		@proto_483

@proto_484		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR, :DWORD, :LPDWORD, :LPDWORD, :LPDWORD, :LPWSTR, :DWORD
GetVolumeInformationW		PROTO		@proto_484

GetVolumeInformation		TEXTEQU		<GetVolumeInformationA>
@proto_485		TYPEDEF		PROTO STDCALL :HANDLE, :LPSTR
ClearEventLogA		PROTO		@proto_485

@proto_486		TYPEDEF		PROTO STDCALL :HANDLE, :LPWSTR
ClearEventLogW		PROTO		@proto_486

ClearEventLog		TEXTEQU		<ClearEventLogA>
@proto_487		TYPEDEF		PROTO STDCALL :HANDLE, :LPSTR
BackupEventLogA		PROTO		@proto_487

@proto_488		TYPEDEF		PROTO STDCALL :HANDLE, :LPWSTR
BackupEventLogW		PROTO		@proto_488

BackupEventLog		TEXTEQU		<BackupEventLogA>
@proto_489		TYPEDEF		PROTO STDCALL :HANDLE
CloseEventLog		PROTO		@proto_489

@proto_490		TYPEDEF		PROTO STDCALL :HANDLE
DeregisterEventSource		PROTO		@proto_490

@proto_491		TYPEDEF		PROTO STDCALL :HANDLE, :PDWORD
GetNumberOfEventLogRecords		PROTO		@proto_491

@proto_492		TYPEDEF		PROTO STDCALL :HANDLE, :PDWORD
GetOldestEventLogRecord		PROTO		@proto_492

@proto_493		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR
OpenEventLogA		PROTO		@proto_493

@proto_494		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR
OpenEventLogW		PROTO		@proto_494

OpenEventLog		TEXTEQU		<OpenEventLogA>
@proto_495		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR
RegisterEventSourceA		PROTO		@proto_495

@proto_496		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR
RegisterEventSourceW		PROTO		@proto_496

RegisterEventSource		TEXTEQU		<RegisterEventSourceA>
@proto_497		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR
OpenBackupEventLogA		PROTO		@proto_497

@proto_498		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR
OpenBackupEventLogW		PROTO		@proto_498

OpenBackupEventLog		TEXTEQU		<OpenBackupEventLogA>
@proto_499		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :LPVOID, :DWORD, :PTR DWORD, :PTR DWORD
ReadEventLogA		PROTO		@proto_499

@proto_500		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :LPVOID, :DWORD, :PTR DWORD, :PTR DWORD
ReadEventLogW		PROTO		@proto_500

ReadEventLog		TEXTEQU		<ReadEventLogA>
@proto_501		TYPEDEF		PROTO STDCALL :HANDLE, :WORD, :WORD, :DWORD, :PSID, :WORD, :DWORD, :PTR LPSTR, :LPVOID
ReportEventA		PROTO		@proto_501

@proto_502		TYPEDEF		PROTO STDCALL :HANDLE, :WORD, :WORD, :DWORD, :PSID, :WORD, :DWORD, :PTR LPWSTR, :LPVOID
ReportEventW		PROTO		@proto_502

ReportEvent		TEXTEQU		<ReportEventA>
@proto_503		TYPEDEF		PROTO STDCALL :HANDLE, :SECURITY_IMPERSONATION_LEVEL, :PHANDLE
DuplicateToken		PROTO		@proto_503

@proto_504		TYPEDEF		PROTO STDCALL :HANDLE, :SECURITY_INFORMATION, :PSECURITY_DESCRIPTOR, :DWORD, :LPDWORD
GetKernelObjectSecurity		PROTO		@proto_504

@proto_505		TYPEDEF		PROTO STDCALL :HANDLE
ImpersonateNamedPipeClient		PROTO		@proto_505

@proto_506		TYPEDEF		PROTO STDCALL :SECURITY_IMPERSONATION_LEVEL
ImpersonateSelf		PROTO		@proto_506

@proto_507		TYPEDEF		PROTO STDCALL 
RevertToSelf		PROTO		@proto_507

@proto_508		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :HANDLE, :DWORD, :PGENERIC_MAPPING, :PPRIVILEGE_SET, :LPDWORD, :LPDWORD, :LPBOOL
AccessCheck		PROTO		@proto_508

@proto_509		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :PHANDLE
OpenProcessToken		PROTO		@proto_509

@proto_510		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :BOOL, :PHANDLE
OpenThreadToken		PROTO		@proto_510

@proto_511		TYPEDEF		PROTO STDCALL :HANDLE, :TOKEN_INFORMATION_CLASS, :LPVOID, :DWORD, :PDWORD
GetTokenInformation		PROTO		@proto_511

@proto_512		TYPEDEF		PROTO STDCALL :HANDLE, :TOKEN_INFORMATION_CLASS, :LPVOID, :DWORD
SetTokenInformation		PROTO		@proto_512

@proto_513		TYPEDEF		PROTO STDCALL :HANDLE, :BOOL, :PTOKEN_PRIVILEGES, :DWORD, :PTOKEN_PRIVILEGES, :PDWORD
AdjustTokenPrivileges		PROTO		@proto_513

@proto_514		TYPEDEF		PROTO STDCALL :HANDLE, :BOOL, :PTOKEN_GROUPS, :DWORD, :PTOKEN_GROUPS, :PDWORD
AdjustTokenGroups		PROTO		@proto_514

@proto_515		TYPEDEF		PROTO STDCALL :HANDLE, :PPRIVILEGE_SET, :LPBOOL
PrivilegeCheck		PROTO		@proto_515

@proto_516		TYPEDEF		PROTO STDCALL :LPSTR, :LPVOID, :LPSTR, :LPSTR, :PSECURITY_DESCRIPTOR, :DWORD, :PGENERIC_MAPPING, :BOOL, :LPDWORD, :LPBOOL, :LPBOOL
AccessCheckAndAuditAlarmA		PROTO		@proto_516

@proto_517		TYPEDEF		PROTO STDCALL :LPWSTR, :LPVOID, :LPWSTR, :LPWSTR, :PSECURITY_DESCRIPTOR, :DWORD, :PGENERIC_MAPPING, :BOOL, :LPDWORD, :LPBOOL, :LPBOOL
AccessCheckAndAuditAlarmW		PROTO		@proto_517

AccessCheckAndAuditAlarm		TEXTEQU		<AccessCheckAndAuditAlarmA>
@proto_518		TYPEDEF		PROTO STDCALL :LPSTR, :LPVOID, :LPSTR, :LPSTR, :PSECURITY_DESCRIPTOR, :HANDLE, :DWORD, :DWORD, :PPRIVILEGE_SET, :BOOL, :BOOL, :LPBOOL
ObjectOpenAuditAlarmA		PROTO		@proto_518

@proto_519		TYPEDEF		PROTO STDCALL :LPWSTR, :LPVOID, :LPWSTR, :LPWSTR, :PSECURITY_DESCRIPTOR, :HANDLE, :DWORD, :DWORD, :PPRIVILEGE_SET, :BOOL, :BOOL, :LPBOOL
ObjectOpenAuditAlarmW		PROTO		@proto_519

ObjectOpenAuditAlarm		TEXTEQU		<ObjectOpenAuditAlarmA>
@proto_520		TYPEDEF		PROTO STDCALL :LPSTR, :LPVOID, :HANDLE, :DWORD, :PPRIVILEGE_SET, :BOOL
ObjectPrivilegeAuditAlarmA		PROTO		@proto_520

@proto_521		TYPEDEF		PROTO STDCALL :LPWSTR, :LPVOID, :HANDLE, :DWORD, :PPRIVILEGE_SET, :BOOL
ObjectPrivilegeAuditAlarmW		PROTO		@proto_521

ObjectPrivilegeAuditAlarm		TEXTEQU		<ObjectPrivilegeAuditAlarmA>
@proto_522		TYPEDEF		PROTO STDCALL :LPSTR, :LPVOID, :BOOL
ObjectCloseAuditAlarmA		PROTO		@proto_522

@proto_523		TYPEDEF		PROTO STDCALL :LPWSTR, :LPVOID, :BOOL
ObjectCloseAuditAlarmW		PROTO		@proto_523

ObjectCloseAuditAlarm		TEXTEQU		<ObjectCloseAuditAlarmA>
@proto_524		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR, :HANDLE, :PPRIVILEGE_SET, :BOOL
PrivilegedServiceAuditAlarmA		PROTO		@proto_524

@proto_525		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR, :HANDLE, :PPRIVILEGE_SET, :BOOL
PrivilegedServiceAuditAlarmW		PROTO		@proto_525

PrivilegedServiceAuditAlarm		TEXTEQU		<PrivilegedServiceAuditAlarmA>
@proto_526		TYPEDEF		PROTO STDCALL :PSID
IsValidSid		PROTO		@proto_526

@proto_527		TYPEDEF		PROTO STDCALL :PSID, :PSID
EqualSid		PROTO		@proto_527

@proto_528		TYPEDEF		PROTO STDCALL :PSID, :PSID
EqualPrefixSid		PROTO		@proto_528

@proto_529		TYPEDEF		PROTO STDCALL :UCHAR
GetSidLengthRequired		PROTO		@proto_529

@proto_530		TYPEDEF		PROTO STDCALL :PSID_IDENTIFIER_AUTHORITY, :BYTE, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :PTR PSID
AllocateAndInitializeSid		PROTO		@proto_530

@proto_531		TYPEDEF		PROTO STDCALL :PSID
FreeSid		PROTO		@proto_531

@proto_532		TYPEDEF		PROTO STDCALL :PSID, :PSID_IDENTIFIER_AUTHORITY, :BYTE
InitializeSid		PROTO		@proto_532

@proto_533		TYPEDEF		PROTO STDCALL :PSID
GetSidIdentifierAuthority		PROTO		@proto_533

@proto_534		TYPEDEF		PROTO STDCALL :PSID, :DWORD
GetSidSubAuthority		PROTO		@proto_534

@proto_535		TYPEDEF		PROTO STDCALL :PSID
GetSidSubAuthorityCount		PROTO		@proto_535

@proto_536		TYPEDEF		PROTO STDCALL :PSID
GetLengthSid		PROTO		@proto_536

@proto_537		TYPEDEF		PROTO STDCALL :DWORD, :PSID, :PSID
CopySid		PROTO		@proto_537

@proto_538		TYPEDEF		PROTO STDCALL :DWORD, :DWORD
AreAllAccessesGranted		PROTO		@proto_538

@proto_539		TYPEDEF		PROTO STDCALL :DWORD, :DWORD
AreAnyAccessesGranted		PROTO		@proto_539

@proto_540		TYPEDEF		PROTO STDCALL :PDWORD, :PGENERIC_MAPPING
MapGenericMask		PROTO		@proto_540

@proto_541		TYPEDEF		PROTO STDCALL :PACL
IsValidAcl		PROTO		@proto_541

@proto_542		TYPEDEF		PROTO STDCALL :PACL, :DWORD, :DWORD
InitializeAcl		PROTO		@proto_542

@proto_543		TYPEDEF		PROTO STDCALL :PACL, :LPVOID, :DWORD, :ACL_INFORMATION_CLASS
GetAclInformation		PROTO		@proto_543

@proto_544		TYPEDEF		PROTO STDCALL :PACL, :LPVOID, :DWORD, :ACL_INFORMATION_CLASS
SetAclInformation		PROTO		@proto_544

@proto_545		TYPEDEF		PROTO STDCALL :PACL, :DWORD, :DWORD, :LPVOID, :DWORD
AddAce		PROTO		@proto_545

@proto_546		TYPEDEF		PROTO STDCALL :PACL, :DWORD
DeleteAce		PROTO		@proto_546

@proto_547		TYPEDEF		PROTO STDCALL :PACL, :DWORD, :PTR LPVOID
GetAce		PROTO		@proto_547

@proto_548		TYPEDEF		PROTO STDCALL :PACL, :DWORD, :DWORD, :PSID
AddAccessAllowedAce		PROTO		@proto_548

@proto_549		TYPEDEF		PROTO STDCALL :PACL, :DWORD, :DWORD, :PSID
AddAccessDeniedAce		PROTO		@proto_549

@proto_550		TYPEDEF		PROTO STDCALL :PACL, :DWORD, :DWORD, :PSID, :BOOL, :BOOL
AddAuditAccessAce		PROTO		@proto_550

@proto_551		TYPEDEF		PROTO STDCALL :PACL, :PTR LPVOID
FindFirstFreeAce		PROTO		@proto_551

@proto_552		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :DWORD
InitializeSecurityDescriptor		PROTO		@proto_552

@proto_553		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR
IsValidSecurityDescriptor		PROTO		@proto_553

@proto_554		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR
GetSecurityDescriptorLength		PROTO		@proto_554

@proto_555		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :PSECURITY_DESCRIPTOR_CONTROL, :LPDWORD
GetSecurityDescriptorControl		PROTO		@proto_555

@proto_556		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :BOOL, :PACL, :BOOL
SetSecurityDescriptorDacl		PROTO		@proto_556

@proto_557		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :LPBOOL, :PTR PACL, :LPBOOL
GetSecurityDescriptorDacl		PROTO		@proto_557

@proto_558		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :BOOL, :PACL, :BOOL
SetSecurityDescriptorSacl		PROTO		@proto_558

@proto_559		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :LPBOOL, :PTR PACL, :LPBOOL
GetSecurityDescriptorSacl		PROTO		@proto_559

@proto_560		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :PSID, :BOOL
SetSecurityDescriptorOwner		PROTO		@proto_560

@proto_561		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :PTR PSID, :LPBOOL
GetSecurityDescriptorOwner		PROTO		@proto_561

@proto_562		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :PSID, :BOOL
SetSecurityDescriptorGroup		PROTO		@proto_562

@proto_563		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :PTR PSID, :LPBOOL
GetSecurityDescriptorGroup		PROTO		@proto_563

@proto_564		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :PSECURITY_DESCRIPTOR, :PTR PSECURITY_DESCRIPTOR, :BOOL, :HANDLE, :PGENERIC_MAPPING
CreatePrivateObjectSecurity		PROTO		@proto_564

@proto_565		TYPEDEF		PROTO STDCALL :SECURITY_INFORMATION, :PSECURITY_DESCRIPTOR, :PTR PSECURITY_DESCRIPTOR, :PGENERIC_MAPPING, :HANDLE
SetPrivateObjectSecurity		PROTO		@proto_565

@proto_566		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :SECURITY_INFORMATION, :PSECURITY_DESCRIPTOR, :DWORD, :PDWORD
GetPrivateObjectSecurity		PROTO		@proto_566

@proto_567		TYPEDEF		PROTO STDCALL :PTR PSECURITY_DESCRIPTOR
DestroyPrivateObjectSecurity		PROTO		@proto_567

@proto_568		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :PSECURITY_DESCRIPTOR, :LPDWORD
MakeSelfRelativeSD		PROTO		@proto_568

@proto_569		TYPEDEF		PROTO STDCALL :PSECURITY_DESCRIPTOR, :PSECURITY_DESCRIPTOR, :LPDWORD, :PACL, :LPDWORD, :PACL, :LPDWORD, :PSID, :LPDWORD, :PSID, :LPDWORD
MakeAbsoluteSD		PROTO		@proto_569

@proto_570		TYPEDEF		PROTO STDCALL :LPSTR, :SECURITY_INFORMATION, :PSECURITY_DESCRIPTOR
SetFileSecurityA		PROTO		@proto_570

@proto_571		TYPEDEF		PROTO STDCALL :LPWSTR, :SECURITY_INFORMATION, :PSECURITY_DESCRIPTOR
SetFileSecurityW		PROTO		@proto_571

SetFileSecurity		TEXTEQU		<SetFileSecurityA>
@proto_572		TYPEDEF		PROTO STDCALL :LPSTR, :SECURITY_INFORMATION, :PSECURITY_DESCRIPTOR, :DWORD, :LPDWORD
GetFileSecurityA		PROTO		@proto_572

@proto_573		TYPEDEF		PROTO STDCALL :LPWSTR, :SECURITY_INFORMATION, :PSECURITY_DESCRIPTOR, :DWORD, :LPDWORD
GetFileSecurityW		PROTO		@proto_573

GetFileSecurity		TEXTEQU		<GetFileSecurityA>
@proto_574		TYPEDEF		PROTO STDCALL :HANDLE, :SECURITY_INFORMATION, :PSECURITY_DESCRIPTOR
SetKernelObjectSecurity		PROTO		@proto_574

@proto_575		TYPEDEF		PROTO STDCALL :LPSTR, :BOOL, :DWORD
FindFirstChangeNotificationA		PROTO		@proto_575

@proto_576		TYPEDEF		PROTO STDCALL :LPWSTR, :BOOL, :DWORD
FindFirstChangeNotificationW		PROTO		@proto_576

FindFirstChangeNotification		TEXTEQU		<FindFirstChangeNotificationA>
@proto_577		TYPEDEF		PROTO STDCALL :HANDLE
FindNextChangeNotification		PROTO		@proto_577

@proto_578		TYPEDEF		PROTO STDCALL :HANDLE
FindCloseChangeNotification		PROTO		@proto_578

@proto_579		TYPEDEF		PROTO STDCALL :LPVOID, :DWORD
VirtualLock		PROTO		@proto_579

@proto_580		TYPEDEF		PROTO STDCALL :LPVOID, :DWORD
VirtualUnlock		PROTO		@proto_580

@proto_581		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD, :DWORD, :DWORD, :DWORD, :LPVOID
MapViewOfFileEx		PROTO		@proto_581

@proto_582		TYPEDEF		PROTO STDCALL :HANDLE, :DWORD
SetPriorityClass		PROTO		@proto_582

@proto_583		TYPEDEF		PROTO STDCALL :HANDLE
GetPriorityClass		PROTO		@proto_583

@proto_584		TYPEDEF		PROTO STDCALL :PTR , :UINT
IsBadReadPtr		PROTO		@proto_584

@proto_585		TYPEDEF		PROTO STDCALL :LPVOID, :UINT
IsBadWritePtr		PROTO		@proto_585

@proto_586		TYPEDEF		PROTO STDCALL :PTR , :UINT
IsBadHugeReadPtr		PROTO		@proto_586

@proto_587		TYPEDEF		PROTO STDCALL :LPVOID, :UINT
IsBadHugeWritePtr		PROTO		@proto_587

@proto_588		TYPEDEF		PROTO STDCALL :FARPROC
IsBadCodePtr		PROTO		@proto_588

@proto_589		TYPEDEF		PROTO STDCALL :LPCSTR, :UINT
IsBadStringPtrA		PROTO		@proto_589

@proto_590		TYPEDEF		PROTO STDCALL :LPCWSTR, :UINT
IsBadStringPtrW		PROTO		@proto_590

IsBadStringPtr		TEXTEQU		<IsBadStringPtrA>
@proto_591		TYPEDEF		PROTO STDCALL :LPSTR, :PSID, :LPSTR, :LPDWORD, :LPSTR, :LPDWORD, :PSID_NAME_USE
LookupAccountSidA		PROTO		@proto_591

@proto_592		TYPEDEF		PROTO STDCALL :LPWSTR, :PSID, :LPWSTR, :LPDWORD, :LPWSTR, :LPDWORD, :PSID_NAME_USE
LookupAccountSidW		PROTO		@proto_592

LookupAccountSid		TEXTEQU		<LookupAccountSidA>
@proto_593		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR, :PSID, :LPDWORD, :LPSTR, :LPDWORD, :PSID_NAME_USE
LookupAccountNameA		PROTO		@proto_593

@proto_594		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR, :PSID, :LPDWORD, :LPWSTR, :LPDWORD, :PSID_NAME_USE
LookupAccountNameW		PROTO		@proto_594

LookupAccountName		TEXTEQU		<LookupAccountNameA>
@proto_595		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR, :PLUID
LookupPrivilegeValueA		PROTO		@proto_595

@proto_596		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR, :PLUID
LookupPrivilegeValueW		PROTO		@proto_596

LookupPrivilegeValue		TEXTEQU		<LookupPrivilegeValueA>
@proto_597		TYPEDEF		PROTO STDCALL :LPSTR, :PLUID, :LPSTR, :LPDWORD
LookupPrivilegeNameA		PROTO		@proto_597

@proto_598		TYPEDEF		PROTO STDCALL :LPWSTR, :PLUID, :LPWSTR, :LPDWORD
LookupPrivilegeNameW		PROTO		@proto_598

LookupPrivilegeName		TEXTEQU		<LookupPrivilegeNameA>
@proto_599		TYPEDEF		PROTO STDCALL :LPSTR, :LPSTR, :LPSTR, :LPDWORD, :LPDWORD
LookupPrivilegeDisplayNameA		PROTO		@proto_599

@proto_600		TYPEDEF		PROTO STDCALL :LPWSTR, :LPWSTR, :LPWSTR, :LPDWORD, :LPDWORD
LookupPrivilegeDisplayNameW		PROTO		@proto_600

LookupPrivilegeDisplayName		TEXTEQU		<LookupPrivilegeDisplayNameA>
@proto_601		TYPEDEF		PROTO STDCALL :PLUID
AllocateLocallyUniqueId		PROTO		@proto_601

@proto_602		TYPEDEF		PROTO STDCALL :LPSTR, :LPDCB
BuildCommDCBA		PROTO		@proto_602

@proto_603		TYPEDEF		PROTO STDCALL :LPWSTR, :LPDCB
BuildCommDCBW		PROTO		@proto_603

@proto_604		TYPEDEF		PROTO STDCALL :LPSTR, :LPDCB, :LPCOMMTIMEOUTS
BuildCommDCBAndTimeoutsA		PROTO		@proto_604

@proto_605		TYPEDEF		PROTO STDCALL :LPWSTR, :LPDCB, :LPCOMMTIMEOUTS
BuildCommDCBAndTimeoutsW		PROTO		@proto_605

MAX_COMPUTERNAME_LENGTH		EQU		15t
@proto_606		TYPEDEF		PROTO STDCALL :LPSTR, :LPDWORD
GetComputerNameA		PROTO		@proto_606

@proto_607		TYPEDEF		PROTO STDCALL :LPWSTR, :LPDWORD
GetComputerNameW		PROTO		@proto_607

GetComputerName		TEXTEQU		<GetComputerNameA>
@proto_608		TYPEDEF		PROTO STDCALL :LPSTR
SetComputerNameA		PROTO		@proto_608

@proto_609		TYPEDEF		PROTO STDCALL :LPWSTR
SetComputerNameW		PROTO		@proto_609

SetComputerName		TEXTEQU		<SetComputerNameA>
@proto_610		TYPEDEF		PROTO STDCALL :LPSTR, :LPDWORD
GetUserNameA		PROTO		@proto_610

@proto_611		TYPEDEF		PROTO STDCALL :LPWSTR, :LPDWORD
GetUserNameW		PROTO		@proto_611

GetUserName		TEXTEQU		<GetUserNameA>
@proto_612		TYPEDEF		PROTO STDCALL :PTR LARGE_INTEGER
QueryPerformanceCounter		PROTO		@proto_612

@proto_613		TYPEDEF		PROTO STDCALL :PTR LARGE_INTEGER
QueryPerformanceFrequency		PROTO		@proto_613

;; ** NT 1.0a API additions

@proto_614		TYPEDEF 	PROTO STDCALL :HMODULE
DisableThreadLibraryCalls	PROTO		@proto_614

@proto_615		TYPEDEF 	PROTO STDCALL :HMODULE, :DWORD
FreeLibraryAndExitThread	PROTO		@proto_615

;; **


; End of file winbase.h
; End of file winbase.hi
